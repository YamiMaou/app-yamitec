{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{Component,Fragment,useState,useRef}from'react';import{connect}from'react-redux';import{bindActionCreators}from'redux';import{DataGrid,RowsProp,ColDef}from'@material-ui/data-grid';import{setSnackbar}from\"../../actions/appActions\";import{DEFAULT_LOCALE_TEXT}from\"../../providers/langs/datagrid\";import{makeStyles}from'@material-ui/core/styles';import Card from'@material-ui/core/Card';import CardActionArea from'@material-ui/core/CardActionArea';import CardActions from'@material-ui/core/CardActions';import CardContent from'@material-ui/core/CardContent';import CardMedia from'@material-ui/core/CardMedia';import Button from'@material-ui/core/Button';import Typography from'@material-ui/core/Typography';import TextField from'@material-ui/core/TextField';import Input from'@material-ui/core/Input';import InputLabel from'@material-ui/core/InputLabel';import MenuItem from'@material-ui/core/MenuItem';import FormHelperText from'@material-ui/core/FormHelperText';import FormControl from'@material-ui/core/FormControl';import Select from'@material-ui/core/Select';import IconButton from'@material-ui/core/IconButton';import FilterListIcon from'@material-ui/icons/FilterList';import SearchIcon from'@material-ui/icons/Search';import ReorderIcon from'@material-ui/icons/Reorder';import ptBR from\"date-fns/locale/pt-BR\";import Grid from'@material-ui/core/Grid';import DateFnsUtils from'@date-io/date-fns';import{MuiPickersUtilsProvider,KeyboardTimePicker,KeyboardDatePicker}from'@material-ui/pickers';import PropTypes from'prop-types';import MaskedInput from'react-text-mask';import{validaCpf}from\"../../providers/commonMethods\";var idNumbers=['cpf','cnpj'];function TextMaskCustom(props){var inputRef=props.inputRef,other=_objectWithoutProperties(props,[\"inputRef\"]);return React.createElement(MaskedInput,_extends({},other,{ref:function ref(_ref){inputRef(_ref?_ref.inputElement:null);},value:props.value,mask:props.mask,placeholderChar:\"\\u2000\"}));}var DateInput=function DateInput(props){var _props$label;var _useState=useState(new Date('2021-02-13')),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];function handleChange(value){var e={target:{id:props.id,value:\"\"+value.toJSON().split('T')[0]}};try{props.onChange(e);}catch(err){console.log(err);}setValue(value);}return React.createElement(MuiPickersUtilsProvider,{utils:DateFnsUtils,locale:ptBR},React.createElement(Grid,{justify:\"space-around\",style:{flexGrow:0,marginTop:18}},React.createElement(KeyboardDatePicker,{margin:\"normal\",id:props.id,value:props.value,label:(_props$label=props.label)!=null?_props$label:'Data',format:\"dd/MM/yyyy\",value:value,onChange:handleChange,onBlur:handleChange,KeyboardButtonProps:{'aria-label':'change date'}})));};var SelectInput=function SelectInput(props){var _useState3=useState(props.values[0]),_useState4=_slicedToArray(_useState3,2),value=_useState4[0],setValue=_useState4[1];function handleChange(e){props.onBlur(e);setValue(e.target.value);}return React.createElement(FormControl,{id:props.column,style:_objectSpread(_objectSpread({},props.style),{},{marginTop:'25px'})},React.createElement(InputLabel,{id:props.column},props.label),React.createElement(Select,{labelId:props.id,id:props.id,name:props.name,value:props.value,onChange:handleChange,onBlur:handleChange},props.values.map(function(val){return React.createElement(MenuItem,{value:val},val);})));};var LDataGrid=function(_Component){_inherits(LDataGrid,_Component);var _super=_createSuper(LDataGrid);function LDataGrid(){var _this;_classCallCheck(this,LDataGrid);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={data:[],filters:{},filter:'flex',loading:true};return _this;}_createClass(LDataGrid,[{key:\"setPage\",value:function setPage(){var params,cleanfilters,query,data,_args=arguments;return _regeneratorRuntime.async(function setPage$(_context){while(1){switch(_context.prev=_context.next){case 0:params=_args.length>0&&_args[0]!==undefined?_args[0]:{page:1};this.setState(_objectSpread(_objectSpread({},this.state),{},{loading:true}));cleanfilters={};Object.entries(params).map(function(item){if(item[1].length>=1){if(item[1]!==\"Todos\"){cleanfilters[item[0]]=item[1];console.log(item);}}});query=_extends({queryType:'like',withId:\"name\"},cleanfilters);console.log(query);_context.next=8;return _regeneratorRuntime.awrap(this.props.pageRequest(query));case 8:data=_context.sent;if(data!==undefined){this.setState(_objectSpread(_objectSpread({},this.state),{},{data:data,loading:false}));}case 10:case\"end\":return _context.stop();}}},null,this,null,Promise);}},{key:\"componentDidMount\",value:function componentDidMount(){var filters;return _regeneratorRuntime.async(function componentDidMount$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:this.setPage();filters={};this.props.filterInputs.map(function(input){var _input$value;filters[input.column]=(_input$value=input.value)!=null?_input$value:\"\";});this.setState(_objectSpread(_objectSpread({},this.state),{},{filters:filters}));case 4:case\"end\":return _context2.stop();}}},null,this,null,Promise);}},{key:\"render\",value:function render(){var _this2=this,_this$state$data$data,_this$state$data$tota;var classes={m5:{margin:5,marginTop:25},root:{maxWidth:345,marginBottom:25},media:{height:140}};var filters=this.state.filters;var onChangeInputs=function onChangeInputs(e){var value=e.target.value;if(idNumbers.includes(e.target.id)){value=value.replace(/[^\\d]+/g,'');}if(value.length==0||e.target.value=='Todos'){var _e$target$id;delete filters[(_e$target$id=e.target.id)!=null?_e$target$id:e.target.name];}else{var _e$target$id2;if(e.target.id=='created_at'){value=\"\"+value.toJSON().split('T')[0];}if(e.target.id=='nome'){}if(idNumbers.includes(e.target.id)){value=value.replace(/[^\\d]+/g,'');}filters[(_e$target$id2=e.target.id)!=null?_e$target$id2:e.target.name]=value;_this2.setState(_objectSpread(_objectSpread({},_this2.state),{},{filters:filters}));}};var onClearFilter=function onClearFilter(){var filters={};_this2.props.filterInputs.map(function(input){var _input$value2;filters[input.column]=(_input$value2=input.value)!=null?_input$value2:\"\";});_this2.setState(_objectSpread(_objectSpread({},_this2.state),{},{filters:filters}));};return React.createElement(\"div\",null,React.createElement(Card,{className:classes.root,style:{marginBottom:15}},React.createElement(CardContent,null,React.createElement(Typography,{onClick:function onClick(){_this2.setState(_objectSpread(_objectSpread({},_this2.state),{},{filter:_this2.state.filter=='none'?'flex':'none'}));}},React.createElement(FilterListIcon,null),\" Filtros\"),React.createElement(\"div\",{id:\"filter-form\",style:{alignItems:'center',flexFlow:'row wrap',justifyContent:'space-around',display:this.state.filter}},this.props.filterInputs.map(function(input){if(input.type==\"text\"){var _input$grow,_input$flexBasis,_input$grow2,_this2$state$filters$,_this2$state$filters$2;if(input.mask===undefined)return React.createElement(TextField,{style:_objectSpread(_objectSpread({},classes.m5),{},{flexGrow:(_input$grow=input.grow)!=null?_input$grow:0,flexBasis:(_input$flexBasis=input.flexBasis)!=null?_input$flexBasis:'30%'}),id:input.column,label:input.label,onChange:onChangeInputs,onBlur:onChangeInputs});else return React.createElement(FormControl,{style:_objectSpread(_objectSpread({},classes.m5),{},{flexGrow:(_input$grow2=input.grow)!=null?_input$grow2:0})},React.createElement(InputLabel,{htmlFor:\"formatted-text-mask-input\"},input.label),React.createElement(Input,{value:(_this2$state$filters$=_this2.state.filters[input.column])!=null?_this2$state$filters$:\"\",onChange:onChangeInputs,onFocus:function onFocus(e){if(e.target.value.length==0){e.target.setSelectionRange(0,e.target.value.length);}},name:input.column,id:input.column,value:(_this2$state$filters$2=_this2.state.filters[input.column])!=null?_this2$state$filters$2:\"\",inputProps:{mask:input.mask},inputComponent:TextMaskCustom}));}else if(input.type==\"date\"){var _input$grow3;return React.createElement(DateInput,{id:input.column,style:_objectSpread(_objectSpread({},classes.m5),{},{flexGrow:(_input$grow3=input.grow)!=null?_input$grow3:0}),onBlur:onChangeInputs});}else if(input.type==\"select\"){var _this2$state$filters$3,_input$grow4;return React.createElement(SelectInput,{id:input.column,label:input.label,name:input.column,value:(_this2$state$filters$3=_this2.state.filters[input.column])!=null?_this2$state$filters$3:\"\",values:input.values,style:_objectSpread(_objectSpread({},classes.m5),{},{flexGrow:(_input$grow4=input.grow)!=null?_input$grow4:0}),onBlur:onChangeInputs});}}),React.createElement(\"div\",null,React.createElement(Button,{size:\"small\",style:{margin:5},startIcon:React.createElement(SearchIcon,null),variant:\"contained\",color:\"primary\",onClick:function onClick(){_this2.setPage(_this2.state.filters);}},\" Pesquisar\"),React.createElement(Button,{size:\"small\",style:{margin:5},startIcon:React.createElement(ReorderIcon,null),variant:\"contained\",color:\"primary\",onClick:function onClick(){onClearFilter();}},\" Limpar\"))))),React.createElement(Card,null,React.createElement(CardContent,null,React.createElement(\"div\",{style:{height:300,width:'100%'}},React.createElement(DataGrid,{rows:(_this$state$data$data=this.state.data.data)!=null?_this$state$data$data:[],columns:this.props.columns,className:{MuiDataGrid:{root:{'& .MuiDataGrid-window':{overFlow:'hidden'}}}},disableClickEventBubbling:true,disableColumnMenu:true,loading:this.state.loading,localeText:DEFAULT_LOCALE_TEXT,paginationMode:\"server\",rowCount:(_this$state$data$tota=this.state.data.total)!=null?_this$state$data$tota:0,pageSize:10,rowsPerPageOptions:[10,20,50],pagination:true,onPageSizeChange:function onPageSizeChange(params){_this2.setPage({page:params.page,pageSize:params.pageSize});},onPageChange:function onPageChange(params){_this2.setPage({page:params.page,pageSize:params.pageSize});}}))),React.createElement(CardActionArea,null),React.createElement(CardActions,null)));}}]);return LDataGrid;}(Component);var mapStateToProps=function mapStateToProps(store){return{};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return bindActionCreators({setSnackbar:setSnackbar},dispatch);};export default connect(mapStateToProps,mapDispatchToProps)(LDataGrid);","map":{"version":3,"sources":["C:/Users/Maou/Documents/Projetos/CLIENTES/RNF/Completo/client/src/components/List/datagrid.js"],"names":["React","Component","Fragment","useState","useRef","connect","bindActionCreators","DataGrid","RowsProp","ColDef","setSnackbar","DEFAULT_LOCALE_TEXT","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","TextField","Input","InputLabel","MenuItem","FormHelperText","FormControl","Select","IconButton","FilterListIcon","SearchIcon","ReorderIcon","ptBR","Grid","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","PropTypes","MaskedInput","validaCpf","idNumbers","TextMaskCustom","props","inputRef","other","ref","inputElement","value","mask","DateInput","Date","setValue","handleChange","e","target","id","toJSON","split","onChange","err","console","log","flexGrow","marginTop","label","SelectInput","values","onBlur","column","style","name","map","val","LDataGrid","state","data","filters","filter","loading","params","page","setState","cleanfilters","Object","entries","item","length","query","queryType","withId","pageRequest","undefined","setPage","filterInputs","input","classes","m5","margin","root","maxWidth","marginBottom","media","height","onChangeInputs","includes","replace","onClearFilter","alignItems","flexFlow","justifyContent","display","type","grow","flexBasis","setSelectionRange","width","columns","MuiDataGrid","overFlow","total","pageSize","mapStateToProps","store","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment, useState, useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\n//\r\nimport { DataGrid, RowsProp, ColDef } from '@material-ui/data-grid';\r\n//\r\nimport { setSnackbar } from '../../actions/appActions'\r\nimport { DEFAULT_LOCALE_TEXT } from '../../providers/langs/datagrid'\r\n//const classes = useStyles();\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n//\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ReorderIcon from '@material-ui/icons/Reorder';\r\n\r\nimport ptBR from \"date-fns/locale/pt-BR\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport MaskedInput from 'react-text-mask';\r\n\r\n// VALIDATORS\r\n\r\nimport { validaCpf } from '../../providers/commonMethods'\r\n//\r\n\r\n//const [valus, setValues] = useState(new Date('2021-02-13'));\r\nconst idNumbers = [\r\n    'cpf', 'cnpj'\r\n];\r\n// MASKED INPUTS \r\n\r\nfunction TextMaskCustom(props) {\r\n    const { inputRef, ...other } = props;\r\n\r\n    return (\r\n        <MaskedInput\r\n            {...other}\r\n            ref={(ref) => {\r\n                inputRef(ref ? ref.inputElement : null);\r\n            }}\r\n            value={props.value}\r\n            mask={props.mask}\r\n            placeholderChar={'\\u2000'}\r\n\r\n        />\r\n    );\r\n}\r\n\r\n\r\n//\r\nconst DateInput = (props) => {\r\n    const [value, setValue] = useState(new Date('2021-02-13'));\r\n    function handleChange(value) {\r\n        let e = {target: {id:props.id , value: `${value.toJSON().split('T')[0]}`}}\r\n        try {\r\n            //inputValues[props.id] = `${value.toJSON().split('T')[0]}`\r\n            props.onChange(e)\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n        setValue(value);\r\n    }\r\n    return (<MuiPickersUtilsProvider utils={DateFnsUtils} locale={ptBR}>\r\n        <Grid justify=\"space-around\" style={{ flexGrow: 0, marginTop: 18 }}>\r\n            <KeyboardDatePicker\r\n                margin=\"normal\"\r\n                id={props.id}\r\n                value={props.value}\r\n                label={props.label ?? 'Data'}\r\n                format=\"dd/MM/yyyy\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                onBlur={handleChange}\r\n                KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                }}\r\n            />\r\n        </Grid>\r\n    </MuiPickersUtilsProvider>)\r\n}\r\n//\r\n\r\nconst SelectInput = (props) => {\r\n    const [value, setValue] = useState(props.values[0]);\r\n    function handleChange(e) {\r\n        props.onBlur(e)\r\n        setValue(e.target.value);\r\n    }\r\n    return (\r\n        <FormControl id={props.column} style={{ ...props.style, marginTop: '25px' }}>\r\n            <InputLabel id={props.column}>{props.label}</InputLabel>\r\n            <Select\r\n                labelId={props.id}\r\n                id={props.id}\r\n                name={props.name}\r\n                value={props.value}\r\n                onChange={handleChange}\r\n                onBlur={handleChange}\r\n            >\r\n                {\r\n                    props.values.map(val => {\r\n                        return <MenuItem value={val}>{val}</MenuItem>\r\n                    })\r\n                }\r\n\r\n            </Select>\r\n        </FormControl>)\r\n}\r\nclass LDataGrid extends Component {\r\n    state = {\r\n        data: [],\r\n        filters: {},\r\n        filter: 'flex',\r\n        loading: true\r\n    }\r\n    async setPage(params = { page: 1 }) {\r\n        this.setState({ ...this.state, loading: true })\r\n        let cleanfilters = {};\r\n        Object.entries(params).map((item) => { \r\n            if(item[1].length >= 1 ){\r\n                if(item[1] !== \"Todos\"){\r\n                    cleanfilters[item[0]] = item[1];\r\n                    console.log(item);\r\n                }\r\n            }\r\n            \r\n        });\r\n        let query = Object.assign({queryType : 'like', withId: \"name\"}, cleanfilters);\r\n        console.log(query);\r\n        const data = await this.props.pageRequest(query);\r\n        if (data !== undefined) {\r\n            this.setState({ ...this.state, data, loading: false })\r\n        }\r\n\r\n    }\r\n    async componentDidMount() {\r\n        this.setPage();\r\n        let filters = {};\r\n        this.props.filterInputs.map(input => { \r\n            filters[input.column] = input.value ?? \"\";\r\n        });\r\n\r\n        this.setState({...this.state, filters});\r\n\r\n    }\r\n\r\n    render() {\r\n        const classes = {\r\n            m5: {\r\n                margin: 5,\r\n                marginTop: 25,\r\n                //flexBasis: '30%'\r\n\r\n            },\r\n            root: {\r\n                maxWidth: 345,\r\n                marginBottom: 25\r\n            },\r\n            media: {\r\n                height: 140,\r\n            },\r\n        }\r\n        let filters = this.state.filters;\r\n        const onChangeInputs = (e) => {\r\n            let value = e.target.value;\r\n            if (idNumbers.includes(e.target.id)) {\r\n                value = value.replace(/[^\\d]+/g, '');\r\n            }\r\n            if (value.length == 0 || e.target.value == 'Todos') {\r\n                delete filters[e.target.id ?? e.target.name];\r\n            } else {\r\n                if (e.target.id == 'created_at') {\r\n                    value = `${value.toJSON().split('T')[0]}`\r\n                }\r\n                if (e.target.id == 'nome') {\r\n                    //filters[\"withId\"] = \"name\"\r\n                }\r\n                if (idNumbers.includes(e.target.id)) {\r\n                    value = value.replace(/[^\\d]+/g, '');\r\n                }\r\n                filters[e.target.id ?? e.target.name] = value\r\n                this.setState({...this.state, filters});\r\n            }\r\n        }\r\n\r\n        const onClearFilter = () => {\r\n            let filters = {};\r\n            this.props.filterInputs.map(input => { \r\n                filters[input.column] = input.value ?? \"\";\r\n            });\r\n\r\n            this.setState({...this.state, filters});\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Card className={classes.root} style={{ marginBottom: 15 }}>\r\n                    <CardContent>\r\n                        <Typography onClick={() => {\r\n                            this.setState({ ...this.state, filter: this.state.filter == 'none' ? 'flex' : 'none' })\r\n                        }}>\r\n                            <FilterListIcon /> Filtros\r\n                    </Typography>\r\n\r\n                        <div id=\"filter-form\" style={{\r\n                            alignItems: 'center',\r\n                            flexFlow: 'row wrap',\r\n                            justifyContent: 'space-around',\r\n                            display: this.state.filter,\r\n                        }}>\r\n                            {\r\n                                this.props.filterInputs.map(input => {\r\n                                    if (input.type == \"text\") {\r\n                                        if (input.mask === undefined)\r\n                                            return <TextField style={{ ...classes.m5, flexGrow: input.grow ?? 0, flexBasis: input.flexBasis ?? '30%' }} id={input.column} label={input.label} onChange={onChangeInputs} onBlur={onChangeInputs} />\r\n                                        else\r\n                                            return (\r\n                                                <FormControl style={{ ...classes.m5, flexGrow: input.grow ?? 0 }} >\r\n                                                    <InputLabel htmlFor=\"formatted-text-mask-input\">{input.label}</InputLabel>\r\n                                                    <Input\r\n                                                        value={this.state.filters[input.column] ?? \"\"}\r\n                                                        onChange={onChangeInputs}\r\n                                                        onFocus={(e) => {\r\n                                                            if (e.target.value.length == 0) {\r\n                                                                //alert(e.target.value);\r\n                                                                e.target.setSelectionRange(0, e.target.value.length)\r\n                                                            }\r\n                                                        }}\r\n                                                        name={input.column}\r\n                                                        id={input.column}\r\n                                                        value={this.state.filters[input.column] ?? \"\"}\r\n                                                        inputProps={{\r\n                                                            mask: input.mask\r\n                                                        }}\r\n                                                        inputComponent={TextMaskCustom}\r\n                                                    />\r\n                                                </FormControl>)\r\n\r\n                                    } else if (input.type == \"date\") {\r\n                                        return <DateInput id={input.column} style={{ ...classes.m5, flexGrow: input.grow ?? 0 }} onBlur={onChangeInputs} />\r\n                                    } else if (input.type == \"select\") {\r\n                                        return (<SelectInput id={input.column} label={input.label} name={input.column} value={this.state.filters[input.column] ?? \"\"} values={input.values} style={{ ...classes.m5, flexGrow: input.grow ?? 0 }} onBlur={onChangeInputs} />)\r\n                                    }\r\n                                })\r\n                            }\r\n                            <div>\r\n                                <Button size=\"small\" style={{ margin: 5 }} startIcon={<SearchIcon />} variant=\"contained\" color=\"primary\" onClick={() => { this.setPage(this.state.filters) }}> Pesquisar</Button>\r\n                                <Button size=\"small\" style={{ margin: 5 }} startIcon={<ReorderIcon />} variant=\"contained\" color=\"primary\" onClick={() => {onClearFilter()}} > Limpar</Button>\r\n                            </div>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n                <Card>\r\n                    <CardContent>\r\n                        <div style={{ height: 300, width: '100%' }}>\r\n                            <DataGrid rows={this.state.data.data ?? []} columns={this.props.columns}\r\n                                className={{\r\n                                    MuiDataGrid: {\r\n                                        root: {\r\n                                          '& .MuiDataGrid-window': {\r\n                                            overFlow: 'hidden'\r\n                                        }\r\n                                    }}\r\n                                }}\r\n                                disableClickEventBubbling\r\n                                disableColumnMenu={true}\r\n                                loading={this.state.loading}\r\n                                localeText={DEFAULT_LOCALE_TEXT}\r\n                                paginationMode=\"server\"\r\n                                rowCount={this.state.data.total ?? 0}\r\n                                pageSize={10} rowsPerPageOptions={[10, 20, 50]} pagination\r\n                                onPageSizeChange={(params) => {\r\n                                    //console.log(params);\r\n                                    this.setPage({ page: params.page, pageSize: params.pageSize });\r\n                                }}\r\n                                onPageChange={(params) => {\r\n                                    //console.log(params);\r\n                                    this.setPage({ page: params.page, pageSize: params.pageSize });\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </CardContent>\r\n                    <CardActionArea>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n\r\n                    </CardActions>\r\n                </Card>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = store => ({\r\n\r\n});\r\nconst mapDispatchToProps = dispatch =>\r\n    bindActionCreators({setSnackbar}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LDataGrid)\r\n"]},"metadata":{},"sourceType":"module"}