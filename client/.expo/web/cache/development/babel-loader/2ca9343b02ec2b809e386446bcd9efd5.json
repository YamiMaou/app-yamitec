{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Maou\\\\Documents\\\\Projetos\\\\CLIENTES\\\\RNF\\\\Completo\\\\client\\\\src\\\\pages\\\\Providers\\\\create\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, Fragment, useState, useRef, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Paper from '@material-ui/core/Paper';\nimport HomeIcon from '@material-ui/icons/Home';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport AddIcon from '@material-ui/icons/Add';\nimport { DataGrid, RowsProp, ColDef } from '@material-ui/data-grid';\nimport { DEFAULT_LOCALE_TEXT } from \"../../../providers/langs/datagrid\";\nimport LForms from \"../../../components/Forms\";\nimport TextField from '@material-ui/core/TextField';\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { setSnackbar } from \"../../../actions/appActions\";\nimport { postApiProviders, getApiProviders, getApiProviderTypes, getApiManagers, getApiContributors } from \"../../../providers/api\";\nimport { validaEmail, validaCnpj, isFutureData } from \"../../../providers/commonMethods\";\nimport { InputCep, InputCnpj, InputPhone, InputDecimal, stringCpf, stringCnpj } from \"../../../providers/masks\";\nimport { Redirect } from 'react-router-dom';\nimport { withSnackbar } from 'notistack';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { CardActions, CircularProgress, List, ListItem, ListItemText } from '@material-ui/core';\n\nvar MaskedDecimalInput = function MaskedDecimalInput(props) {\n  var _props$value, _props$required, _props$disabled, _props$type, _props$helperText;\n\n  var _useState = useState((_props$value = props.value) != null ? _props$value : undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      value1 = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  function getMoney(str) {\n    return parseInt(str.replace(/[\\D]+/g, ''));\n  }\n\n  function formatReal(int) {\n    var tmp = int + '';\n    tmp = tmp.replace(/([0-9]{2})$/g, \",$1\");\n    if (tmp.length > 6) tmp = tmp.replace(/([0-9]{3}),([0-9]{2}$)/g, \".$1,$2\");\n    return tmp;\n  }\n\n  function handleChange(e) {\n    var _props$onChange;\n\n    var val = e.target.value;\n    (_props$onChange = props.onChange(e)) != null ? _props$onChange : undefined;\n    setValue(formatReal(getMoney(val)));\n  }\n\n  return React.createElement(TextField, {\n    key: \"input-\" + props.id,\n    size: \"small\",\n    style: props.style,\n    required: (_props$required = props.required) != null ? _props$required : false,\n    disabled: (_props$disabled = props.disabled) != null ? _props$disabled : false,\n    error: error,\n    type: (_props$type = props.type) != null ? _props$type : \"text\",\n    value: value1 != null ? value1 : '',\n    helperText: error == true ? (_props$helperText = props.helperText) != null ? _props$helperText : \"conteúdo inválido\" : \"\",\n    id: props.id,\n    label: props.label,\n    onChange: handleChange,\n    onBlur: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  });\n};\n\nvar SelectInput = function SelectInput(props) {\n  var _props$value2;\n\n  var _useState5 = useState((_props$value2 = props.value) != null ? _props$value2 : \"Selecione\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      value = _useState6[0],\n      setValue = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      error = _useState8[0],\n      setError = _useState8[1];\n\n  function handleChange(e) {\n    var _e$target = e.target,\n        value = _e$target.value,\n        id = _e$target.id;\n\n    if (props.validate !== undefined) {\n      if (props.validate(value)) {\n        setError(false);\n      } else {\n        setError(true);\n      }\n    }\n\n    e.target.id = e.target.name;\n    props.onChange(e);\n    setValue(e.target.value);\n  }\n\n  return React.createElement(FormControl, {\n    id: props.column,\n    style: _objectSpread(_objectSpread({}, props.style), {}, {\n      marginTop: '25px'\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, React.createElement(InputLabel, {\n    id: props.column,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, props.label), React.createElement(Select, {\n    size: \"small\",\n    labelId: props.id,\n    id: props.name,\n    name: props.name,\n    value: value,\n    error: error,\n    placeholder: \"Selecione\",\n    onChange: handleChange,\n    onBlur: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, React.createElement(MenuItem, {\n    key: \"input-00\",\n    value: \"Selecione\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, \"Selecione\"), props.json ? props.values.map(function (val, ind) {\n    return React.createElement(MenuItem, {\n      key: \"input-\" + ind,\n      value: val.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 32\n      }\n    }, val[props.valueLabel]);\n  }) : props.values.map(function (val, ind) {\n    return React.createElement(MenuItem, {\n      key: \"input-\" + ind,\n      value: val,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 32\n      }\n    }, val);\n  })));\n};\n\nvar TypeEmpresaInput = function TypeEmpresaInput(props) {\n  var _props$value3, _props$value4, _props$helperText2, _props$helperText3;\n\n  var _useState9 = useState((_props$value3 = props.value) != null ? _props$value3 : \"Selecione\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      value = _useState10[0],\n      setValue = _useState10[1];\n\n  var _useState11 = useState((_props$value4 = props.value) != null ? _props$value4 : \"Selecione\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      value1 = _useState12[0],\n      setValue1 = _useState12[1];\n\n  function handleChange(e) {\n    var _e$target2 = e.target,\n        value = _e$target2.value,\n        id = _e$target2.id;\n    props.onChange(e);\n    setValue(e.target.value);\n  }\n\n  function handleChange1(e) {\n    var _e$target3, value, id;\n\n    return _regeneratorRuntime.async(function handleChange1$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _e$target3 = e.target, value = _e$target3.value, id = _e$target3.id;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(props.handler(value));\n\n          case 3:\n            console.log(e.target);\n            console.log(e.target.id + \" - \" + e.target.value);\n            props.onChange(e);\n            setValue1(e.target.value);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(\"div\", {\n    style: {\n      flexBasis: props.style.flexBasis,\n      marginRight: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, React.createElement(SelectInput, {\n    valueLabel: \"value\",\n    json: true,\n    value: value,\n    helperText: (_props$helperText2 = props.helperText) != null ? _props$helperText2 : \"\",\n    key: \"input-\" + 15000,\n    id: \"type\",\n    label: \"Empresa\",\n    name: \"type\",\n    values: [{\n      id: 1,\n      value: 'Matriz'\n    }, {\n      id: 2,\n      value: 'Filial'\n    }],\n    style: {\n      flexBasis: window.innerWidth < 768 ? '100%' : '50%',\n      minWidth: value == 2 ? '45%' : '90%'\n    },\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }), value == 2 && React.createElement(SelectInput, {\n    valueLabel: props.valueLabel,\n    json: props.json,\n    value: value1,\n    helperText: (_props$helperText3 = props.helperText) != null ? _props$helperText3 : \"\",\n    key: \"input-\" + 15001,\n    id: \"matriz_id\",\n    label: props.label,\n    name: \"matriz_id\",\n    values: props.values,\n    style: {\n      flexBasis: window.innerWidth < 768 ? '100%' : '50%',\n      minWidth: '45%',\n      marginLeft: 10\n    },\n    onChange: handleChange1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar CreateProviders = function (_Component) {\n  _inherits(CreateProviders, _Component);\n\n  var _super = _createSuper(CreateProviders);\n\n  function CreateProviders() {\n    var _this2;\n\n    _classCallCheck(this, CreateProviders);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.state = {\n      filter: ['flex'],\n      data: [],\n      fields: {},\n      providertypes: [],\n      contributors: [],\n      managers: [],\n      providers: [],\n      filials: [],\n      provider: undefined,\n      manager: 0,\n      provProviders: [],\n      provManagers: [],\n      provProvidersLoading: false,\n      provManagerLoading: false,\n      states: []\n    };\n    return _this2;\n  }\n\n  _createClass(CreateProviders, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var data, contributors, managers, providertypes, providers, filials;\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(getApiProviders({\n                type: 1,\n                active: 1\n              }));\n\n            case 2:\n              data = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(getApiContributors({\n                active: 1\n              }));\n\n            case 5:\n              contributors = _context2.sent;\n              _context2.next = 8;\n              return _regeneratorRuntime.awrap(getApiManagers());\n\n            case 8:\n              managers = _context2.sent;\n              _context2.next = 11;\n              return _regeneratorRuntime.awrap(getApiProviderTypes());\n\n            case 11:\n              providertypes = _context2.sent;\n              _context2.next = 14;\n              return _regeneratorRuntime.awrap(getApiProviders());\n\n            case 14:\n              providers = _context2.sent;\n              _context2.next = 17;\n              return _regeneratorRuntime.awrap(getApiProviders({\n                type: 2,\n                active: 1\n              }));\n\n            case 17:\n              filials = _context2.sent;\n              this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n                matrizData: undefined,\n                data: data.data,\n                contributors: contributors.data,\n                managers: managers.data,\n                providertypes: providertypes.data,\n                providers: providers.data,\n                filials: filials.data\n              }));\n              localStorage.setItem(\"sessionTime\", 900);\n\n            case 20:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        fields: e\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this,\n          _this$state$filter$re,\n          _this$state$filter$fo;\n\n      var setProviders = function setProviders() {\n        var provProviders, prov;\n        return _regeneratorRuntime.async(function setProviders$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                provProviders = _this3.state.provProviders;\n                console.log(_this3.state.provider);\n\n                if (!(_this3.state.provider != 'Selecione' && provProviders !== undefined)) {\n                  _context3.next = 14;\n                  break;\n                }\n\n                _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                  provProvidersLoading: false\n                }));\n\n                if (!provProviders.find(function (x) {\n                  return x.id === _this3.state.provider;\n                })) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                _this3.props.setSnackbar({\n                  open: true,\n                  message: 'Filial já associado.'\n                });\n\n                return _context3.abrupt(\"return\", false);\n\n              case 8:\n                _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                  provProviders: undefined\n                }));\n\n                _context3.next = 11;\n                return _regeneratorRuntime.awrap(getApiProviders({}, _this3.state.provider));\n\n              case 11:\n                prov = _context3.sent;\n                provProviders.push(prov);\n\n                _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                  provProviders: provProviders,\n                  provProvidersLoading: false\n                }));\n\n              case 14:\n                _context3.next = 19;\n                break;\n\n              case 16:\n                _context3.prev = 16;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(_context3.t0);\n\n              case 19:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, [[0, 16]], Promise);\n      };\n\n      var setManagers = function setManagers() {\n        var provManagers, prov;\n        return _regeneratorRuntime.async(function setManagers$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                provManagers = _this3.state.provManagers;\n                console.log(_this3.state.provider);\n\n                if (!(_this3.state.manager != 'Selecione' && provManagers !== undefined)) {\n                  _context4.next = 13;\n                  break;\n                }\n\n                _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                  provProvManagersLoading: false\n                }));\n\n                if (!provManagers.find(function (x) {\n                  return x.id === _this3.state.manager;\n                })) {\n                  _context4.next = 7;\n                  break;\n                }\n\n                _this3.props.setSnackbar({\n                  open: true,\n                  message: 'Responsável já associado.'\n                });\n\n                return _context4.abrupt(\"return\", false);\n\n              case 7:\n                _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                  provManagers: undefined\n                }));\n\n                _context4.next = 10;\n                return _regeneratorRuntime.awrap(getApiManagers({}, _this3.state.manager));\n\n              case 10:\n                prov = _context4.sent;\n                provManagers.push(prov);\n\n                _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                  provManagers: provManagers,\n                  provProvManagersLoading: false\n                }));\n\n              case 13:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      };\n\n      var request = function request(data) {\n        var providers, managers, response, _response$data, errors, messages;\n\n        return _regeneratorRuntime.async(function request$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _this3.props.setSnackbar({\n                  open: true,\n                  message: \"Validando Dados, Aguarde ...\"\n                });\n\n                providers = [];\n                managers = [];\n\n                _this3.state.provManagers.map(function (values) {\n                  managers.push(values.id);\n                });\n\n                _this3.state.provProviders.map(function (values) {\n                  providers.push(values.id);\n                });\n\n                if (!(managers.length == 0)) {\n                  _context5.next = 8;\n                  break;\n                }\n\n                _this3.props.setSnackbar({\n                  open: true,\n                  message: \"Você deve manter pelo menos 1 Responsável vinculado\"\n                });\n\n                return _context5.abrupt(\"return\", false);\n\n              case 8:\n                data.providers = providers;\n                data.managers = managers;\n                data.rate = data.rate.replace(/\\./g, '').replace(',', '.');\n\n                _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                  loading: true\n                }));\n\n                _context5.next = 14;\n                return _regeneratorRuntime.awrap(postApiProviders(data));\n\n              case 14:\n                response = _context5.sent;\n\n                if (response.data.success) {\n                  _this3.props.setSnackbar({\n                    open: true,\n                    message: response.data.message\n                  });\n\n                  _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                    loading: false\n                  }));\n\n                  _this3.props.history.goBack();\n                } else {\n                  console.log(response);\n                  errors = (_response$data = response.data) != null ? _response$data : undefined;\n                  messages = '';\n\n                  if (errors !== undefined && errors.error !== undefined && errors.error.response && errors.error.response.data !== undefined && errors.error.response.data.errors !== undefined) {\n                    Object.keys(errors.error.response.data.errors).map(function (err) {\n                      console.log(err);\n                      var field = err == \"file\" ? \"Anexo\" : err;\n                      messages += \"O \" + field.toUpperCase() + \" \" + errors.error.response.data.errors[err][0] + \" \\n\";\n                    });\n                  } else {\n                    messages = 'Houve um problema em sua requisição!';\n                  }\n\n                  _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                    loading: false\n                  }));\n\n                  _this3.props.setSnackbar({\n                    open: true,\n                    message: messages\n                  });\n                }\n\n              case 16:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      };\n\n      var validateFields = function validateFields(fields, values) {\n        var campo = undefined;\n        fields.reverse().map(function (v, k) {\n          v.fields.reverse().map(function (v1, k1) {\n            var value = values[v1.column];\n\n            if (v1.validate !== undefined) {\n              if (v1.validate.number !== undefined) {\n                if (/^[-]?\\d+$/.test(value) == false) campo = {\n                  id: v1.column,\n                  message: \"O Campo \" + v1.label + \" \\xE9 somente n\\xFAmeros \"\n                };\n              }\n\n              if (v1.validate.max !== undefined) {\n                if (value.length > v1.validate.max) campo = {\n                  id: v1.column,\n                  message: \"O Campo \" + v1.label + \", tamanho m\\xE1ximo de \" + v1.validate.max + \" caracteres ex\\xEAdido\"\n                };\n              }\n\n              if (v1.validate.min !== undefined) {\n                if (value.length < v1.validate.min) campo = {\n                  id: v1.column,\n                  message: \"O Campo \" + v1.label + \", tamanho minimo de \" + v1.validate.min + \" caracteres.\"\n                };\n              }\n\n              if (v1.validate.required !== undefined) {\n                if (value == \"Selecione\") {\n                  campo = {\n                    id: v1.column,\n                    message: \"O Campo \" + v1.label + \" \\xE9 inv\\xE1lido \"\n                  };\n                }\n\n                if (value.length == 0) campo = {\n                  id: v1.column,\n                  message: \"O Campo \" + v1.label + \" \\xE9 obrigat\\xF3rio\"\n                };\n              }\n            }\n\n            if (v1.validateHandler !== undefined) {\n              if (v1.validateHandler(value) == false) campo = {\n                id: v1.column,\n                message: \"O Campo \" + v1.label + \"  \\xE9 inv\\xE1lido \"\n              };\n            }\n          });\n        });\n        campo !== undefined ? _this3.props.setSnackbar({\n          open: true,\n          message: campo.message\n        }) : '';\n        return campo === undefined ? true : false;\n      };\n\n      var flexBasis = '22%';\n      var forms = [{\n        title: 'Dados Básicos',\n        fields: [{\n          column: 'active',\n          label: 'Ativo',\n          type: 'checkbox',\n          value: 1,\n          disabled: true,\n          flexBasis: \"100%\"\n        }, {\n          column: 'providertype_id',\n          label: 'Tipo Fornecedor',\n          type: 'select',\n          json: true,\n          valueLabel: \"name\",\n          values: this.state.providertypes,\n          validate: {\n            required: true\n          },\n          value: \"Selecione\",\n          flexBasis: '13%'\n        }, {\n          column: 'matriz_id',\n          label: 'Matriz',\n          type: 'custom',\n          json: true,\n          valueLabel: \"company_name\",\n          values: this.state.providers,\n          flexBasis: '30%',\n          component: TypeEmpresaInput,\n          handler: function handler(id) {\n            var matrizData, fields;\n            return _regeneratorRuntime.async(function handler$(_context6) {\n              while (1) {\n                switch (_context6.prev = _context6.next) {\n                  case 0:\n                    _context6.next = 2;\n                    return _regeneratorRuntime.awrap(getApiProviders({}, id));\n\n                  case 2:\n                    matrizData = _context6.sent;\n                    fields = _this3.state.fields;\n                    Object.entries(matrizData.addresses).map(function (_ref) {\n                      var _ref2 = _slicedToArray(_ref, 2),\n                          key = _ref2[0],\n                          val = _ref2[1];\n\n                      fields[key] = val;\n                    });\n                    Object.entries(matrizData.contacts).map(function (_ref3) {\n                      var _ref4 = _slicedToArray(_ref3, 2),\n                          key = _ref4[0],\n                          val = _ref4[1];\n\n                      fields[key] = val;\n                    });\n                    Object.entries(matrizData.contracts).map(function (_ref5) {\n                      var _ref6 = _slicedToArray(_ref5, 2),\n                          key = _ref6[0],\n                          val = _ref6[1];\n\n                      fields[key] = val;\n                    });\n\n                    _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                      fields: fields,\n                      matrizData: matrizData\n                    }));\n\n                    console.log(_this3.state.fields);\n\n                  case 9:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }\n        }, {\n          column: 'cnpj',\n          label: 'CNPJ',\n          type: 'text',\n          mask: InputCnpj,\n          validate: {\n            min: 11,\n            number: true,\n            required: true\n          },\n          validateHandler: validaCnpj,\n          flexBasis: '20%',\n          helperText: \"o valor digitado é inválido\"\n        }, {\n          column: 'company_name',\n          label: 'Razão Social',\n          type: 'text',\n          validate: {\n            max: 50,\n            required: true\n          },\n          flexBasis: '25%'\n        }, {\n          column: 'fantasy_name',\n          label: 'Nome Fantasia',\n          type: 'text',\n          validate: {\n            max: 50,\n            required: true\n          },\n          flexBasis: '25%'\n        }, {\n          column: 'anexo',\n          label: 'Documento',\n          type: 'file',\n          flexBasis: flexBasis\n        }, {\n          column: 'logo',\n          label: 'Logo marca',\n          type: 'file',\n          validate: {\n            required: true\n          },\n          flexBasis: flexBasis\n        }]\n      }, {\n        id: 'addr',\n        title: 'Endereço',\n        fields: [{\n          column: 'addr_clone',\n          label: 'Clonar Matriz',\n          disabled: this.state.fields['type'] == 1,\n          type: 'checkbox',\n          flexBasis: \"100%\"\n        }, {\n          column: 'zipcode',\n          label: 'CEP',\n          type: 'text',\n          disabled: this.state.fields['addr_clone'] == 1,\n          value: this.state.fields['zipcode'],\n          mask: InputCep,\n          validate: {\n            max: 9,\n            required: true\n          },\n          flexBasis: '9%'\n        }, {\n          column: 'street',\n          value: this.state.fields['street'],\n          label: 'Endereço',\n          disabled: this.state.fields['addr_clone'] == 1,\n          validate: {\n            max: 100,\n            required: true\n          },\n          type: 'text',\n          flexBasis: flexBasis\n        }, {\n          column: 'additional',\n          value: this.state.fields['additional'],\n          label: 'Complemento',\n          disabled: this.state.fields['addr_clone'] == 1,\n          validate: {\n            max: 20\n          },\n          type: 'text',\n          flexBasis: flexBasis\n        }, {\n          column: 'uf',\n          label: 'Estado',\n          type: 'select',\n          validate: {\n            required: true\n          },\n          disabled: this.state.fields['addr_clone'] == 1,\n          values: [\"Acre\", \"Alagoas\", \"Amazonas\", \"Amapá\", \"Bahia\", \"Ceará\", \"Brasília\", \"Espírito Santo\", \"Goiás\", \"Maranhão\", \"Minas Gerais\", \"Mato Grosso do Sul\", \"Mato Grosso\", \"Pará\", \"Paraíba\", \"Pernambuco\", \"Piauí\", \"Paraná\", \"Rio de Janeiro\", \"Rio Grande do Norte\", \"Rondônia\", \"Roraima\", \"Rio Grande do Sul\", \"Santa Catarina\", \"Sergipe\", \"São Paulo\", \"Tocantins\"],\n          flexBasis: flexBasis,\n          style: {\n            minWidth: \"192px\"\n          },\n          value: this.state.fields['uf']\n        }, {\n          column: 'city',\n          value: this.state.fields['city'],\n          disabled: this.state.fields['addr_clone'] == 1,\n          label: 'Cidade',\n          type: 'text',\n          validate: {\n            max: 100,\n            required: true\n          },\n          flexBasis: flexBasis\n        }]\n      }, {\n        title: 'Contato',\n        fields: [{\n          column: 'contact_clone',\n          label: 'Clonar Matriz',\n          disabled: this.state.fields['type'] == 1,\n          type: 'checkbox',\n          flexBasis: \"100%\"\n        }, {\n          column: 'phone1',\n          label: 'Contato',\n          type: 'text',\n          disabled: this.state.fields['contact_clone'] == 1 ? true : false,\n          mask: InputPhone,\n          validate: {\n            max: 15,\n            required: true\n          },\n          flexBasis: '20%'\n        }, {\n          column: 'phone2',\n          label: 'Contato alternativo',\n          type: 'text',\n          disabled: this.state.fields['contact_clone'] == 1 ? true : false,\n          mask: InputPhone,\n          validate: {\n            max: 15\n          },\n          flexBasis: '20%'\n        }, {\n          column: 'email',\n          label: 'E-mail',\n          type: 'email',\n          disabled: this.state.fields['contact_clone'] == 1 ? true : false,\n          validate: {\n            max: 100\n          },\n          validateHandler: validaEmail,\n          flexBasis: '20%'\n        }, {\n          column: 'site',\n          label: 'Site',\n          type: 'text',\n          disabled: this.state.fields['contact_clone'] == 1 ? true : false,\n          validate: {\n            max: 100\n          },\n          flexBasis: '20%'\n        }]\n      }, {\n        title: 'Redes Sociais',\n        fields: [{\n          column: 'linkedin',\n          label: 'Usuário do LinkedIn',\n          disabled: this.state.fields['contact_clone'] == 1 ? true : false,\n          type: 'text',\n          validate: {\n            max: 100,\n            required: true\n          },\n          flexBasis: '20%'\n        }, {\n          column: 'facebook',\n          label: 'Usuário do Facebook',\n          disabled: this.state.fields['contact_clone'] == 1 ? true : false,\n          type: 'text',\n          validate: {\n            max: 100,\n            required: true\n          },\n          flexBasis: '20%'\n        }, {\n          column: 'instagram',\n          label: 'Usuário do Instagram',\n          disabled: this.state.fields['contact_clone'] == 1 ? true : false,\n          type: 'text',\n          validate: {\n            max: 100,\n            required: true\n          },\n          flexBasis: '20%'\n        }]\n      }, {\n        title: 'Contrato Atual',\n        fields: [{\n          column: 'contract_clone',\n          label: 'Clonar Matriz',\n          disabled: this.state.fields['type'] == 1,\n          type: 'checkbox',\n          flexBasis: \"100%\"\n        }, {\n          column: 'accession_date',\n          label: 'Data de Adesão - Início',\n          disabled: this.state.fields['contract_clone'] == 1,\n          type: 'date',\n          validate: {\n            required: true\n          },\n          flexBasis: '20%'\n        }, {\n          column: 'end_date',\n          label: 'Data de Adesão - Fim',\n          disabled: this.state.fields['contract_clone'] == 1,\n          type: 'date',\n          validate: {\n            required: true\n          },\n          flexBasis: '20%'\n        }, {\n          column: 'contributor_id',\n          label: 'Vendedor',\n          type: 'autocomplete',\n          validate: {\n            required: true\n          },\n          json: true,\n          valueLabel: 'name',\n          values: this.state.contributors,\n          flexBasis: '20%',\n          disabled: this.state.fields['contract_clone'] == 1\n        }, {\n          column: 'rate',\n          label: 'Taxa de Adesão',\n          type: 'decimal',\n          disabled: this.state.fields['contract_clone'] == 1,\n          validate: {\n            decimal: true,\n            required: true\n          },\n          flexBasis: '20%'\n        }]\n      }];\n      var rows = this.state.provManagers !== undefined ? this.state.provManagers : [];\n      var columns = [{\n        field: 'cpf',\n        headerName: 'CPF',\n        flex: 0.7,\n        valueFormatter: function valueFormatter(params) {\n          return stringCpf(params.value);\n        }\n      }, {\n        field: 'name',\n        headerName: 'Nome',\n        flex: 2\n      }, {\n        field: 'function',\n        headerName: 'Função',\n        flex: 1\n      }, {\n        field: 'active',\n        headerName: 'Situação',\n        flex: 0.5,\n        valueFormatter: function valueFormatter(params) {\n          return params.value === 1 ? \"Ativo\" : \"Inativo\";\n        }\n      }, {\n        field: 'id',\n        headerName: 'Ações',\n        flex: 1,\n        renderCell: function renderCell(params, row) {\n          return React.createElement(\"div\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 25\n            }\n          }, React.createElement(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            size: \"small\",\n            onClick: function _callee(e) {\n              var provManagers, index;\n              return _regeneratorRuntime.async(function _callee$(_context7) {\n                while (1) {\n                  switch (_context7.prev = _context7.next) {\n                    case 0:\n                      _context7.prev = 0;\n                      provManagers = _this3.state.provManagers;\n                      _context7.next = 4;\n                      return _regeneratorRuntime.awrap(getApiProviders({}, 1));\n\n                    case 4:\n                      index = provManagers.findIndex(function (x) {\n                        return x.id == params.row.id;\n                      });\n\n                      _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                        provManagers: undefined\n                      }));\n\n                      provManagers.splice(index, 1);\n\n                      _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                        provManagers: provManagers\n                      }));\n\n                      _context7.next = 13;\n                      break;\n\n                    case 10:\n                      _context7.prev = 10;\n                      _context7.t0 = _context7[\"catch\"](0);\n                      console.log(_context7.t0);\n\n                    case 13:\n                      ;\n\n                    case 14:\n                    case \"end\":\n                      return _context7.stop();\n                  }\n                }\n              }, null, null, [[0, 10]], Promise);\n            },\n            style: {\n              marginLeft: 16\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 29\n            }\n          }, React.createElement(DeleteForeverIcon, {\n            fontSize: \"small\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 32\n            }\n          })));\n        }\n      }];\n      var rowsProv = this.state.provProviders !== undefined ? this.state.provProviders : [];\n      var columnsProv = [{\n        field: 'company_name',\n        headerName: 'Farmácia',\n        flex: 1.2,\n        row: true,\n        valueFormatter: function valueFormatter(params) {\n          var _params$row$cnpj;\n\n          return params.row.company_name + \" - \" + stringCnpj((_params$row$cnpj = params.row.cnpj) != null ? _params$row$cnpj : '00000000000000');\n        }\n      }, {\n        field: 'phone1',\n        headerName: 'Telefone',\n        flex: 0.7,\n        row: true,\n        valueFormatter: function valueFormatter(params) {\n          return params.row.contacts ? params.row.contacts.phone1 : '-';\n        }\n      }, {\n        field: 'email',\n        headerName: 'E-mail',\n        flex: 0.7,\n        row: true,\n        valueFormatter: function valueFormatter(params) {\n          return params.row.contacts ? params.row.contacts.email : '';\n        }\n      }, {\n        field: 'type',\n        headerName: 'Tipo',\n        flex: 0.7,\n        row: true,\n        valueFormatter: function valueFormatter(params) {\n          return params.row.type === 1 ? \"Matriz\" : \"Filial\";\n        }\n      }, {\n        field: 'id',\n        headerName: 'Ações',\n        flex: 1,\n        renderCell: function renderCell(params, row) {\n          return React.createElement(\"div\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 25\n            }\n          }, React.createElement(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            size: \"small\",\n            onClick: function _callee2(e) {\n              var provProviders, index;\n              return _regeneratorRuntime.async(function _callee2$(_context8) {\n                while (1) {\n                  switch (_context8.prev = _context8.next) {\n                    case 0:\n                      _context8.prev = 0;\n                      provProviders = _this3.state.provProviders;\n                      _context8.next = 4;\n                      return _regeneratorRuntime.awrap(getApiProviders({}, 1));\n\n                    case 4:\n                      index = provProviders.findIndex(function (x) {\n                        return x.id == params.row.id;\n                      });\n\n                      _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                        provProviders: undefined\n                      }));\n\n                      provProviders.splice(index, 1);\n\n                      _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                        provProviders: provProviders\n                      }));\n\n                      console.log(_this3.state.provProviders);\n                      _context8.next = 14;\n                      break;\n\n                    case 11:\n                      _context8.prev = 11;\n                      _context8.t0 = _context8[\"catch\"](0);\n                      console.log(_context8.t0);\n\n                    case 14:\n                      ;\n\n                    case 15:\n                    case \"end\":\n                      return _context8.stop();\n                  }\n                }\n              }, null, null, [[0, 11]], Promise);\n            },\n            style: {\n              marginLeft: 16\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 29\n            }\n          }, React.createElement(DeleteForeverIcon, {\n            fontSize: \"small\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 33\n            }\n          })));\n        }\n      }];\n      return React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 13\n        }\n      }, React.createElement(AppBar, {\n        position: \"static\",\n        style: {\n          padding: 10,\n          marginTop: 10,\n          marginBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 17\n        }\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 21\n        }\n      }, React.createElement(HomeIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 25\n        }\n      }), \"  \", React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 39\n        }\n      }, \"Cadastro / Fornecedores\"))), this.state.fields == undefined ? \"Carregando ...\" : React.createElement(LForms, {\n        forms: forms,\n        onChange: function onChange(e) {\n          _this3.onChange(e);\n        },\n        request: request,\n        validate: function validate(values) {\n          return validateFields(forms, values);\n        },\n        loading: this.state.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 17\n        }\n      }, React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 21\n        }\n      }, React.createElement(Card, {\n        style: {\n          marginBottom: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 21\n        }\n      }, React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 33\n        }\n      }, React.createElement(Typography, {\n        onClick: function onClick() {\n          var filter = _this3.state.filter;\n          filter['responsaveis-ind'] = _this3.state.filter['responsaveis-ind'] == 'block' ? 'none' : 'block';\n\n          _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n            filter: filter\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 33\n        }\n      }, React.createElement(IndeterminateCheckBoxIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 41\n        }\n      }), \" Respons\\xE1veis\"), React.createElement(\"div\", {\n        style: {\n          display: (_this$state$filter$re = this.state.filter['responsaveis-ind']) != null ? _this$state$filter$re : 'block'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 37\n        }\n      }, React.createElement(\"div\", {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'start',\n          display: 'flex'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 37\n        }\n      }, React.createElement(SelectInput, {\n        valueLabel: \"value\",\n        json: true,\n        valueLabel: 'name',\n        key: \"input-\" + 15019,\n        id: \"manager\",\n        label: \"Responsável\",\n        name: \"manager\",\n        values: this.state.managers,\n        style: {\n          flexBasis: window.innerWidth < 768 ? '75%' : '75%',\n          marginBottom: 15\n        },\n        onChange: function onChange(e) {\n          _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n            manager: e.target.value\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 41\n        }\n      }), !this.state.provManagerLoading ? React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        disableElevation: true,\n        onClick: function onClick() {\n          setManagers();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 45\n        }\n      }, React.createElement(AddIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 48\n        }\n      })) : React.createElement(CircularProgress, {\n        style: {\n          display: 'flex',\n          margin: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 49\n        }\n      })), React.createElement(\"div\", {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'start',\n          overflow: 'auto',\n          height: 350,\n          minHeight: 350\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 37\n        }\n      }, window.innerWidth > 720 ? React.createElement(DataGrid, {\n        sx: {\n          '& .MuiDataGrid-root': {\n            '& .MuiDataGrid-viewport': {\n              maxWidth: '600px'\n            }\n          }\n        },\n        rows: rows,\n        columns: columns,\n        spacing: 0,\n        stickyHeader: true,\n        disableClickEventBubbling: true,\n        disableColumnMenu: true,\n        localeText: DEFAULT_LOCALE_TEXT,\n        pageSize: 10,\n        rowsPerPageOptions: [10],\n        pagination: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 41\n        }\n      }) : rows.map(function (row, key) {\n        return React.createElement(Card, {\n          key: \"card-container\" + key,\n          style: {\n            marginTop: 15\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 49\n          }\n        }, React.createElement(CardContent, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 53\n          }\n        }, React.createElement(List, {\n          key: \"list_field_\" + key,\n          component: \"nav\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 53\n          }\n        }, Object.entries(row).map(function (field) {\n          var headerName = columns.find(function (column) {\n            return column.field === field[0];\n          });\n\n          if (headerName && headerName.field !== 'id') {\n            var _headerName$valueForm;\n\n            console.log(field[1]);\n            var value = (_headerName$valueForm = headerName.valueFormatter) != null ? _headerName$valueForm : headerName.renderCell;\n            value = value == undefined ? field[1] : value(headerName.row == true ? {\n              row: row\n            } : {\n              value: field[1]\n            });\n\n            if (headerName.renderCell !== undefined) {\n              console.log(row);\n              value = headerName.renderCell({\n                value: field[1],\n                row: row\n              }, row);\n              console.log(value);\n              return React.createElement(ListItem, {\n                style: {\n                  paddingTop: 0,\n                  paddingBottom: 0\n                },\n                __self: _this3,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 673,\n                  columnNumber: 73\n                }\n              }, React.createElement(ListItemText, {\n                primary: \"\" + headerName.headerName,\n                secondary: value,\n                __self: _this3,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 674,\n                  columnNumber: 77\n                }\n              }));\n            } else {\n              return React.createElement(ListItem, {\n                style: {\n                  paddingTop: 0,\n                  paddingBottom: 0\n                },\n                __self: _this3,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 679,\n                  columnNumber: 73\n                }\n              }, React.createElement(ListItemText, {\n                primary: \"\" + headerName.headerName,\n                secondary: \"\" + value,\n                __self: _this3,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 680,\n                  columnNumber: 77\n                }\n              }));\n            }\n          }\n        }))), React.createElement(CardActions, {\n          style: {\n            justifyContent: 'center'\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 53\n          }\n        }, Object.entries(row).map(function (field) {\n          var headerName = columns.find(function (column) {\n            return column.field === field[0];\n          });\n\n          if (headerName && headerName.field == 'id') {\n            return headerName.renderCell({\n              value: field[1],\n              row: row\n            }, row);\n          }\n        })));\n      }))))), React.createElement(Card, {\n        style: {\n          marginBottom: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 25\n        }\n      }, React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 29\n        }\n      }, React.createElement(Typography, {\n        onClick: function onClick() {\n          var filter = _this3.state.filter;\n          filter['fornecedores-ind'] = _this3.state.filter['fornecedores-ind'] == 'block' ? 'none' : 'block';\n\n          _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n            filter: filter\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 33\n        }\n      }, React.createElement(IndeterminateCheckBoxIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 37\n        }\n      }), \" Fornecedores\"), React.createElement(\"div\", {\n        style: {\n          display: (_this$state$filter$fo = this.state.filter['fornecedores-ind']) != null ? _this$state$filter$fo : 'block'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 33\n        }\n      }, React.createElement(\"div\", {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'start',\n          display: 'flex'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 33\n        }\n      }, React.createElement(SelectInput, {\n        valueLabel: \"value\",\n        json: true,\n        valueLabel: 'company_name',\n        key: \"input-\" + 15019,\n        id: \"providers\",\n        label: \"Filial\",\n        name: \"providers\",\n        values: this.state.filials,\n        style: {\n          flexBasis: window.innerWidth < 768 ? '75%' : '75%',\n          marginBottom: 15\n        },\n        onChange: function onChange(e) {\n          _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n            provider: e.target.value\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 37\n        }\n      }), this.state.provProvidersLoading == false ? React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        disableElevation: true,\n        onClick: function onClick() {\n          setProviders();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 45\n        }\n      }, React.createElement(AddIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 44\n        }\n      })) : React.createElement(CircularProgress, {\n        style: {\n          display: 'flex',\n          margin: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 45\n        }\n      })), React.createElement(\"div\", {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'start',\n          overflow: 'auto',\n          height: 350,\n          minHeight: 350\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 33\n        }\n      }, window.innerWidth > 720 ? React.createElement(DataGrid, {\n        sx: {\n          '& .MuiDataGrid-root': {\n            '& .MuiDataGrid-viewport': {\n              maxWidth: '600px'\n            }\n          }\n        },\n        rows: rowsProv,\n        columns: columnsProv,\n        spacing: 0,\n        stickyHeader: true,\n        disableClickEventBubbling: true,\n        disableColumnMenu: true,\n        localeText: DEFAULT_LOCALE_TEXT,\n        pageSize: 10,\n        rowsPerPageOptions: [10],\n        pagination: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 37\n        }\n      }) : rowsProv.map(function (row, key) {\n        return React.createElement(Card, {\n          key: \"card-container\" + key,\n          style: {\n            marginTop: 15\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 766,\n            columnNumber: 49\n          }\n        }, React.createElement(CardContent, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 767,\n            columnNumber: 53\n          }\n        }, React.createElement(List, {\n          key: \"list_field_\" + key,\n          component: \"nav\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 768,\n            columnNumber: 53\n          }\n        }, Object.entries(row).map(function (field) {\n          var headerName = columnsProv.find(function (column) {\n            return column.field === field[0] || field[0] == 'contacts' && column.field == 'phone1' || field[0] == 'contact_clone' && column.field == 'email';\n          });\n\n          if (headerName && headerName.field !== 'id') {\n            var _headerName$valueForm2;\n\n            console.log(field[1]);\n            var value = (_headerName$valueForm2 = headerName.valueFormatter) != null ? _headerName$valueForm2 : headerName.renderCell;\n            value = value == undefined ? field[1] : value(headerName.row == true ? {\n              row: row,\n              value: field[1]\n            } : {\n              value: field[1]\n            });\n\n            if (headerName.renderCell !== undefined) {\n              console.log(row);\n              value = headerName.renderCell({\n                value: field[1],\n                row: row\n              }, row);\n              console.log(value);\n              return React.createElement(ListItem, {\n                style: {\n                  paddingTop: 0,\n                  paddingBottom: 0\n                },\n                __self: _this3,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 782,\n                  columnNumber: 73\n                }\n              }, React.createElement(ListItemText, {\n                primary: \"\" + headerName.headerName,\n                secondary: value,\n                __self: _this3,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 783,\n                  columnNumber: 77\n                }\n              }));\n            } else {\n              return React.createElement(ListItem, {\n                style: {\n                  paddingTop: 0,\n                  paddingBottom: 0\n                },\n                __self: _this3,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 788,\n                  columnNumber: 73\n                }\n              }, React.createElement(ListItemText, {\n                primary: \"\" + headerName.headerName,\n                secondary: \"\" + value,\n                __self: _this3,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 789,\n                  columnNumber: 77\n                }\n              }));\n            }\n          }\n        }))), React.createElement(CardActions, {\n          style: {\n            justifyContent: 'center'\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 796,\n            columnNumber: 53\n          }\n        }, Object.entries(row).map(function (field) {\n          var headerName = columnsProv.find(function (column) {\n            return column.field === field[0];\n          });\n\n          if (headerName && headerName.field == 'id') {\n            return headerName.renderCell({\n              value: field[1],\n              row: row\n            }, row);\n          }\n        })));\n      }))))))));\n    }\n  }]);\n\n  return CreateProviders;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    session: store.authReducer.data,\n    snackbar: store.appReducer.snackbar\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setSnackbar: setSnackbar\n  }, dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CreateProviders));","map":{"version":3,"sources":["C:/Users/Maou/Documents/Projetos/CLIENTES/RNF/Completo/client/src/pages/Providers/create/index.js"],"names":["React","Component","Fragment","useState","useRef","useEffect","connect","bindActionCreators","withRouter","AppBar","Paper","HomeIcon","DeleteForeverIcon","Typography","Snackbar","AddIcon","DataGrid","RowsProp","ColDef","DEFAULT_LOCALE_TEXT","LForms","TextField","IndeterminateCheckBoxIcon","Button","Card","CardContent","setSnackbar","postApiProviders","getApiProviders","getApiProviderTypes","getApiManagers","getApiContributors","validaEmail","validaCnpj","isFutureData","InputCep","InputCnpj","InputPhone","InputDecimal","stringCpf","stringCnpj","Redirect","withSnackbar","MenuItem","FormHelperText","FormControl","FormControlLabel","Select","InputLabel","CardActions","CircularProgress","List","ListItem","ListItemText","MaskedDecimalInput","props","value","undefined","value1","setValue","error","setError","getMoney","str","parseInt","replace","formatReal","int","tmp","length","handleChange","e","val","target","onChange","id","style","required","disabled","type","helperText","label","SelectInput","validate","name","column","marginTop","json","values","map","ind","valueLabel","TypeEmpresaInput","setValue1","handleChange1","handler","console","log","flexBasis","marginRight","window","innerWidth","minWidth","marginLeft","CreateProviders","state","filter","data","fields","providertypes","contributors","managers","providers","filials","provider","manager","provProviders","provManagers","provProvidersLoading","provManagerLoading","states","active","setState","matrizData","localStorage","setItem","setProviders","find","x","open","message","prov","push","setManagers","provProvManagersLoading","request","rate","loading","response","success","history","goBack","errors","messages","Object","keys","err","field","toUpperCase","validateFields","campo","reverse","v","k","v1","k1","number","test","max","min","validateHandler","forms","title","component","entries","addresses","key","contacts","contracts","mask","decimal","rows","columns","headerName","flex","valueFormatter","params","renderCell","row","index","findIndex","splice","rowsProv","columnsProv","company_name","cnpj","phone1","email","padding","marginBottom","display","alignItems","justifyContent","margin","overflow","height","minHeight","maxWidth","paddingTop","paddingBottom","mapStateToProps","store","session","authReducer","snackbar","appReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment, useState, useRef, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { DataGrid, RowsProp, ColDef} from '@material-ui/data-grid';\r\nimport { DEFAULT_LOCALE_TEXT } from '../../../providers/langs/datagrid';\r\nimport LForms from '../../../components/Forms';\r\nimport TextField from '@material-ui/core/TextField';\r\n//\r\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n//\r\nimport { setSnackbar } from '../../../actions/appActions'\r\nimport { postApiProviders, getApiProviders, getApiProviderTypes, getApiManagers, getApiContributors } from '../../../providers/api'\r\nimport { validaEmail, validaCnpj, isFutureData } from '../../../providers/commonMethods'\r\n\r\nimport { InputCep, InputCnpj, InputPhone, InputDecimal, stringCpf, stringCnpj } from '../../../providers/masks'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { withSnackbar  } from 'notistack';\r\nimport { TextInput } from 'react-native';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { CardActions, CircularProgress, List, ListItem, ListItemText } from '@material-ui/core';\r\n\r\nconst MaskedDecimalInput = (props) => {\r\n    const [value1, setValue] = useState(props.value ?? undefined);\r\n    const [error, setError] = useState(false);\r\n    function getMoney( str )\r\n    {\r\n        return parseInt( str.replace(/[\\D]+/g,'') );\r\n    }\r\n\r\n    function formatReal( int )\r\n    {\r\n        var tmp = int+'';\r\n        tmp = tmp.replace(/([0-9]{2})$/g, \",$1\");\r\n        if( tmp.length > 6 )\r\n             tmp = tmp.replace(/([0-9]{3}),([0-9]{2}$)/g, \".$1,$2\");\r\n        return tmp;\r\n    }\r\n\r\n    function handleChange(e) {\r\n        //const { value, id } = e.target;\r\n        let val = e.target.value;\r\n        props.onChange(e) ?? undefined;\r\n        setValue(formatReal(getMoney(val)));\r\n    }\r\n    return (\r\n        <TextField key={`input-${props.id}`} size=\"small\" style={props.style}\r\n            required={props.required ?? false}\r\n            disabled={props.disabled ?? false}\r\n            error={error}\r\n            type={props.type ?? \"text\"}\r\n            value={value1 ?? ''}\r\n            helperText={error == true ? props.helperText ?? \"conteúdo inválido\" : \"\"}\r\n            id={props.id} label={props.label}\r\n            onChange={handleChange}\r\n            onBlur={handleChange}\r\n        />\r\n    )\r\n}\r\n\r\nconst SelectInput = (props) => {\r\n    const [value, setValue] = useState(props.value ?? \"Selecione\");\r\n    const [error, setError] = useState(false);\r\n    function handleChange(e) {\r\n        const { value, id } = e.target;\r\n        if (props.validate !== undefined) {\r\n            if (props.validate(value)) {\r\n                setError(false);\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }\r\n        e.target.id = e.target.name;\r\n        props.onChange(e)\r\n        setValue(e.target.value);\r\n    }\r\n    return (\r\n        <FormControl id={props.column} style={{ ...props.style, marginTop: '25px'}}>\r\n            <InputLabel id={props.column}>{props.label}</InputLabel>\r\n            <Select size=\"small\"\r\n                labelId={props.id}\r\n                id={props.name}\r\n                name={props.name}\r\n                value={value}\r\n                error={error}\r\n                placeholder=\"Selecione\"\r\n                //helperText={props.error ? props.helperText ?? \"conteúdo inválido\" : \"\"}\r\n                onChange={handleChange}\r\n                onBlur={handleChange}\r\n            >\r\n                <MenuItem key={`input-00`} value=\"Selecione\">Selecione</MenuItem>\r\n                {props.json ? (\r\n                    props.values.map((val, ind) => {\r\n                        return <MenuItem key={`input-${ind}`} value={val.id}>{val[props.valueLabel]}</MenuItem>\r\n                    })\r\n                ) : (\r\n                    props.values.map((val, ind) => {\r\n                        return <MenuItem key={`input-${ind}`} value={val}>{val}</MenuItem>\r\n                    })\r\n                )\r\n                }\r\n\r\n            </Select>\r\n        </FormControl>)\r\n}\r\nconst TypeEmpresaInput = (props) => {\r\n    const [value, setValue] = useState(props.value ?? \"Selecione\");\r\n    const [value1, setValue1] = useState(props.value ?? \"Selecione\");\r\n    function handleChange(e) {\r\n        const { value, id } = e.target;\r\n        props.onChange(e);\r\n        setValue(e.target.value);\r\n    }\r\n    async function handleChange1(e) {\r\n        const { value, id } = e.target;\r\n        await props.handler(value);\r\n        console.log(e.target);\r\n        console.log(`${e.target.id} - ${e.target.value}`)\r\n        props.onChange(e);\r\n        setValue1(e.target.value);\r\n    }\r\n    return (<div style={{flexBasis: props.style.flexBasis, marginRight: 5}}>\r\n        <SelectInput valueLabel=\"value\" json={true} value={value} helperText={props.helperText ?? \"\"} key={`input-${15000}`} id={\"type\"} label={\"Empresa\"} name={\"type\"} values={[{id:1, value: 'Matriz'},{id:2, value: 'Filial'} ]} style={{flexBasis: window.innerWidth < 768 ? '100%' : '50%', minWidth: value == 2 ? '45%' : '90%'}} onChange={handleChange} />\r\n        {value == 2 &&\r\n        <SelectInput valueLabel={props.valueLabel} json={props.json} value={value1} helperText={props.helperText ?? \"\"} key={`input-${15001}`} id={\"matriz_id\"} label={props.label} name={\"matriz_id\"} values={props.values} style={{flexBasis: window.innerWidth < 768 ? '100%' : '50%', minWidth: '45%', marginLeft: 10 }} onChange={handleChange1} />\r\n    }</div>)\r\n}\r\n\r\nclass CreateProviders extends Component {\r\n    \r\n    state = {\r\n        filter: ['flex'],\r\n        data: [],\r\n        fields: {},\r\n        providertypes: [],\r\n        contributors: [],\r\n        managers: [],\r\n        providers: [],\r\n        filials: [],\r\n        provider: undefined,\r\n        manager: 0,\r\n        provProviders: [],\r\n        provManagers: [],\r\n        provProvidersLoading: false,\r\n        provManagerLoading: false,\r\n        states: []\r\n    }\r\n    async componentDidMount() {\r\n        const data = await getApiProviders({type: 1, active: 1});\r\n        const contributors = await getApiContributors({active: 1});\r\n        const managers = await getApiManagers();\r\n        const providertypes = await getApiProviderTypes();\r\n        const providers = await getApiProviders();\r\n        const filials = await getApiProviders({type: 2, active: 1});\r\n        this.setState({\r\n            ...this.state, \r\n            matrizData: undefined,\r\n            data: data.data, \r\n            contributors: contributors.data,\r\n            managers: managers.data, \r\n            providertypes: providertypes.data,\r\n            providers: providers.data,\r\n            filials: filials.data\r\n        });\r\n        localStorage.setItem(\"sessionTime\", 900);\r\n\r\n    }\r\n    onChange(e){\r\n        this.setState({...this.state, fields: e});\r\n    }\r\n    render() {\r\n        //console.log(this.state.data)\r\n         // to use snackbar Provider\r\n         const setProviders = async () => {\r\n             try{\r\n                let provProviders = this.state.provProviders;\r\n                \r\n                console.log(this.state.provider)\r\n                if(this.state.provider != 'Selecione' && provProviders !== undefined ){\r\n                    this.setState({...this.state, provProvidersLoading: false});\r\n                    if(provProviders.find(x => x.id === this.state.provider)){\r\n                        this.props.setSnackbar({ open: true, message: 'Filial já associado.' });\r\n                        return false;\r\n                    }\r\n                    this.setState({...this.state, provProviders: undefined});\r\n                    const prov = await getApiProviders({}, this.state.provider);\r\n                    provProviders.push(prov);\r\n                    this.setState({...this.state, provProviders, provProvidersLoading: false});\r\n                }\r\n            }catch(err){\r\n                console.log(err);\r\n            }\r\n        }\r\n\r\n        const setManagers = async () => {\r\n            let provManagers = this.state.provManagers;\r\n            \r\n            console.log(this.state.provider)\r\n            if(this.state.manager != 'Selecione' && provManagers !== undefined ){\r\n                this.setState({...this.state, provProvManagersLoading: false});\r\n                if(provManagers.find(x => x.id === this.state.manager)){\r\n                    this.props.setSnackbar({ open: true, message: 'Responsável já associado.' });\r\n                    return false;\r\n                }\r\n                this.setState({...this.state, provManagers: undefined});\r\n                const prov = await getApiManagers({}, this.state.manager);\r\n                provManagers.push(prov);\r\n                this.setState({...this.state, provManagers, provProvManagersLoading: false});\r\n            }\r\n        }\r\n        \r\n        const request = async (data) => {\r\n            this.props.setSnackbar({ open: true, message: \"Validando Dados, Aguarde ...\", });\r\n            let providers = [];\r\n            let managers = [];\r\n            this.state.provManagers.map(values => {\r\n                managers.push(values.id);\r\n            });\r\n            this.state.provProviders.map(values => {\r\n                providers.push(values.id);\r\n            });\r\n            if(managers.length == 0){\r\n                this.props.setSnackbar({ open: true, message: \"Você deve manter pelo menos 1 Responsável vinculado\"});\r\n                return false;\r\n            }\r\n            data.providers = providers;\r\n            data.managers = managers;\r\n            data.rate = data.rate.replace(/\\./g,'').replace(',', '.');\r\n            this.setState({ ...this.state, loading: true });\r\n            let response = await postApiProviders(data);\r\n            //console.log(response);\r\n            if (response.data.success) {\r\n                //this.props.enqueueSnackbar( response.data.message, { variant: 'success' });\r\n                this.props.setSnackbar({ open: true, message: response.data.message });\r\n                this.setState({ ...this.state, loading: false });\r\n                this.props.history.goBack();\r\n            } else {\r\n                console.log(response)\r\n                let errors = response.data ?? undefined;\r\n                //let { errors } = response.data.error.response.data ?? {error: undefined}\r\n                let messages = '';\r\n                if(errors !== undefined && errors.error !== undefined && errors.error.response && errors.error.response.data !== undefined && errors.error.response.data.errors !== undefined){\r\n                    Object.keys(errors.error.response.data.errors).map(err => {\r\n                        console.log(err);\r\n                        let field = err == \"file\" ? \"Anexo\" : err\r\n                        messages += `O ${field.toUpperCase()} ${errors.error.response.data.errors[err][0]} \\n`;\r\n                    })\r\n                } else{\r\n                    messages = 'Houve um problema em sua requisição!'\r\n                }\r\n                //response.data.error.response.data.errors\r\n                //this.props.enqueueSnackbar( message, { variant: 'error' });\r\n                this.setState({ ...this.state, loading: false });\r\n                this.props.setSnackbar({ open: true, message: messages});\r\n            }\r\n\r\n        }\r\n        const validateFields = (fields, values) => {\r\n            //console.log(fields);\r\n            let campo = undefined;\r\n            fields.reverse().map((v,k) => {\r\n                v.fields.reverse().map((v1,k1)=>{\r\n                        let value = values[v1.column];\r\n                        if (v1.validate !== undefined) {\r\n                            if (v1.validate.number !== undefined) {\r\n                                if (/^[-]?\\d+$/.test(value) == false)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label} é somente números ` }\r\n                            }\r\n                            \r\n                            /*if(v1.validate.decimal !== undefined){\r\n                                if (/^\\s*-?(\\d+(\\.\\d{1,2})?|\\.\\d{1,2})\\s*$/.test(value) == false)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label} é somente números e ponto ` }\r\n                            }*/\r\n\r\n                            if (v1.validate.max !== undefined) {\r\n                                if (value.length > v1.validate.max)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label}, tamanho máximo de ${v1.validate.max} caracteres exêdido` };\r\n                            }\r\n\r\n                            if (v1.validate.min !== undefined) {\r\n                                if (value.length < v1.validate.min)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label}, tamanho minimo de ${v1.validate.min} caracteres.` };\r\n                            }\r\n\r\n                            if (v1.validate.required !== undefined) {\r\n                                if(value == \"Selecione\"){\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label} é inválido ` }\r\n                                }\r\n                                if (value.length == 0)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label} é obrigatório` };\r\n                            }\r\n                        }\r\n                        \r\n                        if(v1.validateHandler !== undefined){\r\n                            if (v1.validateHandler(value) == false)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label}  é inválido ` }\r\n                        }\r\n                    })\r\n                })\r\n                //console.log(campo)\r\n                campo !== undefined ? this.props.setSnackbar({ open: true, message: campo.message}) : '';\r\n\r\n                return campo === undefined ? true : false\r\n        }\r\n        const flexBasis = '22%';\r\n        const forms = [\r\n            {\r\n                title: 'Dados Básicos',\r\n                fields: [\r\n                    { column: 'active', label: 'Ativo', type: 'checkbox',  value: 1, disabled: true, flexBasis : \"100%\" },\r\n                    {\r\n                        column: 'providertype_id', label: 'Tipo Fornecedor', type: 'select',\r\n                        json: true, \r\n                        valueLabel: \"name\",\r\n                        values: this.state.providertypes,//[{id: 1, value: \"Farmácia\"},{id: 2, value: \"Loja\"}],\r\n                        validate: {required: true },\r\n                        value: \"Selecione\",\r\n                        flexBasis:'13%'\r\n                    },\r\n                    {\r\n                        column: 'matriz_id', \r\n                        label: 'Matriz', \r\n                        type: 'custom',\r\n                        json: true, \r\n                        valueLabel: \"company_name\",\r\n                        values: this.state.providers,\r\n                        flexBasis:'30%',\r\n                        component: TypeEmpresaInput,\r\n                        handler: async (id) => {\r\n                            let matrizData = await getApiProviders({},id);\r\n                            let fields = this.state.fields;\r\n                            Object.entries(matrizData.addresses)\r\n                                .map(([key, val]) => {\r\n                                    fields[key] = val\r\n                            });\r\n                            Object.entries(matrizData.contacts)\r\n                                .map(([key, val]) => {\r\n                                    fields[key] = val\r\n                            });\r\n                            Object.entries(matrizData.contracts)\r\n                                .map(([key, val]) => {\r\n                                    fields[key] = val\r\n                            });\r\n                            \r\n                            this.setState({...this.state, fields, matrizData});\r\n                            console.log(this.state.fields);\r\n                        }\r\n                    },\r\n                    { column: 'cnpj', label: 'CNPJ', type: 'text', mask: InputCnpj, validate: {min: 11, number: true, required: true},validateHandler: validaCnpj, flexBasis: '20%', helperText: \"o valor digitado é inválido\" },\r\n                    { column: 'company_name', label: 'Razão Social', type: 'text', validate: {max: 50, required: true}, flexBasis:'25%' },\r\n                    { column: 'fantasy_name', label: 'Nome Fantasia', type: 'text', validate: {max: 50, required: true}, flexBasis:'25%' },\r\n                    { column: 'anexo', label: 'Documento', type: 'file', flexBasis },\r\n                    { column: 'logo', label: 'Logo marca', type: 'file', validate: {required: true}, flexBasis },\r\n                    //\r\n                    //{ column: 'created_at', label: 'Data', type: 'date' },\r\n                ]\r\n            },\r\n            {\r\n                id: 'addr',\r\n                title: 'Endereço',\r\n                //flexFlow: 'row no-wrap',\r\n                //json: \"address\",\r\n                fields: [\r\n                    { column: 'addr_clone', label: 'Clonar Matriz', disabled: this.state.fields['type'] == 1, type: 'checkbox', flexBasis : \"100%\" },\r\n                    \r\n                    {\r\n                        column: 'zipcode', \r\n                        label: 'CEP', type: 'text',\r\n                        disabled: (this.state.fields['addr_clone'] == 1), \r\n                        value: this.state.fields['zipcode'],\r\n                        mask: InputCep, validate: {max: 9, required: true}, \r\n                        flexBasis: '9%',\r\n                        //handle: getAddress \r\n                    },\r\n                    { column: 'street', value: this.state.fields['street'], label: 'Endereço',disabled: (this.state.fields['addr_clone'] == 1), validate: {max: 100, required: true}, type: 'text', flexBasis },\r\n                    { column: 'additional',value: this.state.fields['additional'], label: 'Complemento',disabled: (this.state.fields['addr_clone'] == 1), validate: {max: 20}, type: 'text', flexBasis },\r\n                    {\r\n                        column: 'uf', label: 'Estado', type: 'select',\r\n                        validate: {required: true },disabled: (this.state.fields['addr_clone'] == 1),\r\n                        values: [\"Acre\", \"Alagoas\", \"Amazonas\", \"Amapá\", \"Bahia\", \"Ceará\", \"Brasília\", \"Espírito Santo\", \"Goiás\", \"Maranhão\", \"Minas Gerais\", \"Mato Grosso do Sul\", \"Mato Grosso\", \"Pará\", \"Paraíba\", \"Pernambuco\", \"Piauí\", \"Paraná\", \"Rio de Janeiro\", \"Rio Grande do Norte\", \"Rondônia\", \"Roraima\", \"Rio Grande do Sul\", \"Santa Catarina\", \"Sergipe\", \"São Paulo\", \"Tocantins\"],\r\n                        flexBasis, style:{minWidth: \"192px\"},\r\n                        value: this.state.fields['uf'],\r\n                    },\r\n                    { column: 'city', value: this.state.fields['city'],disabled: (this.state.fields['addr_clone'] == 1), label: 'Cidade', type: 'text', validate: {max: 100, required: true}, flexBasis },\r\n                ]\r\n            },\r\n            {\r\n                title: 'Contato',\r\n                //json: 'contact',\r\n                fields: [\r\n                    { column: 'contact_clone', label: 'Clonar Matriz', disabled: this.state.fields['type'] == 1, type: 'checkbox', flexBasis : \"100%\" },\r\n                    { column: 'phone1', label: 'Contato', type: 'text', disabled: (this.state.fields['contact_clone'] == 1 ? true : false), mask: InputPhone, validate: {max: 15, required: true}, flexBasis: '20%' },\r\n                    { column: 'phone2', label: 'Contato alternativo', type: 'text', disabled: (this.state.fields['contact_clone'] == 1 ? true : false), mask: InputPhone, validate: {max: 15}, flexBasis: '20%' },\r\n                    { column: 'email', label: 'E-mail', type: 'email', disabled: (this.state.fields['contact_clone'] == 1 ? true : false), validate: {max: 100}, validateHandler: validaEmail, flexBasis: '20%' },\r\n                    { column: 'site', label: 'Site', type: 'text', disabled: (this.state.fields['contact_clone'] == 1 ? true : false), validate: {max: 100}, flexBasis: '20%' },\r\n                ]\r\n            },\r\n            {\r\n                title: 'Redes Sociais',\r\n                //json: 'contact',\r\n                fields: [\r\n                    { column: 'linkedin', label: 'Usuário do LinkedIn', disabled: (this.state.fields['contact_clone'] == 1 ? true : false), type: 'text', validate: {max: 100, required: true}, flexBasis: '20%' },\r\n                    { column: 'facebook', label: 'Usuário do Facebook', disabled: (this.state.fields['contact_clone'] == 1 ? true : false), type: 'text', validate: {max: 100, required: true}, flexBasis: '20%' },\r\n                    { column: 'instagram', label: 'Usuário do Instagram', disabled: (this.state.fields['contact_clone'] == 1 ? true : false), type: 'text', validate: {max: 100, required: true}, flexBasis: '20%' },\r\n                ]\r\n            },\r\n            {\r\n                title: 'Contrato Atual',\r\n                //json: 'contact',\r\n                fields: [\r\n                    { column: 'contract_clone', label: 'Clonar Matriz', disabled: this.state.fields['type'] == 1, type: 'checkbox', flexBasis : \"100%\" },\r\n                    { column: 'accession_date', label: 'Data de Adesão - Início', disabled: (this.state.fields['contract_clone'] == 1), type: 'date', validate: {required: true}, flexBasis: '20%' },\r\n                    { column: 'end_date', label: 'Data de Adesão - Fim', disabled: (this.state.fields['contract_clone'] == 1), type: 'date', validate: {required: true}, flexBasis: '20%' },\r\n                    { \r\n                        column: 'contributor_id', \r\n                        label: 'Vendedor', \r\n                        type: 'autocomplete',\r\n                        validate:{required: true}, \r\n                        json: true,\r\n                        valueLabel: 'name',\r\n                        values: this.state.contributors,\r\n                        flexBasis: '20%', disabled: (this.state.fields['contract_clone'] == 1)\r\n                    },\r\n                    { column: 'rate', label: 'Taxa de Adesão', type: 'decimal', disabled: (this.state.fields['contract_clone'] == 1), validate: {decimal: true, required: true}, flexBasis: '20%' },\r\n                ]\r\n            }\r\n        ]\r\n\r\n        //\r\n        const rows =  (this.state.provManagers !== undefined) ? this.state.provManagers : [];\r\n        const columns = [\r\n            {\r\n                field: 'cpf', headerName: 'CPF', flex: 0.7,\r\n                valueFormatter: (params: ValueFormatterParams) => {\r\n                    return stringCpf(params.value);\r\n                }\r\n            },\r\n            { field: 'name', headerName: 'Nome', flex: 2 },\r\n            { field: 'function', headerName: 'Função', flex: 1 },\r\n            {\r\n                field: 'active',\r\n                headerName: 'Situação',\r\n                flex: 0.5,\r\n                valueFormatter: (params: ValueFormatterParams) => {\r\n                    return params.value === 1 ? \"Ativo\" : \"Inativo\"\r\n                }\r\n            }, {\r\n                field: 'id',\r\n                headerName: 'Ações',\r\n                flex: 1,\r\n                renderCell: (params: ValueFormatterParams, row: RowIdGetter) => {\r\n                    //let view = this.state.session.permissions.find(x => x.module === module_id)\r\n                    return (\r\n                        <div>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                onClick={async (e) => {\r\n                                    try{\r\n                                            let provManagers = this.state.provManagers;\r\n                                            await getApiProviders({}, 1);\r\n                                            let index = provManagers.findIndex(x => x.id == params.row.id)\r\n                                            this.setState({...this.state, provManagers: undefined});\r\n                                            provManagers.splice(index,1)\r\n                                            this.setState({...this.state, provManagers });\r\n                                            // console.log(this.state.provManagers)\r\n                                        //if(this.state.provManagers.length > 1){\r\n                                            //await deleteApiManagersProviders({provider_id: this.props.match.params.id, manager_id: params.row.id });\r\n                                            //const data = await getApiProviders({}, this.props.match.params.id);\r\n                                            //this.setState({...this.state, provManagers: data.managers});\r\n                                        /*}else{\r\n                                            this.props.setSnackbar({ open: true, message: \"Você deve manter pelo menos 1 registro\" })\r\n                                        }*/\r\n                                       \r\n                                    }catch(err){\r\n                                        console.log(err)\r\n                                    };\r\n                                    \r\n                                }}\r\n                                style={{ marginLeft: 16 }}\r\n                            >\r\n                               <DeleteForeverIcon fontSize=\"small\" />\r\n                            </Button>\r\n                        </div>\r\n                    )\r\n                },\r\n            },\r\n        ];\r\n        // Providers Grid\r\n        const rowsProv: RowsProp = (this.state.provProviders !== undefined) ? this.state.provProviders : [];\r\n        const columnsProv: ColDef[] = [\r\n            {\r\n                field: 'company_name', headerName: 'Farmácia', flex: 1.2, row:true,\r\n                valueFormatter: (params: ValueFormatterParams) => {\r\n                    return params.row.company_name +\" - \"+ stringCnpj(params.row.cnpj ?? '00000000000000');\r\n                }\r\n            },\r\n           { \r\n            field: 'phone1', headerName: 'Telefone', flex: 0.7, row: true,\r\n                valueFormatter: (params: ValueFormatterParams) => {\r\n                    //let provider = this.state.providers.filter(prov => prov.id === params.row.id); \r\n                    //console.log(params.row)\r\n                    return params.row.contacts ? params.row.contacts.phone1 : '-';\r\n                }\r\n            },\r\n            { \r\n                field: 'email', headerName: 'E-mail',flex: 0.7, row: true,\r\n                valueFormatter: (params: ValueFormatterParams) => {\r\n                    //let provider = this.state.providers.filter(prov => prov.id === params.row.id); \r\n                    //console.log(provider)\r\n                    return params.row.contacts ? params.row.contacts.email : '';\r\n                }\r\n            },\r\n            { \r\n                field: 'type', headerName: 'Tipo', flex: 0.7, row: true,\r\n                valueFormatter: (params: ValueFormatterParams) => {\r\n                    return params.row.type === 1 ? \"Matriz\" : \"Filial\"\r\n                } \r\n            }, \r\n            {\r\n                field: 'id',\r\n                headerName: 'Ações',\r\n                flex: 1,\r\n                renderCell: (params: ValueFormatterParams, row: RowIdGetter) => {\r\n                    //let view = this.state.session.permissions.find(x => x.module === module_id)\r\n                    return (\r\n                        <div>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                onClick={async (e) => {\r\n                                    try {\r\n                                        //if(this.state.provManagers.length > 1){\r\n                                            let provProviders = this.state.provProviders;\r\n                                            await getApiProviders({}, 1);\r\n                                            let index = provProviders.findIndex(x => x.id == params.row.id)\r\n                                            this.setState({...this.state, provProviders: undefined});\r\n                                            provProviders.splice(index,1)\r\n                                            this.setState({...this.state, provProviders });\r\n                                            console.log(this.state.provProviders)\r\n                                        /*}else{\r\n                                            this.props.setSnackbar({ open: true, message: \"Você deve manter pelo menos 1 registro\" })\r\n                                        }*/\r\n\r\n                                        \r\n                                    } catch (err) {\r\n                                        console.log(err)\r\n                                    };\r\n                                }}\r\n                                style={{ marginLeft: 16 }}\r\n                            >\r\n                                <DeleteForeverIcon fontSize=\"small\" />\r\n                            </Button>\r\n                        </div>\r\n                    )\r\n                },\r\n            },\r\n        ]\r\n\r\n        return (\r\n            <Fragment>\r\n                <AppBar position=\"static\" style={{ padding: 10, marginTop: 10, marginBottom: 10 }}>\r\n                    <Typography variant=\"h6\">\r\n                        <HomeIcon />  <span>Cadastro / Fornecedores</span>\r\n                    </Typography>\r\n                </AppBar>\r\n                {this.state.fields == undefined ? (\"Carregando ...\"):\r\n                (\r\n                <LForms forms={forms}\r\n                    onChange={(e) => {this.onChange(e)}}\r\n                    request={request} \r\n                    validate={(values) => { return validateFields(forms,values)}}\r\n                    loading={this.state.loading}\r\n                >\r\n                    <div>\r\n                    <Card style={{ marginBottom: 15 }}>\r\n                                <CardContent>\r\n                                <Typography onClick={() => {\r\n                                            let filter = this.state.filter;\r\n                                            filter['responsaveis-ind'] = this.state.filter['responsaveis-ind'] == 'block' ? 'none' : 'block'\r\n                                            this.setState({ ...this.state, filter })\r\n                                        }}>\r\n                                        <IndeterminateCheckBoxIcon /> Responsáveis\r\n                                    </Typography>\r\n                                    <div style={{\r\n                                        display: this.state.filter['responsaveis-ind'] ?? 'block',\r\n                                    }}>\r\n                                    <div  style={{\r\n                                            alignItems: 'center',\r\n                                            justifyContent: 'start',\r\n                                            display: 'flex',\r\n                                        }}>\r\n                                    \r\n                                        <SelectInput valueLabel=\"value\" \r\n                                            json={true} \r\n                                            valueLabel={'name'}\r\n                                            key={`input-${15019}`} id={\"manager\"} label={\"Responsável\"} name={\"manager\"} \r\n                                            values={this.state.managers} \r\n                                            style={{flexBasis: window.innerWidth < 768 ? '75%' : '75%', marginBottom: 15 }} \r\n                                            onChange={(e) => {\r\n                                                this.setState({...this.state, manager: e.target.value});\r\n                                            }} />\r\n                                            {!this.state.provManagerLoading ? (\r\n                                            <Button variant=\"contained\" color=\"primary\" size=\"small\" disableElevation \r\n                                            onClick={() => {\r\n                                                setManagers();\r\n                                            }}><AddIcon /></Button>)\r\n                                            : (\r\n                                                <CircularProgress style={{ display: 'flex', margin: 'auto' }} />\r\n                                            )}\r\n                                        </div>\r\n                                    <div style={{\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'start',\r\n                                        overflow: 'auto',\r\n                                        height: 350,\r\n                                        minHeight: 350,\r\n                                    }}>\r\n                                        { window.innerWidth > 720 ? (\r\n                                        <DataGrid sx={{\r\n                                            '& .MuiDataGrid-root': {\r\n                                                '& .MuiDataGrid-viewport': {\r\n                                                    maxWidth: '600px',\r\n                                                },\r\n                                            }\r\n                                        }}\r\n                                            rows={rows} columns={columns}\r\n                                            spacing={0}\r\n                                            stickyHeader\r\n                                            disableClickEventBubbling\r\n                                            disableColumnMenu={true}\r\n                                            localeText={DEFAULT_LOCALE_TEXT}\r\n                                            pageSize={10} rowsPerPageOptions={[10]} pagination\r\n                                        />) : rows.map((row, key) => {\r\n                                            //console.log(row);\r\n                                            return (\r\n                                                <Card key={`card-container${key}`} style={{marginTop: 15}}>\r\n                                                    <CardContent>\r\n                                                    <List key={`list_field_${key}`} component=\"nav\">\r\n                                                        {Object.entries(row).map(field => {\r\n                                                            \r\n                                                            let headerName = columns.find(column => column.field === field[0]);\r\n                                                            if (headerName && headerName.field !== 'id') {\r\n                                                                console.log(field[1])\r\n                                                                let value = headerName.valueFormatter ?? headerName.renderCell;\r\n                                                                value = value == undefined ? field[1] : value(headerName.row == true ? {row} : {value: field[1]}); \r\n                                                                if(headerName.renderCell !== undefined)\r\n                                                                {\r\n                                                                    console.log(row);\r\n                                                                    value = headerName.renderCell({value: field[1], row: row }, row);\r\n                                                                    console.log(value);\r\n                                                                    return (\r\n                                                                        <ListItem style={{paddingTop: 0, paddingBottom: 0}}>\r\n                                                                            <ListItemText primary={`${headerName.headerName}`} secondary={value} />\r\n                                                                        </ListItem>\r\n                                                                    )\r\n                                                                }else{\r\n                                                                    return (\r\n                                                                        <ListItem style={{paddingTop: 0, paddingBottom: 0}}>\r\n                                                                            <ListItemText primary={`${headerName.headerName}`} secondary={`${value}`} />\r\n                                                                        </ListItem>\r\n                                                                    )}\r\n                                                                }\r\n                                                            }\r\n                                                        )\r\n                                                        }\r\n                                                        </List>\r\n                                                    </CardContent>\r\n                                                    <CardActions style={{justifyContent: 'center'}}>\r\n                                                    {Object.entries(row).map(field => {\r\n                                                        let headerName = columns.find(column => column.field === field[0]);\r\n                                                        if(headerName && headerName.field == 'id') {\r\n                                                            return headerName.renderCell({value: field[1], row }, row);\r\n                                                        }\r\n                                                    })}\r\n                                                    </CardActions>\r\n                                                </Card>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                                </CardContent>\r\n                            </Card>\r\n\r\n                        <Card style={{ marginBottom: 15 }}>\r\n                            <CardContent>\r\n                                <Typography onClick={() => {\r\n                                            let filter = this.state.filter;\r\n                                            filter['fornecedores-ind'] = this.state.filter['fornecedores-ind'] == 'block' ? 'none' : 'block'\r\n                                            this.setState({ ...this.state, filter })\r\n                                        }}>\r\n                                    <IndeterminateCheckBoxIcon /> Fornecedores\r\n                                </Typography>\r\n                                <div style={{\r\n                                    display: this.state.filter['fornecedores-ind'] ?? 'block',\r\n                                }}>\r\n                                <div style={{\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'start',\r\n                                        display: 'flex',\r\n                                 }}>\r\n                                    <SelectInput valueLabel=\"value\" \r\n                                        json={true} \r\n                                        valueLabel={'company_name'}\r\n                                        key={`input-${15019}`} id={\"providers\"} label={\"Filial\"} name={\"providers\"} \r\n                                        values={this.state.filials} \r\n                                        style={{flexBasis: window.innerWidth < 768 ? '75%' : '75%', marginBottom: 15 }} \r\n                                        onChange={(e) => {\r\n                                            this.setState({...this.state, provider: e.target.value});\r\n                                        }} />\r\n                                        {this.state.provProvidersLoading == false ? (\r\n                                            <Button variant=\"contained\" color=\"primary\" size=\"small\" disableElevation \r\n                                        onClick={() => {\r\n                                            setProviders();\r\n                                        }}><AddIcon /></Button>\r\n                                        ) : (\r\n                                            <CircularProgress style={{ display: 'flex', margin: 'auto' }} />\r\n                                        )}\r\n                                        \r\n                                    </div>\r\n                                <div style={{\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'start',\r\n                                    overflow: 'auto',\r\n                                    height: 350,\r\n                                    minHeight: 350,\r\n                                }}>\r\n                                     { window.innerWidth > 720 ? (\r\n                                    <DataGrid sx={{\r\n                                        '& .MuiDataGrid-root': {\r\n                                            '& .MuiDataGrid-viewport': {\r\n                                                maxWidth: '600px',\r\n                                            },\r\n                                        }\r\n                                    }}\r\n                                        rows={rowsProv} columns={columnsProv}\r\n                                        spacing={0}\r\n                                        stickyHeader\r\n                                        disableClickEventBubbling\r\n                                        disableColumnMenu={true}\r\n                                        localeText={DEFAULT_LOCALE_TEXT}\r\n                                        pageSize={10} rowsPerPageOptions={[10]} pagination\r\n                                    />) : rowsProv.map((row, key) => {\r\n                                            //console.log(row);\r\n                                            return (\r\n                                                <Card key={`card-container${key}`} style={{marginTop: 15}}>\r\n                                                    <CardContent>\r\n                                                    <List key={`list_field_${key}`} component=\"nav\">\r\n                                                        {Object.entries(row).map(field => {\r\n                                                            \r\n                                                            let headerName = columnsProv.find(column => (column.field === field[0] || field[0] == 'contacts' && column.field == 'phone1' || field[0] == 'contact_clone' && column.field == 'email' ));\r\n                                                            if (headerName && headerName.field !== 'id') {\r\n                                                                console.log(field[1])\r\n                                                                let value = headerName.valueFormatter ?? headerName.renderCell;\r\n                                                                value = value == undefined ? field[1] : value(headerName.row == true ? {row, value: field[1]} : {value: field[1]}); \r\n                                                                if(headerName.renderCell !== undefined)\r\n                                                                {\r\n                                                                    console.log(row);\r\n                                                                    value = headerName.renderCell({value: field[1], row: row }, row);\r\n                                                                    console.log(value);\r\n                                                                    return (\r\n                                                                        <ListItem style={{paddingTop: 0, paddingBottom: 0}}>\r\n                                                                            <ListItemText primary={`${headerName.headerName}`} secondary={value} />\r\n                                                                        </ListItem>\r\n                                                                    )\r\n                                                                }else{\r\n                                                                    return (\r\n                                                                        <ListItem style={{paddingTop: 0, paddingBottom: 0}}>\r\n                                                                            <ListItemText primary={`${headerName.headerName}`} secondary={`${value}`} />\r\n                                                                        </ListItem>\r\n                                                                    )}\r\n                                                                }\r\n                                                        })}\r\n                                                        </List>\r\n                                                    </CardContent>\r\n                                                    <CardActions style={{justifyContent: 'center'}}>\r\n                                                    {Object.entries(row).map(field => {\r\n                                                        let headerName = columnsProv.find(column => column.field === field[0]);\r\n                                                        if(headerName && headerName.field == 'id') {\r\n                                                            return headerName.renderCell({value: field[1], row }, row);\r\n                                                        }\r\n                                                    })}\r\n                                                    </CardActions>\r\n                                                </Card>\r\n                                            )\r\n                                        })}\r\n                                </div>\r\n                            </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </div>\r\n                </LForms>)}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = store => ({\r\n    session: store.authReducer.data,\r\n    snackbar: store.appReducer.snackbar\r\n});\r\nconst mapDispatchToProps = dispatch =>\r\n    bindActionCreators({ setSnackbar }, dispatch);\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CreateProviders))\r\n"]},"metadata":{},"sourceType":"module"}