{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport HomeIcon from '@material-ui/icons/Home';\nimport BlockIcon from '@material-ui/icons/Block';\nimport EditIcon from '@material-ui/icons/Edit';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport LDataGrid from \"../../components/List/datagrid\";\nimport LCardGrid from \"../../components/List/cardgrid\";\nimport { setSnackbar } from \"../../actions/appActions\";\nimport { getApiManagers, getApiProviders, putApiManagers } from \"../../providers/api\";\nimport { InputCpf, stringCpf } from \"../../providers/masks\";\nimport { CircularProgress, IconButton, Toolbar } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\nimport { DataGrid, RowsProp, ColDef, CheckCircleIcon } from '@material-ui/data-grid';\nvar module_id = 2;\n\nfunction BlockDialog(props) {\n  var _React$useState = React.useState(props.open),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      loading = _React$useState4[0],\n      setLoading = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      justfy = _React$useState6[0],\n      setjustfy = _React$useState6[1];\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n    setLoading(false);\n  };\n\n  var send = function send() {\n    var _props$active;\n\n    return _regeneratorRuntime.async(function send$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(putApiManagers(props.id, {\n              active: (_props$active = props.active) != null ? _props$active : undefined,\n              justification: justfy\n            }));\n\n          case 3:\n            props.handle(props.active);\n            props.handleClose();\n            setjustfy('');\n            setLoading(false);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(\"div\", null, React.createElement(Dialog, {\n    open: props.open,\n    onClose: props.handleClose,\n    \"aria-labelledby\": \"form-dialog-title\"\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\"\n  }, props.active == 0 ? \"B\" : \"Desb\", \"loqueio de respons\\xE1vel\"), React.createElement(DialogContent, null, React.createElement(DialogContentText, null, \"Confirma o \", props.active == 0 ? \"\" : \"Des\", \"bloqueio do registro selecionado?\"), props.active == 0 && React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"justification\",\n    label: \"Justificativa\",\n    type: \"text\",\n    fullWidth: true,\n    value: justfy,\n    onChange: function onChange(e) {\n      setjustfy(e.target.value);\n    }\n  })), React.createElement(DialogActions, null, React.createElement(Button, {\n    onClick: props.handleClose,\n    color: \"primary\"\n  }, \"N\\xC3O\"), !loading ? React.createElement(Button, {\n    onClick: send,\n    color: \"primary\"\n  }, \"SIM\") : React.createElement(Button, {\n    color: \"primary\"\n  }, React.createElement(CircularProgress, {\n    style: {\n      display: 'flex'\n    }\n  })))));\n}\n\nvar Managers = function (_Component) {\n  _inherits(Managers, _Component);\n\n  var _super = _createSuper(Managers);\n\n  function Managers() {\n    var _this;\n\n    _classCallCheck(this, Managers);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      session: JSON.parse(localStorage.getItem(\"user\")),\n      managers: [],\n      providers: [],\n      pageRequest: {},\n      blockDialog: {\n        open: false,\n        id: undefined,\n        active: 0,\n        handle: undefined\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Managers, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var session, providers;\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              session = JSON.parse(localStorage.getItem(\"user\"));\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(getApiProviders());\n\n            case 3:\n              providers = _context2.sent;\n              this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n                providers: providers.data\n              }));\n\n              if (!(session == null)) {\n                _context2.next = 8;\n                break;\n              }\n\n              window.location.href = '/login';\n              return _context2.abrupt(\"return\");\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state$managers$,\n          _this2 = this,\n          _this$state$providers;\n\n      var rows = (_this$state$managers$ = this.state.managers.data) != null ? _this$state$managers$ : [];\n      var columns = [{\n        field: 'cpf',\n        headerName: 'CPF',\n        flex: 0.7,\n        valueFormatter: function valueFormatter(params) {\n          return stringCpf(params.value);\n        }\n      }, {\n        field: 'name',\n        headerName: 'Nome',\n        flex: 2\n      }, {\n        field: 'function',\n        headerName: 'Função',\n        flex: 1\n      }, {\n        field: 'active',\n        headerName: 'Situação',\n        flex: 0.5,\n        valueFormatter: function valueFormatter(params) {\n          return params.value === 1 ? \"Ativo\" : \"Inativo\";\n        }\n      }, {\n        field: 'id',\n        headerName: 'Ações',\n        flex: 1,\n        renderCell: function renderCell(params, row) {\n          var view = _this2.state.session.permissions.find(function (x) {\n            return x.module === module_id;\n          });\n\n          return React.createElement(\"div\", null, React.createElement(Link, {\n            to: view.update === 0 ? '#' : \"/responsaveis/\" + params.value,\n            style: {\n              textDecoration: 'none'\n            }\n          }, React.createElement(Button, {\n            disabled: view.update === 0,\n            variant: \"contained\",\n            color: \"primary\",\n            size: \"small\"\n          }, React.createElement(EditIcon, {\n            fontSize: \"small\"\n          }))), React.createElement(Button, {\n            disabled: view.update === 0,\n            variant: \"contained\",\n            color: \"primary\",\n            size: \"small\",\n            onClick: function _callee(e) {\n              var handle;\n              return _regeneratorRuntime.async(function _callee$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      handle = function handle(status) {\n                        params.row.active = status;\n                      };\n\n                      _this2.setState(_objectSpread(_objectSpread({}, _this2.state), {}, {\n                        blockDialog: {\n                          open: true,\n                          id: params.value,\n                          active: params.row.active === 1 ? 0 : 1,\n                          handle: handle\n                        }\n                      }));\n\n                    case 2:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            },\n            style: {\n              marginLeft: 16\n            }\n          }, params.row.active === 1 ? React.createElement(BlockIcon, {\n            fontSize: \"small\"\n          }) : React.createElement(CheckCircleIcon, {\n            fontSize: \"small\"\n          })));\n        }\n      }];\n      var flexBasis = '25%';\n      var filter = [{\n        column: 'cpf',\n        label: 'CPF',\n        type: 'text',\n        mask: InputCpf,\n        flexBasis: flexBasis\n      }, {\n        column: 'name',\n        label: 'Nome',\n        type: 'text',\n        flexBasis: flexBasis\n      }, {\n        column: 'provider_id',\n        label: 'Farmácia/Grupo',\n        type: 'select',\n        json: true,\n        valueLabel: 'fantasy_name',\n        values: (_this$state$providers = this.state.providers) != null ? _this$state$providers : [],\n        value: \"Todos\",\n        flexBasis: flexBasis\n      }, {\n        column: 'active',\n        label: 'Situação',\n        type: 'select',\n        values: [\"Todos\", \"Ativo\", \"Inativo\"],\n        value: \"Todos\",\n        flexBasis: flexBasis\n      }];\n      return React.createElement(Fragment, null, React.createElement(AppBar, {\n        position: \"static\",\n        style: {\n          padding: 10,\n          marginTop: 10,\n          marginBottom: 10\n        }\n      }, React.createElement(Toolbar, null, React.createElement(Typography, {\n        variant: \"h6\",\n        style: {\n          flexGrow: 1\n        }\n      }, React.createElement(HomeIcon, null), \"  \", React.createElement(\"span\", null, \"Cadastro / Respons\\xE1veis\")), this.state.session.permissions.find(function (x) {\n        return x.module === module_id;\n      }).create === 1 ? React.createElement(Link, {\n        to: \"responsaveis/novo\",\n        style: {\n          textDecoration: 'none'\n        }\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        size: \"small\",\n        fullWidth: true,\n        color: \"primary\",\n        style: {\n          background: 'linear-gradient(45deg, #025ea2 30%, #0086e8 90%)'\n        }\n      }, \"Novo \", React.createElement(Add, {\n        style: {\n          color: 'white'\n        },\n        fontSize: \"small\"\n      }))) : '')), window.innerWidth > 720 ? React.createElement(LDataGrid, {\n        rows: rows,\n        columns: columns,\n        filterInputs: filter,\n        sortModel: [{\n          field: 'name',\n          sort: 'asc'\n        }],\n        pageRequest: function pageRequest(params) {\n          if (params.active !== undefined) {\n            params.active = params.active == \"Ativo\" ? 1 : 0;\n          }\n\n          _this2.setState(_objectSpread(_objectSpread({}, _this2.state), {}, {\n            pageRequest: params\n          }));\n\n          return getApiManagers(params);\n        }\n      }) : React.createElement(LCardGrid, {\n        rows: rows,\n        columns: columns,\n        filterInputs: filter,\n        pageRequest: function pageRequest(params) {\n          if (params.active !== undefined) {\n            params.active = params.active == \"Ativo\" ? 1 : 0;\n          }\n\n          _this2.setState(_objectSpread(_objectSpread({}, _this2.state), {}, {\n            pageRequest: params\n          }));\n\n          return getApiManagers(params);\n        }\n      }), React.createElement(BlockDialog, {\n        open: this.state.blockDialog.open,\n        id: this.state.blockDialog.id,\n        handle: this.state.blockDialog.handle,\n        active: this.state.blockDialog.active,\n        handleClose: function handleClose() {\n          _this2.setState(_objectSpread(_objectSpread({}, _this2.state), {}, {\n            blockDialog: {\n              open: false,\n              id: undefined\n            }\n          }));\n        }\n      }));\n    }\n  }]);\n\n  return Managers;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    session: store.authReducer.data\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setSnackbar: setSnackbar\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Managers);","map":{"version":3,"sources":["C:/Users/Maou/Documents/Projetos/CLIENTES/RNF/Completo/client/src/pages/Managers/index.js"],"names":["React","Component","Fragment","connect","bindActionCreators","AppBar","Button","HomeIcon","BlockIcon","EditIcon","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Typography","LDataGrid","LCardGrid","setSnackbar","getApiManagers","getApiProviders","putApiManagers","InputCpf","stringCpf","CircularProgress","IconButton","Toolbar","Add","Link","DataGrid","RowsProp","ColDef","CheckCircleIcon","module_id","BlockDialog","props","useState","open","setOpen","loading","setLoading","justfy","setjustfy","handleClose","send","id","active","undefined","justification","handle","e","target","value","display","Managers","state","session","JSON","parse","localStorage","getItem","managers","providers","pageRequest","blockDialog","setState","data","window","location","href","rows","columns","field","headerName","flex","valueFormatter","params","renderCell","row","view","permissions","find","x","module","update","textDecoration","status","marginLeft","flexBasis","filter","column","label","type","mask","json","valueLabel","values","padding","marginTop","marginBottom","flexGrow","create","background","color","innerWidth","sort","mapStateToProps","store","authReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\n//\r\nimport AppBar from '@material-ui/core/AppBar';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n//\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n//\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LDataGrid from '../../components/List/datagrid';\r\nimport LCardGrid from '../../components/List/cardgrid';\r\n//\r\nimport { setSnackbar } from '../../actions/appActions'\r\nimport { getApiManagers,getApiProviders, putApiManagers } from '../../providers/api'\r\n\r\nimport {InputCpf, stringCpf} from '../../providers/masks'\r\nimport { CircularProgress, IconButton, Toolbar } from '@material-ui/core';\r\nimport { Add } from '@material-ui/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport { DataGrid, RowsProp, ColDef, CheckCircleIcon } from '@material-ui/data-grid';\r\n\r\n// MODULE ID\r\nconst module_id = 2\r\nfunction BlockDialog(props) {\r\n    const [open, setOpen] = React.useState(props.open);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [justfy, setjustfy] = React.useState('');\r\n    \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n      setLoading(false);\r\n    };\r\n    \r\n    const send = async () => {\r\n        setLoading(true);\r\n        await putApiManagers( props.id, {active: props.active ?? undefined, justification: justfy});\r\n        props.handle(props.active);\r\n        props.handleClose();\r\n        setjustfy('');\r\n        setLoading(false);\r\n    }\r\n    return (\r\n      <div>\r\n        <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n          <DialogTitle id=\"form-dialog-title\">{ props.active == 0 ? \"B\" : \"Desb\" }loqueio de responsável</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n            \r\n                Confirma o { props.active == 0 ? \"\" : \"Des\" }bloqueio do registro selecionado?\r\n            </DialogContentText>\r\n            { props.active == 0 &&<TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"justification\"\r\n              label=\"Justificativa\"\r\n              type=\"text\"\r\n              fullWidth\r\n              value={justfy}\r\n              onChange={(e) => {\r\n                setjustfy(e.target.value)\r\n              }}\r\n            /> }\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={props.handleClose} color=\"primary\">\r\n              NÃO\r\n            </Button>\r\n            { !loading ? (\r\n            <Button onClick={send} color=\"primary\">\r\n              SIM\r\n            </Button>):(\r\n                <Button color=\"primary\">\r\n                     <CircularProgress style={{display: 'flex'}} />\r\n                </Button>\r\n               \r\n            )}\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n\r\nclass Managers extends Component {\r\n    state = {\r\n        session: JSON.parse(localStorage.getItem(\"user\")),\r\n        managers: [],\r\n        providers:[],\r\n        pageRequest: {},\r\n        blockDialog: {open: false, id: undefined,active: 0, handle: undefined},\r\n       \r\n    }\r\n    \r\n    async componentDidMount() {\r\n        const session = JSON.parse(localStorage.getItem(\"user\"));\r\n        const providers = await getApiProviders();\r\n        this.setState({...this.state, providers: providers.data})\r\n        if(session == null){\r\n            window.location.href = '/login';\r\n            return;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const rows : RowsProp = this.state.managers.data ?? [];\r\n        const columns: ColDef[] = [\r\n            { field: 'cpf', headerName: 'CPF', flex: 0.7,\r\n                valueFormatter: (params: ValueFormatterParams) => {\r\n                    return stringCpf(params.value);\r\n                }\r\n            },\r\n            { field: 'name', headerName: 'Nome',flex: 2 },\r\n            { field: 'function', headerName: 'Função', flex: 1 },\r\n            {\r\n                field: 'active',\r\n                headerName: 'Situação',\r\n                flex: 0.5,\r\n                valueFormatter: (params: ValueFormatterParams) => {\r\n                    return params.value === 1 ? \"Ativo\" : \"Inativo\"\r\n                }\r\n            },{\r\n                field: 'id',\r\n                headerName: 'Ações',\r\n                flex: 1,\r\n                renderCell: (params: ValueFormatterParams, row: RowIdGetter) => {\r\n                    let view = this.state.session.permissions.find(x => x.module === module_id)\r\n                    return (\r\n                    <div>\r\n                    <Link to={ view.update === 0 ? '#' :  `/responsaveis/${params.value}`} style={{textDecoration: 'none'}} >\r\n                        <Button\r\n                        disabled={view.update === 0}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                        >\r\n                            <EditIcon fontSize=\"small\" />\r\n                        </Button>\r\n                    </Link>\r\n                      <Button\r\n                      disabled={view.update === 0}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        onClick={async (e)=> {\r\n                            const handle = (status) => {\r\n                                params.row.active = status;\r\n                            }\r\n                            this.setState({...this.state, blockDialog: {open: true, id: params.value, active: params.row.active === 1 ? 0 : 1,handle }})\r\n                        }}\r\n                        style={{ marginLeft: 16 }}\r\n                      >\r\n                        {params.row.active === 1 ? <BlockIcon fontSize=\"small\"/> : <CheckCircleIcon fontSize=\"small\" /> }\r\n                      </Button>\r\n                    </div>\r\n                  )},\r\n            },\r\n        ];\r\n        const flexBasis = '25%';\r\n        const filter = [\r\n            { column: 'cpf', label: 'CPF', type: 'text', \r\n            mask: InputCpf, \r\n            flexBasis },\r\n            { column: 'name', label: 'Nome', type: 'text', flexBasis },\r\n            {\r\n                column: 'provider_id', label: 'Farmácia/Grupo', type: 'select',\r\n                json: true,\r\n                valueLabel: 'fantasy_name',\r\n                values: this.state.providers ?? [],\r\n                value: \"Todos\",\r\n                flexBasis\r\n            },\r\n            { column: 'active', label: 'Situação', type: 'select', values: [\"Todos\", \"Ativo\", \"Inativo\"], value: \"Todos\", flexBasis },\r\n            //{ column: 'created_at', label: 'Data', type: 'date' },\r\n        ]\r\n\r\n        return (\r\n            <Fragment>\r\n                <AppBar position=\"static\" style={{ padding: 10, marginTop: 10, marginBottom: 10}}>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" style={{flexGrow: 1}}>\r\n                            <HomeIcon />  <span>Cadastro / Responsáveis</span>\r\n                        </Typography>\r\n                        {\r\n                            this.state.session.permissions.find(x => x.module === module_id).create === 1 ?(\r\n                                <Link to=\"responsaveis/novo\" style={{textDecoration: 'none'}} >\r\n                        <Button variant=\"contained\" size=\"small\" fullWidth color=\"primary\"\r\n                            style={{\r\n                            background: 'linear-gradient(45deg, #025ea2 30%, #0086e8 90%)',\r\n                            }}>\r\n                                Novo <Add style={{color: 'white'}} fontSize=\"small\"/>\r\n                            </Button>\r\n                        </Link>) : ('')\r\n                        }\r\n                        \r\n                    </Toolbar>\r\n                    \r\n                </AppBar>\r\n                {window.innerWidth > 720 ? (\r\n                    <LDataGrid rows={rows} columns={columns} filterInputs={filter} \r\n                    sortModel={[\r\n                        {\r\n                          field: 'name',\r\n                          sort: 'asc',\r\n                        },\r\n                    ]}\r\n                    pageRequest={\r\n                        (params) => {\r\n                            if(params.active !== undefined){\r\n                                params.active = params.active == \"Ativo\" ? 1: 0;\r\n                            }\r\n                            this.setState({...this.state, pageRequest: params})\r\n                            return getApiManagers(params)\r\n                    }} />) : (\r\n                        <LCardGrid rows={rows} columns={columns} filterInputs={filter}\r\n                        pageRequest={\r\n                            (params) => {\r\n                                if(params.active !== undefined){\r\n                                    params.active = params.active == \"Ativo\" ? 1: 0;\r\n                                }\r\n                                this.setState({...this.state, pageRequest: params})\r\n                                return getApiManagers(params)\r\n                        }}  />\r\n                    )}\r\n                        <BlockDialog \r\n                            open={this.state.blockDialog.open} \r\n                            id={this.state.blockDialog.id}\r\n                            handle={this.state.blockDialog.handle}\r\n                            active={this.state.blockDialog.active}\r\n                            handleClose={() => {\r\n                                this.setState({...this.state, blockDialog: { open : false, id: undefined }})\r\n                            }}\r\n                            />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = store => ({\r\n    session: store.authReducer.data,\r\n});\r\nconst mapDispatchToProps = dispatch =>\r\n    bindActionCreators({ setSnackbar}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Managers)\r\n"]},"metadata":{},"sourceType":"module"}