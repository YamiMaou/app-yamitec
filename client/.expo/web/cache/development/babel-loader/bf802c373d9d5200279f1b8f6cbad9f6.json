{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, Fragment, useState, useRef, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Paper from '@material-ui/core/Paper';\nimport HomeIcon from '@material-ui/icons/Home';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport LForms from \"../../../components/Forms\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport BlockIcon from '@material-ui/icons/Block';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport AddIcon from '@material-ui/icons/Add';\nimport { setSnackbar } from \"../../../actions/appActions\";\nimport { putApiProviders, getApiManagers, deleteApiManagersProviders, getAddressByCepla, getApiProviders, getApiProviderTypes, getApiContributors } from \"../../../providers/api\";\nimport { validaEmail, validaCnpj, stringToaddDate } from \"../../../providers/commonMethods\";\nimport { InputCep, InputCnpj, InputPhone, stringCpf, stringCnpj } from \"../../../providers/masks\";\nimport { Redirect } from 'react-router-dom';\nimport { withSnackbar } from 'notistack';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { DEFAULT_LOCALE_TEXT } from \"../../../providers/langs/datagrid\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { CardActions, List, ListItem, ListItemText } from '@material-ui/core';\nvar module_id = 4;\n\nvar AutocompleteMatriz = function AutocompleteMatriz(props) {\n  var _props$disabled;\n\n  var _React$useState = React.useState(props.value ? props.values.find(function (item) {\n    return item.id == props.value;\n  }) : undefined),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      inputValue = _React$useState4[0],\n      setInputValue = _React$useState4[1];\n\n  var _useState = useState(props.value ? props.values.find(function (item) {\n    return item.id == props.value;\n  }) : undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      defaultVal = _useState2[0],\n      setDefault = _useState2[1];\n\n  useEffect(function () {\n    if (props.value !== defaultVal) {\n      var vl = props.value ? props.values.find(function (item) {\n        return item.id == props.value;\n      }) : undefined;\n\n      if (vl !== undefined) {\n        console.log(vl);\n        setValue(vl);\n        setInputValue(vl !== undefined ? vl[props.valueLabel] : \"\");\n      }\n    }\n  });\n\n  function handleChange(e, newValue) {\n    var _e$target = e.target,\n        val = _e$target.val,\n        id = _e$target.id;\n    var vl = {\n      target: {\n        id: props.id,\n        value: newValue.id\n      }\n    };\n\n    if (props.validate !== undefined) {\n      if (props.validate(val)) {\n        setError(false);\n      } else {\n        setError(true);\n      }\n    }\n\n    props.onChange(vl);\n    setValue(newValue);\n  }\n\n  return React.createElement(Autocomplete, {\n    key: \"autocomplete-\" + props.id,\n    id: props.id,\n    disabled: (_props$disabled = props.disabled) != null ? _props$disabled : false,\n    name: props.name,\n    value: value,\n    inputValue: inputValue,\n    onChange: handleChange,\n    getOptionSelected: function getOptionSelected(option, value) {\n      if (option.id == value.id) {\n        setInputValue(value[props.valueLabel]);\n      }\n\n      return option.id == value.id;\n    },\n    getOptionLabel: function getOptionLabel(option) {\n      return option[props.valueLabel];\n    },\n    onInputChange: function onInputChange(event, newInputValue) {\n      setInputValue(newInputValue);\n    },\n    options: props.values,\n    style: props.style,\n    renderInput: function renderInput(params) {\n      return React.createElement(TextField, _extends({}, params, {\n        label: props.label\n      }));\n    }\n  });\n};\n\nvar SelectMatriz = function SelectMatriz(props) {\n  var _props$value, _props$value2, _props$disabled2;\n\n  var _useState3 = useState((_props$value = props.value) != null ? _props$value : \"Selecione\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      value = _useState4[0],\n      setValue = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var _useState7 = useState((_props$value2 = props.value) != null ? _props$value2 : \"Selecione\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      defaultVal = _useState8[0],\n      setDefault = _useState8[1];\n\n  useEffect(function () {\n    if (props.value !== defaultVal) {\n      var _props$value3;\n\n      setValue((_props$value3 = props.value) != null ? _props$value3 : \"Selecione\");\n    }\n  });\n\n  function handleChange(e) {\n    var _e$target2 = e.target,\n        val = _e$target2.val,\n        id = _e$target2.id;\n\n    if (props.validate !== undefined) {\n      if (props.validate(val)) {\n        setError(false);\n      } else {\n        setError(true);\n      }\n    }\n\n    props.onChange(e);\n    console.log(e.target.value);\n    setValue(e.target.value);\n  }\n\n  return React.createElement(FormControl, {\n    id: props.column,\n    style: _objectSpread(_objectSpread({}, props.style), {}, {\n      marginTop: '25px'\n    })\n  }, React.createElement(InputLabel, {\n    id: props.column\n  }, props.label), React.createElement(Select, {\n    size: \"small\",\n    labelId: props.id,\n    id: props.id,\n    disabled: (_props$disabled2 = props.disabled) != null ? _props$disabled2 : false,\n    name: props.name,\n    value: value,\n    error: error,\n    placeholder: \"Selecione\",\n    onChange: handleChange,\n    onBlur: handleChange\n  }, React.createElement(MenuItem, {\n    key: \"input-00\",\n    value: \"Selecione\"\n  }, \"Selecione\"), props.json ? props.values.map(function (val, ind) {\n    return React.createElement(MenuItem, {\n      key: \"input-\" + ind,\n      value: val.id\n    }, val[props.valueLabel]);\n  }) : props.values.map(function (val, ind) {\n    return React.createElement(MenuItem, {\n      key: \"input-\" + ind,\n      value: val\n    }, val);\n  })));\n};\n\nvar SelectInput = function SelectInput(props) {\n  var _props$value4;\n\n  var _useState9 = useState((_props$value4 = props.value) != null ? _props$value4 : \"Selecione\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      value = _useState10[0],\n      setValue = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      error = _useState12[0],\n      setError = _useState12[1];\n\n  function handleChange(e) {\n    var _e$target3 = e.target,\n        value = _e$target3.value,\n        id = _e$target3.id;\n\n    if (props.validate !== undefined) {\n      if (props.validate(value)) {\n        setError(false);\n      } else {\n        setError(true);\n      }\n    }\n\n    e.target.id = e.target.name;\n    props.onChange(e);\n    setValue(e.target.value);\n  }\n\n  return React.createElement(FormControl, {\n    id: props.column,\n    style: _objectSpread(_objectSpread({}, props.style), {}, {\n      marginTop: '25px'\n    })\n  }, React.createElement(InputLabel, {\n    id: props.column\n  }, props.label), React.createElement(Select, {\n    size: \"small\",\n    labelId: props.id,\n    id: props.id,\n    name: props.name,\n    value: value,\n    error: error,\n    placeholder: \"Selecione\",\n    onChange: handleChange,\n    onBlur: handleChange\n  }, React.createElement(MenuItem, {\n    key: \"input-00\",\n    value: \"Selecione\"\n  }, \"Selecione\"), props.json ? props.values.map(function (val, ind) {\n    return React.createElement(MenuItem, {\n      key: \"input-\" + ind,\n      value: val.id\n    }, val[props.valueLabel]);\n  }) : props.values.map(function (val, ind) {\n    return React.createElement(MenuItem, {\n      key: \"input-\" + ind,\n      value: val\n    }, val);\n  })));\n};\n\nvar TypeEmpresaInput = function TypeEmpresaInput(props) {\n  var _props$helperText, _props$helperText2;\n\n  var _useState13 = useState(props.value),\n      _useState14 = _slicedToArray(_useState13, 2),\n      value = _useState14[0],\n      setValue = _useState14[1];\n\n  var _useState15 = useState(props.value1),\n      _useState16 = _slicedToArray(_useState15, 2),\n      value1 = _useState16[0],\n      setValue1 = _useState16[1];\n\n  function handleChange(e) {\n    var _props$onChange;\n\n    var _e$target4 = e.target,\n        value = _e$target4.value,\n        id = _e$target4.id;\n    (_props$onChange = props.onChange(e)) != null ? _props$onChange : undefined;\n    setValue(e.target.value);\n  }\n\n  function handleChange1(e) {\n    var _props$onChange2;\n\n    var _e$target5, value, id;\n\n    return _regeneratorRuntime.async(function handleChange1$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _e$target5 = e.target, value = _e$target5.value, id = _e$target5.id;\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(props.handler(value));\n\n          case 4:\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](1);\n            console.error(_context.t0);\n\n          case 9:\n            (_props$onChange2 = props.onChange(e)) != null ? _props$onChange2 : undefined;\n            setValue1(e.target.value);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 6]], Promise);\n  }\n\n  return React.createElement(\"div\", {\n    style: {\n      flexBasis: props.style.flexBasis,\n      display: 'flex'\n    }\n  }, React.createElement(SelectInput, {\n    valueLabel: \"value\",\n    json: true,\n    value: value,\n    helperText: (_props$helperText = props.helperText) != null ? _props$helperText : \"\",\n    key: \"input-\" + 15000,\n    id: \"type\",\n    label: \"Empresa\",\n    name: \"type\",\n    values: [{\n      id: 1,\n      value: 'Matriz'\n    }, {\n      id: 2,\n      value: 'Filial'\n    }],\n    style: {\n      margin: 5,\n      marginTop: 25,\n      flexBasis: window.innerWidth < 768 ? '100%' : '50%'\n    },\n    onChange: function onChange(e) {\n      return handleChange(e);\n    }\n  }), value == 2 && React.createElement(SelectInput, {\n    valueLabel: props.valueLabel,\n    json: props.json,\n    value: value1,\n    helperText: (_props$helperText2 = props.helperText) != null ? _props$helperText2 : \"\",\n    key: \"input-\" + 15001,\n    id: \"matriz_id\",\n    label: props.label,\n    name: \"matriz_id\",\n    values: props.values,\n    style: {\n      margin: 5,\n      marginTop: 25,\n      flexBasis: window.innerWidth < 768 ? '100%' : '50%'\n    },\n    onChange: function onChange(e) {\n      var _handleChange;\n\n      return (_handleChange = handleChange1(e)) != null ? _handleChange : undefined;\n    }\n  }));\n};\n\nfunction BlockDialog(props) {\n  var _React$useState5 = React.useState(props.open),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      open = _React$useState6[0],\n      setOpen = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      loading = _React$useState8[0],\n      setLoading = _React$useState8[1];\n\n  var _React$useState9 = React.useState(''),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      justfy = _React$useState10[0],\n      setjustfy = _React$useState10[1];\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n    setLoading(false);\n  };\n\n  var send = function send() {\n    var _props$active;\n\n    return _regeneratorRuntime.async(function send$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setLoading(true);\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(putApiProviders(props.id, {\n              active: (_props$active = props.active) != null ? _props$active : undefined,\n              justification: justfy\n            }));\n\n          case 3:\n            props.handle(props.active);\n            props.handleClose();\n            setjustfy('');\n            setLoading(false);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(\"div\", null, React.createElement(Dialog, {\n    open: props.open,\n    onClose: props.handleClose,\n    \"aria-labelledby\": \"form-dialog-title\"\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\"\n  }, \"Desvincular Respons\\xE1vel ?\"), React.createElement(DialogContent, null, React.createElement(DialogContentText, null, \"Confirma o desvinculo do registro selecionado?\"), props.active == 0 && React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"justification\",\n    label: \"Justificativa\",\n    type: \"text\",\n    fullWidth: true,\n    value: justfy,\n    onChange: function onChange(e) {\n      setjustfy(e.target.value);\n    }\n  })), React.createElement(DialogActions, null, React.createElement(Button, {\n    onClick: props.handleClose,\n    color: \"primary\"\n  }, \"N\\xC3O\"), !loading ? React.createElement(Button, {\n    onClick: send,\n    color: \"primary\"\n  }, \"SIM\") : React.createElement(Button, {\n    color: \"primary\"\n  }, React.createElement(CircularProgress, {\n    style: {\n      display: 'flex'\n    }\n  })))));\n}\n\nfunction getMoney(str) {\n  return parseInt(str.replace(/[\\D]+/g, ''));\n}\n\nfunction formatReal(int) {\n  var tmp = int + '';\n  tmp = tmp.replace(/([0-9]{2})$/g, \",$1\");\n  if (tmp.length > 6) tmp = tmp.replace(/([0-9]{3}),([0-9]{2}$)/g, \".$1,$2\");\n  if (tmp.length >= 10) tmp = tmp.replace(/([0-9]{3})\\.([0-9]{3}),([0-9]{2}$)/g, \"$1.$2,$3\");\n  return tmp;\n}\n\nvar EditProviders = function (_Component) {\n  _inherits(EditProviders, _Component);\n\n  var _super = _createSuper(EditProviders);\n\n  function EditProviders() {\n    var _this;\n\n    _classCallCheck(this, EditProviders);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      filter: ['flex'],\n      fields: {},\n      data: {},\n      managers: [],\n      contributors: [],\n      manager: 0,\n      providers: [],\n      filials: [],\n      provider: 0,\n      provProviders: [],\n      provManagers: [],\n      provManagersDeleted: [],\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(EditProviders, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var contributors, data, providers, filials, managers, providertypes, fields;\n      return _regeneratorRuntime.async(function componentDidMount$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(JSON.parse(localStorage.getItem(\"user\")) == null)) {\n                _context3.next = 3;\n                break;\n              }\n\n              window.location.href = '/login';\n              return _context3.abrupt(\"return\");\n\n            case 3:\n              localStorage.setItem(\"sessionTime\", 9000);\n              _context3.next = 6;\n              return _regeneratorRuntime.awrap(getApiContributors({\n                active: 1\n              }));\n\n            case 6:\n              contributors = _context3.sent;\n              _context3.next = 9;\n              return _regeneratorRuntime.awrap(getApiProviders({}, this.props.match.params.id));\n\n            case 9:\n              data = _context3.sent;\n              _context3.next = 12;\n              return _regeneratorRuntime.awrap(getApiProviders({\n                type: 1,\n                active: 1\n              }));\n\n            case 12:\n              providers = _context3.sent;\n              _context3.next = 15;\n              return _regeneratorRuntime.awrap(getApiProviders({\n                type: 2,\n                active: 1\n              }));\n\n            case 15:\n              filials = _context3.sent;\n              _context3.next = 18;\n              return _regeneratorRuntime.awrap(getApiManagers({\n                active: 1\n              }));\n\n            case 18:\n              managers = _context3.sent;\n              _context3.next = 21;\n              return _regeneratorRuntime.awrap(getApiProviderTypes());\n\n            case 21:\n              providertypes = _context3.sent;\n              this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n                data: data,\n                fields: data,\n                providers: providers.data.filter(function (x) {\n                  return x.id != _this2.props.match.params.id;\n                }),\n                filials: filials.data.filter(function (x) {\n                  return x.id != _this2.props.match.params.id;\n                }),\n                provManagers: data.managers,\n                provProviders: data.filials,\n                managers: managers.data,\n                contributors: contributors.data,\n                providertypes: providertypes.data\n              }));\n\n              if (data.matriz_id != (null || undefined)) {\n                fields = this.state.fields;\n                Object.entries(data.addresses).map(function (_ref) {\n                  var _ref2 = _slicedToArray(_ref, 2),\n                      key = _ref2[0],\n                      val = _ref2[1];\n\n                  fields[key] = val;\n                });\n                Object.entries(data.contacts).map(function (_ref3) {\n                  var _ref4 = _slicedToArray(_ref3, 2),\n                      key = _ref4[0],\n                      val = _ref4[1];\n\n                  fields[key] = val;\n                });\n                Object.entries(data.contracts).map(function (_ref5) {\n                  var _ref6 = _slicedToArray(_ref5, 2),\n                      key = _ref6[0],\n                      val = _ref6[1];\n\n                  if (key == 'rate') {\n                    fields[key] = formatReal(getMoney(val));\n                  } else {\n                    fields[key] = val;\n                  }\n                });\n                this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n                  fields: _objectSpread({}, this.state.fields)\n                }));\n              }\n\n            case 24:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        fields: e\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this,\n          _this$state$filter$re,\n          _this$state$filter$fo;\n\n      var closeSnack = function closeSnack(event, reason) {\n        if (reason === 'clickaway') {\n          return;\n        }\n\n        _this3.props.setSnackbar({\n          open: false,\n          message: \"\"\n        });\n      };\n\n      var _request = function request(state, data) {\n        var response, _response$data, errors, messages;\n\n        return _regeneratorRuntime.async(function request$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (!(_this3.state.provManagers.length == 0)) {\n                  _context6.next = 3;\n                  break;\n                }\n\n                _this3.props.setSnackbar({\n                  open: true,\n                  message: \"Você deve manter pelo menos 1 Responsável vinculado\"\n                });\n\n                return _context6.abrupt(\"return\", false);\n\n              case 3:\n                _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                  loading: true\n                }));\n\n                _this3.props.setSnackbar({\n                  open: true,\n                  message: \"Validando Dados, Aguarde ...\"\n                });\n\n                data = _extends({}, state.addresses, data);\n                data = _extends({}, state.contacts, data);\n                data = _extends({}, state.contracts, data);\n                data = _extends({}, state, data);\n                delete data.addresses;\n                delete data.contacts;\n                delete data.contracts;\n                data.rate = formatReal(getMoney(data.rate));\n                console.log(data.rate);\n\n                _this3.state.provManagersDeleted.map(function _callee(v, k) {\n                  var del;\n                  return _regeneratorRuntime.async(function _callee$(_context4) {\n                    while (1) {\n                      switch (_context4.prev = _context4.next) {\n                        case 0:\n                          _context4.next = 2;\n                          return _regeneratorRuntime.awrap(deleteApiManagersProviders({\n                            provider_id: _this3.props.match.params.id,\n                            manager_id: v.id\n                          }));\n\n                        case 2:\n                          del = _context4.sent;\n\n                          if (del.success == false) {\n                            _this3.props.setSnackbar({\n                              open: true,\n                              message: del.message\n                            });\n                          }\n\n                        case 4:\n                        case \"end\":\n                          return _context4.stop();\n                      }\n                    }\n                  }, null, null, null, Promise);\n                });\n\n                _this3.state.provManagers.map(function _callee2(v, k) {\n                  var add;\n                  return _regeneratorRuntime.async(function _callee2$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          _context5.next = 2;\n                          return _regeneratorRuntime.awrap(putApiProviders(\"manager/\" + _this3.props.match.params.id + \"/\" + v.id));\n\n                        case 2:\n                          add = _context5.sent;\n\n                          if (add.success == false) {\n                            _this3.props.setSnackbar({\n                              open: true,\n                              message: del.message\n                            });\n                          }\n\n                        case 4:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, null, null, null, Promise);\n                });\n\n                _context6.next = 18;\n                return _regeneratorRuntime.awrap(putApiProviders(_this3.props.match.params.id, data));\n\n              case 18:\n                response = _context6.sent;\n\n                if (response.data.success) {\n                  _this3.props.setSnackbar({\n                    open: true,\n                    message: response.data.message\n                  });\n\n                  _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                    loading: false\n                  }));\n\n                  _this3.props.history.goBack();\n                } else {\n                  errors = (_response$data = response.data) != null ? _response$data : undefined;\n                  messages = '';\n\n                  if (errors !== undefined && errors.error !== undefined && errors.error.response && errors.error.response.data !== undefined && errors.error.response.data.errors !== undefined) {\n                    Object.keys(errors.error.response.data.errors).map(function (err) {\n                      var field = err == \"file\" ? \"Anexo\" : err;\n                      messages += \"O \" + field.toUpperCase() + \" \" + errors.error.response.data.errors[err][0] + \" \\n\";\n                    });\n                  } else {\n                    messages = 'Houve um problema em sua requisição!';\n                  }\n\n                  _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                    loading: false\n                  }));\n\n                  _this3.props.setSnackbar({\n                    open: true,\n                    messages: messages\n                  });\n                }\n\n              case 20:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      };\n\n      var validateFields = function validateFields(fields, values) {\n        var campo = undefined;\n        fields.reverse().map(function (v, k) {\n          v.fields.reverse().map(function (v1, k1) {\n            if (values[v1.column] !== undefined) {\n              var value = values[v1.column];\n\n              if (v1.validate !== undefined) {\n                if (v1.validate.number !== undefined) {\n                  if (/^[-]?\\d+$/.test(value) == false) campo = {\n                    id: v1.column,\n                    message: \"O Campo \" + v1.label + \" \\xE9 somente n\\xFAmeros \"\n                  };\n                }\n\n                if (v1.validate.depends !== undefined) {\n                  var val = values[v1.validate.depends.column];\n\n                  if (val == \"Selecione\") {\n                    campo = {\n                      id: v1.column,\n                      message: \"O Campo \" + val.label + \" \\xE9 inv\\xE1lido \"\n                    };\n                  }\n\n                  if (v1.validate.depends.value !== val) campo = {\n                    id: v1.column,\n                    message: \"O Campo \" + v1.label + \" depende do valor \" + v1.validate.depends.text + \" em \" + v1.validate.depends.label\n                  };\n                }\n\n                if (v1.validate.decimal !== undefined) {}\n\n                if (v1.validate.max !== undefined) {\n                  if (value.length > v1.validate.max) campo = {\n                    id: v1.column,\n                    message: \"O Campo \" + v1.label + \", tamanho m\\xE1ximo de \" + v1.validate.max + \" caracteres ex\\xEAdido\"\n                  };\n                }\n\n                if (v1.validate.min !== undefined) {\n                  if (value.length < v1.validate.min) campo = {\n                    id: v1.column,\n                    message: \"O Campo \" + v1.label + \", tamanho minimo de \" + v1.validate.min + \" caracteres.\"\n                  };\n                }\n\n                if (v1.validate.required !== undefined) {\n                  if (value == \"Selecione\") {\n                    campo = {\n                      id: v1.column,\n                      message: \"O Campo \" + v1.label + \" \\xE9 inv\\xE1lido \"\n                    };\n                  }\n\n                  if (value.length == 0) campo = {\n                    id: v1.column,\n                    message: \"O Campo \" + v1.label + \" \\xE9 obrigat\\xF3rio\"\n                  };\n                }\n              }\n\n              if (v1.validateHandler !== undefined) {\n                if (v1.validateHandler(value) == false) campo = {\n                  id: v1.column,\n                  message: \"O Campo \" + v1.label + \" n\\xE3o possui \\xE9 inv\\xE1lido \"\n                };\n              }\n            }\n          });\n        });\n        campo !== undefined ? _this3.props.setSnackbar({\n          open: true,\n          message: campo.message\n        }) : '';\n        return campo === undefined ? true : false;\n      };\n\n      var flexBasis = '22%';\n      var forms = this.state.data === undefined || this.state.data.id === undefined ? [] : [{\n        title: 'Dados Básicos',\n        fields: [{\n          column: 'active',\n          label: 'Ativo',\n          type: 'checkbox',\n          value: this.state.data['active'] == 1 ? true : false,\n          disabled: false,\n          justification: this.state.data['audits'] ? this.state.data['audits'].justification == null ? \" \" : this.state.data['audits'].justification : '',\n          flexBasis: \"100%\"\n        }, {\n          column: 'providertype_id',\n          label: 'Tipo Fornecedor',\n          type: 'select',\n          json: true,\n          valueLabel: \"name\",\n          values: this.state.providertypes,\n          validate: {\n            required: true\n          },\n          value: this.state.data['providertype_id'],\n          flexBasis: flexBasis\n        }, {\n          column: 'matriz_id',\n          label: 'Matriz',\n          type: 'custom',\n          json: true,\n          valueLabel: \"fantasy_name\",\n          value: this.state.data['type'],\n          value1: this.state.data['matriz_id'],\n          values: this.state.providers,\n          flexBasis: '66%',\n          component: TypeEmpresaInput,\n          handler: function handler(id) {\n            var matrizData, fields;\n            return _regeneratorRuntime.async(function handler$(_context7) {\n              while (1) {\n                switch (_context7.prev = _context7.next) {\n                  case 0:\n                    _context7.next = 2;\n                    return _regeneratorRuntime.awrap(getApiProviders({}, id));\n\n                  case 2:\n                    matrizData = _context7.sent;\n                    fields = _this3.state.fields;\n                    Object.entries(matrizData.addresses).map(function (_ref7) {\n                      var _ref8 = _slicedToArray(_ref7, 2),\n                          key = _ref8[0],\n                          val = _ref8[1];\n\n                      fields[key] = val;\n                    });\n                    Object.entries(matrizData.contacts).map(function (_ref9) {\n                      var _ref10 = _slicedToArray(_ref9, 2),\n                          key = _ref10[0],\n                          val = _ref10[1];\n\n                      fields[key] = val;\n                    });\n                    Object.entries(matrizData.contracts).map(function (_ref11) {\n                      var _ref12 = _slicedToArray(_ref11, 2),\n                          key = _ref12[0],\n                          val = _ref12[1];\n\n                      fields[key] = val;\n                    });\n\n                    _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                      fields: fields\n                    }));\n\n                    console.log(_this3.state.fields);\n\n                  case 9:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }\n        }, {\n          column: 'cnpj',\n          label: 'CNPJ',\n          type: 'text',\n          value: this.state.data['cnpj'],\n          mask: InputCnpj,\n          validate: {\n            min: 11,\n            number: true,\n            required: true\n          },\n          validateHandler: validaCnpj,\n          flexBasis: '22%',\n          helperText: \"o valor digitado é inválido\"\n        }, {\n          column: 'company_name',\n          label: 'Razão Social',\n          type: 'text',\n          value: this.state.data['company_name'],\n          validate: {\n            max: 50,\n            required: true\n          },\n          flexBasis: '25%'\n        }, {\n          column: 'fantasy_name',\n          label: 'Nome Fantasia',\n          type: 'text',\n          value: this.state.data['fantasy_name'],\n          validate: {\n            max: 50,\n            required: true\n          },\n          flexBasis: '25%'\n        }, {\n          column: 'file_anexo',\n          label: 'Documento',\n          type: 'file',\n          file: this.state.data['file_anexo'] ? this.state.data['file_anexo'].name : '',\n          flexBasis: flexBasis\n        }, {\n          column: 'file_logo',\n          label: 'Logo marca',\n          type: 'file',\n          file: this.state.data['file_logo'] ? this.state.data['file_logo'].name : '',\n          validate: {\n            required: true\n          },\n          flexBasis: flexBasis\n        }]\n      }, {\n        id: 'addr',\n        title: 'Endereço',\n        fields: [{\n          column: 'addr_clone',\n          label: 'Clonar Matriz',\n          disabled: this.state.fields['type'] == 1,\n          type: 'checkbox',\n          validate: {\n            depends: {\n              label: 'Tipo',\n              value: 2,\n              column: 'type',\n              text: 'Filial'\n            }\n          },\n          flexBasis: \"100%\",\n          value: this.state.data.addr_clone\n        }, {\n          column: 'zipcode',\n          label: 'CEP',\n          type: 'text',\n          disabled: this.state.fields['addr_clone'] == 1,\n          mask: InputCep,\n          validate: {\n            max: 9,\n            required: true\n          },\n          flexBasis: '9%',\n          value: this.state.fields['type'] == 2 && this.state.fields['addr_clone'] == 1 && this.state.fields['zipcode'] != (\"\" || null || undefined) ? this.state.fields['zipcode'] : this.state.data['addresses'].zipcode\n        }, {\n          column: 'street',\n          label: 'Endereço',\n          disabled: this.state.fields['addr_clone'] == 1,\n          validate: {\n            max: 100,\n            required: true\n          },\n          type: 'text',\n          flexBasis: flexBasis,\n          value: this.state.fields['type'] == 2 && this.state.fields['addr_clone'] == 1 && this.state.fields['street'] != (\"\" || null || undefined) ? this.state.fields['street'] : this.state.data['addresses'].street\n        }, {\n          column: 'additional',\n          label: 'Complemento',\n          disabled: this.state.fields['addr_clone'] == 1,\n          validate: {\n            max: 20\n          },\n          type: 'text',\n          flexBasis: flexBasis,\n          value: this.state.fields['type'] == 2 && this.state.fields['addr_clone'] == 1 && this.state.fields['additional'] != (\"\" || null || undefined) ? this.state.fields['additional'] : this.state.data['addresses'].additional != 'null' ? this.state.data['addresses'].additional : ''\n        }, {\n          column: 'uf',\n          label: 'Estado',\n          type: 'custom',\n          component: SelectMatriz,\n          disabled: this.state.fields['addr_clone'] == 1,\n          values: [\"Acre\", \"Alagoas\", \"Amazonas\", \"Amapá\", \"Bahia\", \"Ceará\", \"Brasília\", \"Espírito Santo\", \"Goiás\", \"Maranhão\", \"Minas Gerais\", \"Mato Grosso do Sul\", \"Mato Grosso\", \"Pará\", \"Paraíba\", \"Pernambuco\", \"Piauí\", \"Paraná\", \"Rio de Janeiro\", \"Rio Grande do Norte\", \"Rondônia\", \"Roraima\", \"Rio Grande do Sul\", \"Santa Catarina\", \"Sergipe\", \"São Paulo\", \"Tocantins\"],\n          value: this.state.fields['type'] == 2 && this.state.fields['addr_clone'] == 1 && this.state.fields['uf'] != (\"\" || null || undefined) ? this.state.fields['uf'] : this.state.data['addresses'].uf,\n          flexBasis: flexBasis,\n          flexGrow: 2,\n          style: {\n            minWidth: \"192px\"\n          }\n        }, {\n          column: 'city',\n          label: 'Cidade',\n          type: 'text',\n          disabled: this.state.fields['addr_clone'] == 1,\n          validate: {\n            max: 100,\n            required: true\n          },\n          flexBasis: flexBasis,\n          value: this.state.fields['type'] == 2 && this.state.fields['addr_clone'] == 1 && this.state.fields['city'] != (\"\" || null || undefined) ? this.state.fields['city'] : this.state.data['addresses'].city\n        }]\n      }, {\n        title: 'Contato',\n        fields: [{\n          column: 'contact_clone',\n          label: 'Clonar Matriz',\n          disabled: this.state.fields['type'] == 1 ? true : false,\n          type: 'checkbox',\n          validate: {\n            depends: {\n              label: 'Tipo',\n              value: 2,\n              column: 'type',\n              text: 'Filial'\n            }\n          },\n          flexBasis: \"100%\",\n          value: this.state.data.contact_clone\n        }, {\n          column: 'phone1',\n          label: 'Contato',\n          type: 'text',\n          disabled: this.state.fields['contact_clone'] == 1,\n          mask: InputPhone,\n          validate: {\n            max: 15,\n            required: true\n          },\n          flexBasis: flexBasis,\n          value: this.state.fields['type'] == 2 && this.state.fields['contact_clone'] == 1 && this.state.fields['phone1'] != (\"\" || null || undefined) ? this.state.fields['phone1'] : this.state.data['contacts'].phone1\n        }, {\n          column: 'phone2',\n          label: 'Contato alternativo',\n          type: 'text',\n          disabled: this.state.fields['contact_clone'] == 1,\n          mask: InputPhone,\n          validate: {\n            max: 15\n          },\n          flexBasis: flexBasis,\n          value: this.state.fields['type'] == 2 && this.state.fields['contact_clone'] == 1 && this.state.fields['phone2'] != (\"\" || null || undefined) ? this.state.fields['phone2'] : this.state.data['contacts'].phone2\n        }, {\n          column: 'email',\n          label: 'E-mail',\n          type: 'email',\n          disabled: this.state.fields['contact_clone'] == 1,\n          validate: {\n            max: 100\n          },\n          validateHandler: validaEmail,\n          flexBasis: flexBasis,\n          value: this.state.fields['type'] == 2 && this.state.fields['contact_clone'] == 1 && this.state.fields['email'] != (\"\" || null || undefined) ? this.state.fields['email'] : this.state.data['contacts'].email\n        }, {\n          column: 'site',\n          label: 'Site',\n          type: 'text',\n          disabled: this.state.fields['contact_clone'] == 1,\n          validate: {\n            max: 100\n          },\n          flexBasis: '20%',\n          value: this.state.fields['type'] == 2 && this.state.fields['contact_clone'] == 1 && this.state.fields['site'] != (\"\" || null || undefined) ? this.state.fields['site'] : this.state.data['contacts'].site == \"null\" ? \"\" : this.state.data['contacts'].site\n        }]\n      }, {\n        title: 'Redes Sociais',\n        fields: [{\n          column: 'linkedin',\n          label: 'Usuário do LinkedIn',\n          type: 'text',\n          disabled: this.state.fields['contact_clone'] == 1,\n          validate: {\n            max: 100,\n            required: true\n          },\n          flexBasis: flexBasis,\n          value: this.state.fields['type'] == 2 && this.state.fields['contact_clone'] == 1 && this.state.fields['linkedin'] != (\"\" || null || undefined) ? this.state.fields['linkedin'] : this.state.data['contacts'].linkedin\n        }, {\n          column: 'facebook',\n          label: 'Usuário do Facebook',\n          type: 'text',\n          disabled: this.state.fields['contact_clone'] == 1,\n          validate: {\n            max: 100,\n            required: true\n          },\n          flexBasis: flexBasis,\n          value: this.state.fields['type'] == 2 && this.state.fields['contact_clone'] == 1 && this.state.fields['facebook'] != (\"\" || null || undefined) ? this.state.fields['facebook'] : this.state.data['contacts'].facebook\n        }, {\n          column: 'instagram',\n          label: 'Usuário do Instagram',\n          type: 'text',\n          disabled: this.state.fields['contact_clone'] == 1,\n          validate: {\n            max: 100,\n            required: true\n          },\n          flexBasis: flexBasis,\n          value: this.state.fields['type'] == 2 && this.state.fields['contact_clone'] == 1 && this.state.fields['instagram'] != (\"\" || null || undefined) ? this.state.fields['instagram'] : this.state.data['contacts'].instagram\n        }]\n      }, {\n        title: 'Contrato Atual',\n        fields: [{\n          column: 'contract_clone',\n          label: 'Clonar Matriz',\n          disabled: this.state.fields['type'] == 1 ? true : false,\n          type: 'checkbox',\n          validate: {\n            depends: {\n              label: 'Tipo',\n              value: 2,\n              column: 'type',\n              text: 'Filial'\n            }\n          },\n          flexBasis: \"100%\"\n        }, {\n          column: 'accession_date',\n          label: 'Data de Adesão - Início',\n          type: 'date',\n          disabled: this.state.fields['contract_clone'] == 1,\n          validate: {\n            required: true\n          },\n          flexBasis: '20%',\n          value: this.state.fields['type'] == 2 && this.state.fields['contract_clone'] == 1 && this.state.fields['accession_date'] != (\"\" || null || undefined) ? this.state.fields['accession_date'] : this.state.data['contracts'].accession_date\n        }, {\n          column: 'end_date',\n          label: 'Data de Adesão - Fim',\n          type: 'date',\n          disabled: this.state.fields['contract_clone'] == 1,\n          validate: {\n            required: true\n          },\n          flexBasis: '20%',\n          value: this.state.fields['type'] == 2 && this.state.fields['contract_clone'] == 1 && this.state.fields['end_date'] != (\"\" || null || undefined) ? this.state.fields['end_date'] : this.state.data['contracts'].end_date\n        }, {\n          column: 'contributor_id',\n          label: 'Vendedor',\n          type: 'autocomplete',\n          validate: {\n            required: true\n          },\n          value: this.state.fields['type'] == 2 && this.state.fields['contract_clone'] == 1 && this.state.fields['contributors_id'] != (\"\" || null || undefined) ? this.state.fields['contributors_id'] : this.state.data['contracts'].contributors_id,\n          json: true,\n          valueLabel: 'name',\n          values: this.state.contributors,\n          flexBasis: '20%',\n          disabled: this.state.fields['contract_clone'] == 1\n        }, {\n          column: 'rate',\n          label: 'Taxa de Adesão',\n          type: 'decimal',\n          disabled: this.state.fields['contract_clone'] == 1,\n          validate: {\n            required: true,\n            decimal: true\n          },\n          flexBasis: '20%',\n          value: this.state.fields['type'] == 2 && this.state.fields['contract_clone'] == 1 && this.state.fields['rate'] != (\"\" || null || undefined) ? formatReal(getMoney(this.state.fields['rate'])) : formatReal(getMoney(this.state.data['contracts'].rate))\n        }]\n      }];\n      var rows = this.state.provManagers !== undefined ? this.state.provManagers : [];\n      var columns = [{\n        field: 'cpf',\n        headerName: 'CPF',\n        flex: 0.7,\n        valueFormatter: function valueFormatter(params) {\n          return params.value ? stringCpf(params.value) : '';\n        }\n      }, {\n        field: 'name',\n        headerName: 'Nome',\n        flex: 2\n      }, {\n        field: 'function',\n        headerName: 'Função',\n        flex: 1\n      }, {\n        field: 'active',\n        headerName: 'Situação',\n        flex: 0.5,\n        valueFormatter: function valueFormatter(params) {\n          return params.value === 1 ? \"Ativo\" : \"Inativo\";\n        }\n      }, {\n        field: 'id',\n        headerName: 'Ações',\n        flex: 1,\n        renderCell: function renderCell(params, row) {\n          return React.createElement(\"div\", null, React.createElement(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            size: \"small\",\n            onClick: function _callee3(e) {\n              var provManagers, actualDel, index, provManagersDeleted;\n              return _regeneratorRuntime.async(function _callee3$(_context8) {\n                while (1) {\n                  switch (_context8.prev = _context8.next) {\n                    case 0:\n                      _context8.prev = 0;\n                      provManagers = _this3.state.provManagers;\n                      actualDel = provManagers.find(function (x) {\n                        return x.id == params.row.id;\n                      });\n                      index = provManagers.findIndex(function (x) {\n                        return x.id == params.row.id;\n                      });\n                      _context8.next = 6;\n                      return _regeneratorRuntime.awrap(getApiProviders({}, _this3.props.match.params.id));\n\n                    case 6:\n                      _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                        provManagers: undefined\n                      }));\n\n                      provManagers.splice(index, 1);\n                      provManagersDeleted = _this3.state.provManagersDeleted;\n                      provManagersDeleted.push(actualDel);\n\n                      _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                        provManagers: provManagers,\n                        provManagersDeleted: provManagersDeleted\n                      }));\n\n                      _context8.next = 16;\n                      break;\n\n                    case 13:\n                      _context8.prev = 13;\n                      _context8.t0 = _context8[\"catch\"](0);\n                      console.log(_context8.t0);\n\n                    case 16:\n                      ;\n\n                    case 17:\n                    case \"end\":\n                      return _context8.stop();\n                  }\n                }\n              }, null, null, [[0, 13]], Promise);\n            },\n            style: {\n              marginLeft: 16\n            }\n          }, React.createElement(DeleteForeverIcon, {\n            fontSize: \"small\"\n          })));\n        }\n      }];\n      var rowsProv = this.state.provProviders !== undefined ? this.state.provProviders : [];\n      var columnsProv = [{\n        field: 'company_name',\n        headerName: 'Farmácia',\n        flex: 0.7,\n        row: true,\n        valueFormatter: function valueFormatter(params) {\n          var _params$row$cnpj;\n\n          return params.row.company_name + \" - \" + stringCnpj((_params$row$cnpj = params.row.cnpj) != null ? _params$row$cnpj : '00000000000000');\n        }\n      }, {\n        field: 'phone1',\n        headerName: 'Telefone',\n        flex: 0.7,\n        row: true,\n        valueFormatter: function valueFormatter(params) {\n          return params.row.contact ? params.row.contact.phone1 : '-';\n        }\n      }, {\n        field: 'email',\n        headerName: 'E-mail',\n        flex: 0.7,\n        row: true,\n        valueFormatter: function valueFormatter(params) {\n          return params.row.contact ? params.row.contact.email : '';\n        }\n      }, {\n        field: 'type',\n        headerName: 'Tipo',\n        flex: 0.7,\n        row: true,\n        valueFormatter: function valueFormatter(params) {\n          return params.row.type === 1 ? \"Matriz\" : \"Filial\";\n        }\n      }, {\n        field: 'id',\n        headerName: 'Ações',\n        flex: 1,\n        renderCell: function renderCell(params, row) {\n          return React.createElement(\"div\", null, React.createElement(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            size: \"small\",\n            onClick: function _callee4(e) {\n              var data;\n              return _regeneratorRuntime.async(function _callee4$(_context9) {\n                while (1) {\n                  switch (_context9.prev = _context9.next) {\n                    case 0:\n                      _context9.prev = 0;\n                      _context9.next = 3;\n                      return _regeneratorRuntime.awrap(putApiProviders(params.row.id, {\n                        matriz_id: null,\n                        type: 1\n                      }));\n\n                    case 3:\n                      _context9.next = 5;\n                      return _regeneratorRuntime.awrap(getApiProviders({}, _this3.props.match.params.id));\n\n                    case 5:\n                      data = _context9.sent;\n\n                      _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                        provProviders: data.filials\n                      }));\n\n                      _context9.next = 12;\n                      break;\n\n                    case 9:\n                      _context9.prev = 9;\n                      _context9.t0 = _context9[\"catch\"](0);\n                      console.log(_context9.t0);\n\n                    case 12:\n                      ;\n\n                    case 13:\n                    case \"end\":\n                      return _context9.stop();\n                  }\n                }\n              }, null, null, [[0, 9]], Promise);\n            },\n            style: {\n              marginLeft: 16\n            }\n          }, React.createElement(DeleteForeverIcon, {\n            fontSize: \"small\"\n          })));\n        }\n      }];\n      return React.createElement(Fragment, null, React.createElement(AppBar, {\n        position: \"static\",\n        style: {\n          padding: 10,\n          marginTop: 10,\n          marginBottom: 10\n        }\n      }, React.createElement(Typography, {\n        variant: \"h6\"\n      }, React.createElement(HomeIcon, null), \"  \", React.createElement(\"span\", null, \"Editar / Fornecedor\"))), React.createElement(LForms, {\n        forms: forms,\n        onChange: function onChange(e) {\n          _this3.onChange(e);\n        },\n        request: function request(data) {\n          _request(_this3.state.data, data);\n        },\n        validate: function validate(values) {\n          return validateFields(forms, values);\n        },\n        loading: this.state.loading\n      }, this.state.data.id == undefined ? '' : React.createElement(\"div\", null, React.createElement(Card, {\n        style: {\n          marginBottom: 15\n        }\n      }, React.createElement(CardContent, null, React.createElement(Typography, {\n        onClick: function onClick() {\n          var filter = _this3.state.filter;\n          filter['responsaveis-ind'] = _this3.state.filter['responsaveis-ind'] == 'block' ? 'none' : 'block';\n\n          _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n            filter: filter\n          }));\n        }\n      }, React.createElement(IndeterminateCheckBoxIcon, null), \" Respons\\xE1veis\"), React.createElement(\"div\", {\n        style: {\n          display: (_this$state$filter$re = this.state.filter['responsaveis-ind']) != null ? _this$state$filter$re : 'block'\n        }\n      }, React.createElement(\"div\", {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'start',\n          display: 'flex'\n        }\n      }, React.createElement(SelectInput, {\n        valueLabel: \"value\",\n        json: true,\n        valueLabel: 'name',\n        key: \"input-\" + 15019,\n        id: \"manager\",\n        label: \"Responsável\",\n        name: \"manager\",\n        values: this.state.managers,\n        style: {\n          flexBasis: window.innerWidth < 768 ? '75%' : '75%',\n          marginBottom: 15\n        },\n        onChange: function onChange(e) {\n          _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n            manager: e.target.value\n          }));\n        }\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        disableElevation: true,\n        onClick: function _callee5() {\n          var provManagers, allmanagers, data;\n          return _regeneratorRuntime.async(function _callee5$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  provManagers = _this3.state.provManagers;\n                  allmanagers = provManagers.find(function (x) {\n                    return x.id == _this3.state.manager;\n                  });\n\n                  if (!allmanagers) {\n                    _context10.next = 5;\n                    break;\n                  }\n\n                  _this3.props.setSnackbar({\n                    open: true,\n                    message: \"O Respons\\xE1vel \" + allmanagers.name + \" j\\xE1 est\\xE1 vinculado.\"\n                  });\n\n                  return _context10.abrupt(\"return\", false);\n\n                case 5:\n                  _context10.next = 7;\n                  return _regeneratorRuntime.awrap(getApiManagers({}, _this3.state.manager));\n\n                case 7:\n                  data = _context10.sent;\n\n                  _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                    provManagers: undefined\n                  }));\n\n                  provManagers.push(data);\n\n                  _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                    provManagers: provManagers\n                  }));\n\n                  console.log(_this3.state.provManagers);\n\n                case 12:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        }\n      }, React.createElement(AddIcon, null))), React.createElement(\"div\", {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'start',\n          overflow: 'auto',\n          height: 350,\n          minHeight: 350\n        }\n      }, window.innerWidth > 720 ? React.createElement(DataGrid, {\n        sx: {\n          '& .MuiDataGrid-root': {\n            '& .MuiDataGrid-viewport': {\n              maxWidth: '600px'\n            }\n          }\n        },\n        rows: rows,\n        columns: columns,\n        spacing: 0,\n        stickyHeader: true,\n        disableClickEventBubbling: true,\n        disableColumnMenu: true,\n        localeText: DEFAULT_LOCALE_TEXT,\n        pageSize: 10,\n        rowsPerPageOptions: [10],\n        pagination: true\n      }) : rows.map(function (row, key) {\n        return React.createElement(Card, {\n          key: \"card-container\" + key,\n          style: {\n            marginTop: 15\n          }\n        }, React.createElement(CardContent, null, React.createElement(List, {\n          key: \"list_field_\" + key,\n          component: \"nav\"\n        }, Object.entries(row).map(function (field) {\n          var headerName = columns.find(function (column) {\n            return column.field === field[0];\n          });\n\n          if (headerName && headerName.field !== 'id') {\n            var _headerName$valueForm;\n\n            var value = (_headerName$valueForm = headerName.valueFormatter) != null ? _headerName$valueForm : headerName.renderCell;\n            value = value == undefined ? field[1] : value(headerName.row == true ? {\n              row: row\n            } : {\n              value: field[1]\n            });\n\n            if (headerName.renderCell !== undefined) {\n              value = headerName.renderCell({\n                value: field[1],\n                row: row\n              }, row);\n              return React.createElement(ListItem, {\n                style: {\n                  paddingTop: 0,\n                  paddingBottom: 0\n                }\n              }, React.createElement(ListItemText, {\n                primary: \"\" + headerName.headerName,\n                secondary: value\n              }));\n            } else {\n              return React.createElement(ListItem, {\n                style: {\n                  paddingTop: 0,\n                  paddingBottom: 0\n                }\n              }, React.createElement(ListItemText, {\n                primary: \"\" + headerName.headerName,\n                secondary: \"\" + value\n              }));\n            }\n          }\n        }))), React.createElement(CardActions, {\n          style: {\n            justifyContent: 'center'\n          }\n        }, Object.entries(row).map(function (field) {\n          var headerName = columns.find(function (column) {\n            return column.field === field[0];\n          });\n\n          if (headerName && headerName.field == 'id') {\n            return headerName.renderCell({\n              value: field[1],\n              row: row\n            }, row);\n          }\n        })));\n      }))))), React.createElement(Card, {\n        style: {\n          marginBottom: 15\n        }\n      }, React.createElement(CardContent, null, React.createElement(Typography, {\n        onClick: function onClick() {\n          var filter = _this3.state.filter;\n          filter['fornecedores-ind'] = _this3.state.filter['fornecedores-ind'] == 'block' ? 'none' : 'block';\n\n          _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n            filter: filter\n          }));\n        }\n      }, React.createElement(IndeterminateCheckBoxIcon, null), \" Fornecedores\"), React.createElement(\"div\", {\n        style: {\n          display: (_this$state$filter$fo = this.state.filter['fornecedores-ind']) != null ? _this$state$filter$fo : 'block'\n        }\n      }, React.createElement(\"div\", {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'start',\n          display: 'flex'\n        }\n      }, React.createElement(SelectInput, {\n        valueLabel: \"value\",\n        json: true,\n        valueLabel: 'company_name',\n        key: \"input-\" + 15019,\n        id: \"provider\",\n        label: \"Filial\",\n        name: \"provider\",\n        values: this.state.filials,\n        style: {\n          flexBasis: window.innerWidth < 768 ? '75%' : '75%',\n          marginBottom: 15\n        },\n        onChange: function onChange(e) {\n          _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n            provider: e.target.value\n          }));\n        }\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        disableElevation: true,\n        onClick: function _callee6() {\n          var data;\n          return _regeneratorRuntime.async(function _callee6$(_context11) {\n            while (1) {\n              switch (_context11.prev = _context11.next) {\n                case 0:\n                  _context11.next = 2;\n                  return _regeneratorRuntime.awrap(putApiProviders(_this3.state.provider, {\n                    type: 2,\n                    matriz_id: _this3.state.data.matriz_id > 0 ? _this3.state.data.matriz_id : _this3.props.match.params.id\n                  }));\n\n                case 2:\n                  _context11.next = 4;\n                  return _regeneratorRuntime.awrap(getApiProviders({}, _this3.props.match.params.id));\n\n                case 4:\n                  data = _context11.sent;\n\n                  _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                    provProviders: data.filials\n                  }));\n\n                case 6:\n                case \"end\":\n                  return _context11.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        }\n      }, React.createElement(AddIcon, null))), React.createElement(\"div\", {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'start',\n          overflow: 'auto',\n          height: 350,\n          minHeight: 350\n        }\n      }, window.innerWidth > 720 ? React.createElement(DataGrid, {\n        sx: {\n          '& .MuiDataGrid-root': {\n            '& .MuiDataGrid-viewport': {\n              maxWidth: '600px'\n            }\n          }\n        },\n        rows: rowsProv,\n        columns: columnsProv,\n        spacing: 0,\n        stickyHeader: true,\n        disableClickEventBubbling: true,\n        disableColumnMenu: true,\n        localeText: DEFAULT_LOCALE_TEXT,\n        pageSize: 10,\n        rowsPerPageOptions: [10],\n        pagination: true\n      }) : rowsProv.map(function (row, key) {\n        return React.createElement(Card, {\n          key: \"card-container\" + key,\n          style: {\n            marginTop: 15\n          }\n        }, React.createElement(CardContent, null, React.createElement(List, {\n          key: \"list_field_\" + key,\n          component: \"nav\"\n        }, Object.entries(row).map(function (field) {\n          var headerName = columnsProv.find(function (column) {\n            return column.field === field[0] || field[0] == 'contact' && column.field == 'phone1' || field[0] == 'contact_clone' && column.field == 'email';\n          });\n\n          if (headerName && headerName.field !== 'id') {\n            var _headerName$valueForm2;\n\n            var value = (_headerName$valueForm2 = headerName.valueFormatter) != null ? _headerName$valueForm2 : headerName.renderCell;\n            value = value == undefined ? field[1] : value(headerName.row == true ? {\n              row: row,\n              value: field[1]\n            } : {\n              value: field[1]\n            });\n\n            if (headerName.renderCell !== undefined) {\n              value = headerName.renderCell({\n                value: field[1],\n                row: row\n              }, row);\n              return React.createElement(ListItem, {\n                style: {\n                  paddingTop: 0,\n                  paddingBottom: 0\n                }\n              }, React.createElement(ListItemText, {\n                primary: \"\" + headerName.headerName,\n                secondary: value\n              }));\n            } else {\n              return React.createElement(ListItem, {\n                style: {\n                  paddingTop: 0,\n                  paddingBottom: 0\n                }\n              }, React.createElement(ListItemText, {\n                primary: \"\" + headerName.headerName,\n                secondary: \"\" + value\n              }));\n            }\n          }\n        }))), React.createElement(CardActions, {\n          style: {\n            justifyContent: 'center'\n          }\n        }, Object.entries(row).map(function (field) {\n          var headerName = columnsProv.find(function (column) {\n            return column.field === field[0];\n          });\n\n          if (headerName && headerName.field == 'id') {\n            return headerName.renderCell({\n              value: field[1],\n              row: row\n            }, row);\n          }\n        })));\n      }))))))), this.state.data.audits && React.createElement(Paper, {\n        style: {\n          marginTop: 10,\n          marginBottom: 10,\n          padding: 15,\n          height: window.innerWidth < 720 ? 210 : 90\n        }\n      }, React.createElement(\"div\", {\n        style: {\n          float: 'left',\n          maxWidth: 350\n        }\n      }, React.createElement(Typography, {\n        variant: \"subtitle1\",\n        style: {\n          padding: 10\n        }\n      }, \"Data de cadastro:  \", React.createElement(\"b\", null, stringToaddDate(this.state.data.created_at, 'DD/MM/YYYY', {\n        qtd: 1,\n        period: 'days'\n      })), \"\\xA0\"), React.createElement(Typography, {\n        variant: \"subtitle1\",\n        style: {\n          padding: 10\n        }\n      }, \"\\xDAltima altera\\xE7\\xE3o:  \", React.createElement(\"b\", null, stringToaddDate(this.state.data.updated_at, 'DD/MM/YYYY', {\n        qtd: 1,\n        period: 'days'\n      })))), React.createElement(\"div\", {\n        style: {\n          float: 'left',\n          maxWidth: 350\n        }\n      }, React.createElement(Typography, {\n        variant: \"subtitle1\",\n        style: {\n          padding: 10\n        }\n      }, \"Id:  \", React.createElement(\"b\", null, this.state.data.audits.user.id)), React.createElement(Typography, {\n        variant: \"subtitle1\",\n        style: {\n          padding: 10\n        }\n      }, \"Usu\\xE1rio:  \", React.createElement(\"b\", null, this.state.data.audits.user.name)))));\n    }\n  }]);\n\n  return EditProviders;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    session: store.authReducer.data,\n    snackbar: store.appReducer.snackbar\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setSnackbar: setSnackbar\n  }, dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditProviders));","map":{"version":3,"sources":["C:/Users/Maou/Documents/Projetos/CLIENTES/RNF/Completo/client/src/pages/Providers/edit/index.js"],"names":["React","Component","Fragment","useState","useRef","useEffect","connect","bindActionCreators","withRouter","AppBar","Paper","HomeIcon","Typography","Snackbar","LForms","MenuItem","FormHelperText","FormControl","FormControlLabel","Select","InputLabel","IndeterminateCheckBoxIcon","Card","CardContent","Button","Link","BlockIcon","EditIcon","DeleteForeverIcon","AddIcon","setSnackbar","putApiProviders","getApiManagers","deleteApiManagersProviders","getAddressByCepla","getApiProviders","getApiProviderTypes","getApiContributors","validaEmail","validaCnpj","stringToaddDate","InputCep","InputCnpj","InputPhone","stringCpf","stringCnpj","Redirect","withSnackbar","DataGrid","DEFAULT_LOCALE_TEXT","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","CardActions","List","ListItem","ListItemText","module_id","AutocompleteMatriz","props","value","values","find","item","id","undefined","setValue","inputValue","setInputValue","defaultVal","setDefault","vl","console","log","valueLabel","handleChange","e","newValue","target","val","validate","setError","onChange","disabled","name","option","event","newInputValue","style","params","label","SelectMatriz","error","column","marginTop","json","map","ind","SelectInput","TypeEmpresaInput","value1","setValue1","handleChange1","handler","flexBasis","display","helperText","margin","window","innerWidth","BlockDialog","open","setOpen","loading","setLoading","justfy","setjustfy","handleClose","send","active","justification","handle","getMoney","str","parseInt","replace","formatReal","int","tmp","length","EditProviders","state","filter","fields","data","managers","contributors","manager","providers","filials","provider","provProviders","provManagers","provManagersDeleted","JSON","parse","localStorage","getItem","location","href","setItem","match","type","providertypes","setState","x","matriz_id","Object","entries","addresses","key","contacts","contracts","closeSnack","reason","message","request","rate","v","k","provider_id","manager_id","del","success","add","response","history","goBack","errors","messages","keys","err","field","toUpperCase","validateFields","campo","reverse","v1","k1","number","test","depends","text","decimal","max","min","required","validateHandler","forms","title","component","matrizData","mask","file","addr_clone","zipcode","street","additional","uf","flexGrow","minWidth","city","contact_clone","phone1","phone2","email","site","linkedin","facebook","instagram","accession_date","end_date","contributors_id","rows","columns","headerName","flex","valueFormatter","renderCell","row","actualDel","index","findIndex","splice","push","marginLeft","rowsProv","columnsProv","company_name","cnpj","contact","padding","marginBottom","alignItems","justifyContent","allmanagers","overflow","height","minHeight","maxWidth","paddingTop","paddingBottom","audits","float","created_at","qtd","period","updated_at","user","mapStateToProps","store","session","authReducer","snackbar","appReducer","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,EAA+CC,MAA/C,EAAuDC,SAAvD,QAAwE,OAAxE;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP;AAEA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,OAAOC,yBAAP,MAAsC,0CAAtC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,WAAT;AACA,SAASC,eAAT,EAA0BC,cAA1B,EAA0CC,0BAA1C,EAAqEC,iBAArE,EAAwFC,eAAxF,EAAyGC,mBAAzG,EAA8HC,kBAA9H;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,eAAlC;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,EAA0CC,SAA1C,EAAqDC,UAArD;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,mBAAT;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,WAAT,EAAsBC,IAAtB,EAA4BC,QAA5B,EAAsCC,YAAtC,QAA0D,mBAA1D;AAGA,IAAMC,SAAS,GAAG,CAAlB;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AAAA;;AAAA,wBAER7D,KAAK,CAACG,QAAN,CAAe0D,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkB,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACC,EAAL,IAAWL,KAAK,CAACC,KAA3B;AAAA,GAAlB,CAAd,GAAoEK,SAAnF,CAFQ;AAAA;AAAA,MAE3BL,KAF2B;AAAA,MAEpBM,QAFoB;;AAAA,yBAGEpE,KAAK,CAACG,QAAN,CAAe,EAAf,CAHF;AAAA;AAAA,MAG3BkE,UAH2B;AAAA,MAGfC,aAHe;;AAAA,kBAIDnE,QAAQ,CAAC0D,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkB,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACC,EAAL,IAAWL,KAAK,CAACC,KAA3B;AAAA,GAAlB,CAAd,GAAoEK,SAArE,CAJP;AAAA;AAAA,MAI3BI,UAJ2B;AAAA,MAIfC,UAJe;;AAKhCnE,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGwD,KAAK,CAACC,KAAN,KAAgBS,UAAnB,EAA8B;AAC1B,UAAME,EAAE,GAAGZ,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,EAAL,IAAWL,KAAK,CAACC,KAA3B;AAAA,OAAlB,CAAd,GAAoEK,SAA/E;;AACA,UAAGM,EAAE,KAAKN,SAAV,EAAoB;AAClBO,QAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACAL,QAAAA,QAAQ,CAACK,EAAD,CAAR;AACAH,QAAAA,aAAa,CAACG,EAAE,KAAKN,SAAP,GAAmBM,EAAE,CAACZ,KAAK,CAACe,UAAP,CAArB,GAA0C,EAA3C,CAAb;AACD;AACJ;AACJ,GATQ,CAAT;;AAWF,WAASC,YAAT,CAAsBC,CAAtB,EAAyBC,QAAzB,EAAmC;AAAA,oBACbD,CAAC,CAACE,MADW;AAAA,QACzBC,GADyB,aACzBA,GADyB;AAAA,QACpBf,EADoB,aACpBA,EADoB;AAEjC,QAAIO,EAAE,GAAG;AAACO,MAAAA,MAAM,EAAE;AAAEd,QAAAA,EAAE,EAAEL,KAAK,CAACK,EAAZ;AAAgBJ,QAAAA,KAAK,EAAEiB,QAAQ,CAACb;AAAhC;AAAT,KAAT;;AACA,QAAIL,KAAK,CAACqB,QAAN,KAAmBf,SAAvB,EAAkC;AAC9B,UAAIN,KAAK,CAACqB,QAAN,CAAeD,GAAf,CAAJ,EAAyB;AACrBE,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACH,OAFD,MAEO;AACHA,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AACJ;;AACCtB,IAAAA,KAAK,CAACuB,QAAN,CAAeX,EAAf;AAEAL,IAAAA,QAAQ,CAACW,QAAD,CAAR;AACD;;AACH,SAAO,oBAAC,YAAD;AACD,IAAA,GAAG,oBAAkBlB,KAAK,CAACK,EAD1B;AAED,IAAA,EAAE,EAAEL,KAAK,CAACK,EAFT;AAGD,IAAA,QAAQ,qBAAEL,KAAK,CAACwB,QAAR,8BAAoB,KAH3B;AAID,IAAA,IAAI,EAAExB,KAAK,CAACyB,IAJX;AAKD,IAAA,KAAK,EAAExB,KALN;AAMD,IAAA,UAAU,EAAEO,UANX;AAOD,IAAA,QAAQ,EAAEQ,YAPT;AAQD,IAAA,iBAAiB,EAAE,2BAACU,MAAD,EAASzB,KAAT,EAAmB;AAClC,UAAGyB,MAAM,CAACrB,EAAP,IAAaJ,KAAK,CAACI,EAAtB,EAAyB;AACrBI,QAAAA,aAAa,CAACR,KAAK,CAACD,KAAK,CAACe,UAAP,CAAN,CAAb;AACH;;AAED,aAAOW,MAAM,CAACrB,EAAP,IAAaJ,KAAK,CAACI,EAA1B;AACH,KAdA;AAeD,IAAA,cAAc,EAAE,wBAACqB,MAAD;AAAA,aAAYA,MAAM,CAAC1B,KAAK,CAACe,UAAP,CAAlB;AAAA,KAff;AAgBD,IAAA,aAAa,EAAE,uBAACY,KAAD,EAAQC,aAAR,EAA0B;AACvCnB,MAAAA,aAAa,CAACmB,aAAD,CAAb;AACD,KAlBA;AAmBD,IAAA,OAAO,EAAE5B,KAAK,CAACE,MAnBd;AAoBD,IAAA,KAAK,EAAEF,KAAK,CAAC6B,KApBZ;AAqBD,IAAA,WAAW,EAAE,qBAACC,MAAD;AAAA,aAAY,oBAAC,SAAD,eAAeA,MAAf;AACzB,QAAA,KAAK,EAAE9B,KAAK,CAAC+B;AADY,SAAZ;AAAA;AArBZ,IAAP;AAyBD,CAvDH;;AAyDA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAChC,KAAD,EAAW;AAAA;;AAAA,mBACF1D,QAAQ,iBAAC0D,KAAK,CAACC,KAAP,2BAAgB,WAAhB,CADN;AAAA;AAAA,MACrBA,KADqB;AAAA,MACdM,QADc;;AAAA,mBAEFjE,QAAQ,CAAC,KAAD,CAFN;AAAA;AAAA,MAErB2F,KAFqB;AAAA,MAEdX,QAFc;;AAAA,mBAGKhF,QAAQ,kBAAC0D,KAAK,CAACC,KAAP,4BAAgB,WAAhB,CAHb;AAAA;AAAA,MAGrBS,UAHqB;AAAA,MAGTC,UAHS;;AAI5BnE,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGwD,KAAK,CAACC,KAAN,KAAgBS,UAAnB,EAA8B;AAAA;;AAC1BH,MAAAA,QAAQ,kBAACP,KAAK,CAACC,KAAP,4BAAgB,WAAhB,CAAR;AACH;AACJ,GAJQ,CAAT;;AAMA,WAASe,YAAT,CAAsBC,CAAtB,EAAyB;AAAA,qBACDA,CAAC,CAACE,MADD;AAAA,QACbC,GADa,cACbA,GADa;AAAA,QACRf,EADQ,cACRA,EADQ;;AAErB,QAAIL,KAAK,CAACqB,QAAN,KAAmBf,SAAvB,EAAkC;AAC9B,UAAIN,KAAK,CAACqB,QAAN,CAAeD,GAAf,CAAJ,EAAyB;AACrBE,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACH,OAFD,MAEO;AACHA,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AACJ;;AACDtB,IAAAA,KAAK,CAACuB,QAAN,CAAeN,CAAf;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,CAAC,CAACE,MAAF,CAASlB,KAArB;AACAM,IAAAA,QAAQ,CAACU,CAAC,CAACE,MAAF,CAASlB,KAAV,CAAR;AACH;;AACD,SACI,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAED,KAAK,CAACkC,MAAvB;AAA+B,IAAA,KAAK,kCAAOlC,KAAK,CAAC6B,KAAb;AAAoBM,MAAAA,SAAS,EAAE;AAA/B;AAApC,KACI,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAEnC,KAAK,CAACkC;AAAtB,KAA+BlC,KAAK,CAAC+B,KAArC,CADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AACI,IAAA,OAAO,EAAE/B,KAAK,CAACK,EADnB;AAEI,IAAA,EAAE,EAAEL,KAAK,CAACK,EAFd;AAGI,IAAA,QAAQ,sBAAEL,KAAK,CAACwB,QAAR,+BAAoB,KAHhC;AAII,IAAA,IAAI,EAAExB,KAAK,CAACyB,IAJhB;AAKI,IAAA,KAAK,EAAExB,KALX;AAMI,IAAA,KAAK,EAAEgC,KANX;AAOI,IAAA,WAAW,EAAC,WAPhB;AASI,IAAA,QAAQ,EAAEjB,YATd;AAUI,IAAA,MAAM,EAAEA;AAVZ,KAYI,oBAAC,QAAD;AAAU,IAAA,GAAG,YAAb;AAA2B,IAAA,KAAK,EAAC;AAAjC,iBAZJ,EAaKhB,KAAK,CAACoC,IAAN,GACGpC,KAAK,CAACE,MAAN,CAAamC,GAAb,CAAiB,UAACjB,GAAD,EAAMkB,GAAN,EAAc;AAC3B,WAAO,oBAAC,QAAD;AAAU,MAAA,GAAG,aAAWA,GAAxB;AAA+B,MAAA,KAAK,EAAElB,GAAG,CAACf;AAA1C,OAA+Ce,GAAG,CAACpB,KAAK,CAACe,UAAP,CAAlD,CAAP;AACH,GAFD,CADH,GAKGf,KAAK,CAACE,MAAN,CAAamC,GAAb,CAAiB,UAACjB,GAAD,EAAMkB,GAAN,EAAc;AAC3B,WAAO,oBAAC,QAAD;AAAU,MAAA,GAAG,aAAWA,GAAxB;AAA+B,MAAA,KAAK,EAAElB;AAAtC,OAA4CA,GAA5C,CAAP;AACH,GAFD,CAlBR,CAFJ,CADJ;AA6BH,CApDD;;AAsDA,IAAMmB,WAAW,GAAG,SAAdA,WAAc,CAACvC,KAAD,EAAW;AAAA;;AAAA,mBACD1D,QAAQ,kBAAC0D,KAAK,CAACC,KAAP,4BAAgB,WAAhB,CADP;AAAA;AAAA,MACpBA,KADoB;AAAA,MACbM,QADa;;AAAA,oBAEDjE,QAAQ,CAAC,KAAD,CAFP;AAAA;AAAA,MAEpB2F,KAFoB;AAAA,MAEbX,QAFa;;AAG3B,WAASN,YAAT,CAAsBC,CAAtB,EAAyB;AAAA,qBACCA,CAAC,CAACE,MADH;AAAA,QACblB,KADa,cACbA,KADa;AAAA,QACNI,EADM,cACNA,EADM;;AAErB,QAAIL,KAAK,CAACqB,QAAN,KAAmBf,SAAvB,EAAkC;AAC9B,UAAIN,KAAK,CAACqB,QAAN,CAAepB,KAAf,CAAJ,EAA2B;AACvBqB,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACH,OAFD,MAEO;AACHA,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AACJ;;AACDL,IAAAA,CAAC,CAACE,MAAF,CAASd,EAAT,GAAcY,CAAC,CAACE,MAAF,CAASM,IAAvB;AACAzB,IAAAA,KAAK,CAACuB,QAAN,CAAeN,CAAf;AAEAV,IAAAA,QAAQ,CAACU,CAAC,CAACE,MAAF,CAASlB,KAAV,CAAR;AACH;;AACD,SACI,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAED,KAAK,CAACkC,MAAvB;AAA+B,IAAA,KAAK,kCAAOlC,KAAK,CAAC6B,KAAb;AAAoBM,MAAAA,SAAS,EAAE;AAA/B;AAApC,KACI,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAEnC,KAAK,CAACkC;AAAtB,KAA+BlC,KAAK,CAAC+B,KAArC,CADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AACI,IAAA,OAAO,EAAE/B,KAAK,CAACK,EADnB;AAEI,IAAA,EAAE,EAAEL,KAAK,CAACK,EAFd;AAGI,IAAA,IAAI,EAAEL,KAAK,CAACyB,IAHhB;AAII,IAAA,KAAK,EAAExB,KAJX;AAKI,IAAA,KAAK,EAAEgC,KALX;AAMI,IAAA,WAAW,EAAC,WANhB;AAQI,IAAA,QAAQ,EAAEjB,YARd;AASI,IAAA,MAAM,EAAEA;AATZ,KAWI,oBAAC,QAAD;AAAU,IAAA,GAAG,YAAb;AAA2B,IAAA,KAAK,EAAC;AAAjC,iBAXJ,EAYKhB,KAAK,CAACoC,IAAN,GACGpC,KAAK,CAACE,MAAN,CAAamC,GAAb,CAAiB,UAACjB,GAAD,EAAMkB,GAAN,EAAc;AAC3B,WAAO,oBAAC,QAAD;AAAU,MAAA,GAAG,aAAWA,GAAxB;AAA+B,MAAA,KAAK,EAAElB,GAAG,CAACf;AAA1C,OAA+Ce,GAAG,CAACpB,KAAK,CAACe,UAAP,CAAlD,CAAP;AACH,GAFD,CADH,GAKGf,KAAK,CAACE,MAAN,CAAamC,GAAb,CAAiB,UAACjB,GAAD,EAAMkB,GAAN,EAAc;AAC3B,WAAO,oBAAC,QAAD;AAAU,MAAA,GAAG,aAAWA,GAAxB;AAA+B,MAAA,KAAK,EAAElB;AAAtC,OAA4CA,GAA5C,CAAP;AACH,GAFD,CAjBR,CAFJ,CADJ;AA4BH,CA7CD;;AA8CA,IAAMoB,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACxC,KAAD,EAAW;AAAA;;AAAA,oBACN1D,QAAQ,CAAC0D,KAAK,CAACC,KAAP,CADF;AAAA;AAAA,MACzBA,KADyB;AAAA,MAClBM,QADkB;;AAAA,oBAEJjE,QAAQ,CAAC0D,KAAK,CAACyC,MAAP,CAFJ;AAAA;AAAA,MAEzBA,MAFyB;AAAA,MAEjBC,SAFiB;;AAGhC,WAAS1B,YAAT,CAAsBC,CAAtB,EAAyB;AAAA;;AAAA,qBACCA,CAAC,CAACE,MADH;AAAA,QACblB,KADa,cACbA,KADa;AAAA,QACNI,EADM,cACNA,EADM;AAErB,uBAAAL,KAAK,CAACuB,QAAN,CAAeN,CAAf,+BAAqBX,SAArB;AACAC,IAAAA,QAAQ,CAACU,CAAC,CAACE,MAAF,CAASlB,KAAV,CAAR;AACH;;AACD,WAAe0C,aAAf,CAA6B1B,CAA7B;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBAC0BA,CAAC,CAACE,MAD5B,EACYlB,KADZ,cACYA,KADZ,EACmBI,EADnB,cACmBA,EADnB;AAAA;AAAA;AAAA,6CAGcL,KAAK,CAAC4C,OAAN,CAAc3C,KAAd,CAHd;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKQY,YAAAA,OAAO,CAACoB,KAAR;;AALR;AAOI,gCAAAjC,KAAK,CAACuB,QAAN,CAAeN,CAAf,gCAAqBX,SAArB;AACAoC,YAAAA,SAAS,CAACzB,CAAC,CAACE,MAAF,CAASlB,KAAV,CAAT;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SAAQ;AAAK,IAAA,KAAK,EAAE;AAAC4C,MAAAA,SAAS,EAAE7C,KAAK,CAAC6B,KAAN,CAAYgB,SAAxB;AAAmCC,MAAAA,OAAO,EAAE;AAA5C;AAAZ,KACJ,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAC,OAAxB;AAAgC,IAAA,IAAI,EAAE,IAAtC;AAA4C,IAAA,KAAK,EAAE7C,KAAnD;AAA0D,IAAA,UAAU,uBAAED,KAAK,CAAC+C,UAAR,gCAAsB,EAA1F;AAA8F,IAAA,GAAG,aAAW,KAA5G;AAAqH,IAAA,EAAE,EAAE,MAAzH;AAAiI,IAAA,KAAK,EAAE,SAAxI;AAAmJ,IAAA,IAAI,EAAE,MAAzJ;AAAiK,IAAA,MAAM,EAAE,CAAC;AAAC1C,MAAAA,EAAE,EAAC,CAAJ;AAAOJ,MAAAA,KAAK,EAAE;AAAd,KAAD,EAAyB;AAACI,MAAAA,EAAE,EAAC,CAAJ;AAAOJ,MAAAA,KAAK,EAAE;AAAd,KAAzB,CAAzK;AAA6N,IAAA,KAAK,EAAE;AAAC+C,MAAAA,MAAM,EAAE,CAAT;AAAYb,MAAAA,SAAS,EAAE,EAAvB;AAA0BU,MAAAA,SAAS,EAAEI,MAAM,CAACC,UAAP,GAAoB,GAApB,GAA0B,MAA1B,GAAmC;AAAxE,KAApO;AAAqT,IAAA,QAAQ,EAAE,kBAACjC,CAAD;AAAA,aAAOD,YAAY,CAACC,CAAD,CAAnB;AAAA;AAA/T,IADI,EAEHhB,KAAK,IAAI,CAAT,IACD,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAED,KAAK,CAACe,UAA/B;AAA2C,IAAA,IAAI,EAAEf,KAAK,CAACoC,IAAvD;AAA6D,IAAA,KAAK,EAAEK,MAApE;AAA4E,IAAA,UAAU,wBAAEzC,KAAK,CAAC+C,UAAR,iCAAsB,EAA5G;AAAgH,IAAA,GAAG,aAAW,KAA9H;AAAuI,IAAA,EAAE,EAAE,WAA3I;AAAwJ,IAAA,KAAK,EAAE/C,KAAK,CAAC+B,KAArK;AAA4K,IAAA,IAAI,EAAE,WAAlL;AAA+L,IAAA,MAAM,EAAE/B,KAAK,CAACE,MAA7M;AAAqN,IAAA,KAAK,EAAE;AAAC8C,MAAAA,MAAM,EAAE,CAAT;AAAYb,MAAAA,SAAS,EAAE,EAAvB;AAA0BU,MAAAA,SAAS,EAAEI,MAAM,CAACC,UAAP,GAAoB,GAApB,GAA0B,MAA1B,GAAmC;AAAxE,KAA5N;AAA6S,IAAA,QAAQ,EAAE,kBAACjC,CAAD;AAAA;;AAAA,8BAAO0B,aAAa,CAAC1B,CAAD,CAApB,4BAA2BX,SAA3B;AAAA;AAAvT,IAHI,CAAR;AAKH,CAvBD;;AAyBA,SAAS6C,WAAT,CAAqBnD,KAArB,EAA4B;AAAA,yBACA7D,KAAK,CAACG,QAAN,CAAe0D,KAAK,CAACoD,IAArB,CADA;AAAA;AAAA,MACjBA,IADiB;AAAA,MACXC,OADW;;AAAA,yBAEMlH,KAAK,CAACG,QAAN,CAAe,KAAf,CAFN;AAAA;AAAA,MAEjBgH,OAFiB;AAAA,MAERC,UAFQ;;AAAA,yBAGIpH,KAAK,CAACG,QAAN,CAAe,EAAf,CAHJ;AAAA;AAAA,MAGjBkH,MAHiB;AAAA,MAGTC,SAHS;;AAKxB,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBL,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAE,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAHD;;AAKA,MAAMI,IAAI,GAAG,SAAPA,IAAO;AAAA;;AAAA;AAAA;AAAA;AAAA;AACTJ,YAAAA,UAAU,CAAC,IAAD,CAAV;AADS;AAAA,6CAEHrF,eAAe,CAAE8B,KAAK,CAACK,EAAR,EAAY;AAACuD,cAAAA,MAAM,mBAAE5D,KAAK,CAAC4D,MAAR,4BAAkBtD,SAAzB;AAAoCuD,cAAAA,aAAa,EAAEL;AAAnD,aAAZ,CAFZ;;AAAA;AAGTxD,YAAAA,KAAK,CAAC8D,MAAN,CAAa9D,KAAK,CAAC4D,MAAnB;AACA5D,YAAAA,KAAK,CAAC0D,WAAN;AACAD,YAAAA,SAAS,CAAC,EAAD,CAAT;AACAF,YAAAA,UAAU,CAAC,KAAD,CAAV;;AANS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;;AAQA,SACE,iCACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEvD,KAAK,CAACoD,IAApB;AAA0B,IAAA,OAAO,EAAEpD,KAAK,CAAC0D,WAAzC;AAAsD,uBAAgB;AAAtE,KACE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC;AAAhB,oCADF,EAEE,oBAAC,aAAD,QACE,oBAAC,iBAAD,yDADF,EAKI1D,KAAK,CAAC4D,MAAN,IAAgB,CAAhB,IAAoB,oBAAC,SAAD;AACpB,IAAA,SAAS,MADW;AAEpB,IAAA,MAAM,EAAC,OAFa;AAGpB,IAAA,EAAE,EAAC,eAHiB;AAIpB,IAAA,KAAK,EAAC,eAJc;AAKpB,IAAA,IAAI,EAAC,MALe;AAMpB,IAAA,SAAS,MANW;AAOpB,IAAA,KAAK,EAAEJ,MAPa;AAQpB,IAAA,QAAQ,EAAE,kBAACvC,CAAD,EAAO;AACfwC,MAAAA,SAAS,CAACxC,CAAC,CAACE,MAAF,CAASlB,KAAV,CAAT;AACD;AAVmB,IALxB,CAFF,EAoBE,oBAAC,aAAD,QACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,KAAK,CAAC0D,WAAvB;AAAoC,IAAA,KAAK,EAAC;AAA1C,cADF,EAII,CAACJ,OAAD,GACF,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEK,IAAjB;AAAuB,IAAA,KAAK,EAAC;AAA7B,WADE,GAIE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC;AAAd,KACK,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE;AAACb,MAAAA,OAAO,EAAE;AAAV;AAAzB,IADL,CARN,CApBF,CADF,CADF;AAuCD;;AACD,SAASiB,QAAT,CAAmBC,GAAnB,EACA;AACI,SAAOC,QAAQ,CAAED,GAAG,CAACE,OAAJ,CAAY,QAAZ,EAAqB,EAArB,CAAF,CAAf;AACH;;AACD,SAASC,UAAT,CAAqBC,GAArB,EACA;AACI,MAAIC,GAAG,GAAGD,GAAG,GAAC,EAAd;AACIC,EAAAA,GAAG,GAAGA,GAAG,CAACH,OAAJ,CAAY,cAAZ,EAA4B,KAA5B,CAAN;AACA,MAAIG,GAAG,CAACC,MAAJ,GAAa,CAAjB,EACID,GAAG,GAAGA,GAAG,CAACH,OAAJ,CAAY,yBAAZ,EAAuC,QAAvC,CAAN;AACJ,MAAIG,GAAG,CAACC,MAAJ,IAAc,EAAlB,EACID,GAAG,GAAGA,GAAG,CAACH,OAAJ,CAAY,qCAAZ,EAAmD,UAAnD,CAAN;AACJ,SAAOG,GAAP;AACP;;IACGE,a;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,MAAM,EAAE,CAAC,MAAD,CADJ;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,IAAI,EAAE,EAHF;AAIJC,MAAAA,QAAQ,EAAE,EAJN;AAKJC,MAAAA,YAAY,EAAE,EALV;AAMJC,MAAAA,OAAO,EAAE,CANL;AAOJC,MAAAA,SAAS,EAAE,EAPP;AAQJC,MAAAA,OAAO,EAAE,EARL;AASJC,MAAAA,QAAQ,EAAE,CATN;AAUJC,MAAAA,aAAa,EAAE,EAVX;AAWJC,MAAAA,YAAY,EAAE,EAXV;AAYJC,MAAAA,mBAAmB,EAAE,EAZjB;AAaJ9B,MAAAA,OAAO,EAAE;AAbL,K;;;;;;WAeR;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ+B,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,KAA4C,IADpD;AAAA;AAAA;AAAA;;AAEQvC,cAAAA,MAAM,CAACwC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AAFR;;AAAA;AAKIH,cAAAA,YAAY,CAACI,OAAb,CAAqB,aAArB,EAAoC,IAApC;AALJ;AAAA,+CAM+BnH,kBAAkB,CAAC;AAACoF,gBAAAA,MAAM,EAAE;AAAT,eAAD,CANjD;;AAAA;AAMUiB,cAAAA,YANV;AAAA;AAAA,+CAOuBvG,eAAe,CAAC,EAAD,EAAK,KAAK0B,KAAL,CAAW4F,KAAX,CAAiB9D,MAAjB,CAAwBzB,EAA7B,CAPtC;;AAAA;AAOUsE,cAAAA,IAPV;AAAA;AAAA,+CAQ4BrG,eAAe,CAAC;AAACuH,gBAAAA,IAAI,EAAE,CAAP;AAAUjC,gBAAAA,MAAM,EAAE;AAAlB,eAAD,CAR3C;;AAAA;AAQUmB,cAAAA,SARV;AAAA;AAAA,+CAS0BzG,eAAe,CAAC;AAACuH,gBAAAA,IAAI,EAAE,CAAP;AAAUjC,gBAAAA,MAAM,EAAE;AAAlB,eAAD,CATzC;;AAAA;AASUoB,cAAAA,OATV;AAAA;AAAA,+CAU2B7G,cAAc,CAAC;AAACyF,gBAAAA,MAAM,EAAE;AAAT,eAAD,CAVzC;;AAAA;AAUUgB,cAAAA,QAVV;AAAA;AAAA,+CAWgCrG,mBAAmB,EAXnD;;AAAA;AAWUuH,cAAAA,aAXV;AAaI,mBAAKC,QAAL,iCAAmB,KAAKvB,KAAxB;AACIG,gBAAAA,IAAI,EAAJA,IADJ;AAEID,gBAAAA,MAAM,EAAEC,IAFZ;AAGII,gBAAAA,SAAS,EAAEA,SAAS,CAACJ,IAAV,CAAeF,MAAf,CAAsB,UAAAuB,CAAC;AAAA,yBAAIA,CAAC,CAAC3F,EAAF,IAAQ,MAAI,CAACL,KAAL,CAAW4F,KAAX,CAAiB9D,MAAjB,CAAwBzB,EAApC;AAAA,iBAAvB,CAHf;AAII2E,gBAAAA,OAAO,EAAEA,OAAO,CAACL,IAAR,CAAaF,MAAb,CAAoB,UAAAuB,CAAC;AAAA,yBAAIA,CAAC,CAAC3F,EAAF,IAAQ,MAAI,CAACL,KAAL,CAAW4F,KAAX,CAAiB9D,MAAjB,CAAwBzB,EAApC;AAAA,iBAArB,CAJb;AAKI8E,gBAAAA,YAAY,EAAER,IAAI,CAACC,QALvB;AAMIM,gBAAAA,aAAa,EAAEP,IAAI,CAACK,OANxB;AAOIJ,gBAAAA,QAAQ,EAAEA,QAAQ,CAACD,IAPvB;AAQIE,gBAAAA,YAAY,EAAEA,YAAY,CAACF,IAR/B;AASImB,gBAAAA,aAAa,EAAEA,aAAa,CAACnB;AATjC;;AAYgB,kBAAGA,IAAI,CAACsB,SAAL,KAAmB,QAAM3F,SAAzB,CAAH,EAAuC;AAC/BoE,gBAAAA,MAD+B,GACtB,KAAKF,KAAL,CAAWE,MADW;AAEnCwB,gBAAAA,MAAM,CAACC,OAAP,CAAexB,IAAI,CAACyB,SAApB,EACK/D,GADL,CACS,gBAAgB;AAAA;AAAA,sBAAdgE,GAAc;AAAA,sBAATjF,GAAS;;AACjBsD,kBAAAA,MAAM,CAAC2B,GAAD,CAAN,GAAcjF,GAAd;AACP,iBAHD;AAIA8E,gBAAAA,MAAM,CAACC,OAAP,CAAexB,IAAI,CAAC2B,QAApB,EACKjE,GADL,CACS,iBAAgB;AAAA;AAAA,sBAAdgE,GAAc;AAAA,sBAATjF,GAAS;;AACjBsD,kBAAAA,MAAM,CAAC2B,GAAD,CAAN,GAAcjF,GAAd;AACP,iBAHD;AAIA8E,gBAAAA,MAAM,CAACC,OAAP,CAAexB,IAAI,CAAC4B,SAApB,EACKlE,GADL,CACS,iBAAgB;AAAA;AAAA,sBAAdgE,GAAc;AAAA,sBAATjF,GAAS;;AACjB,sBAAGiF,GAAG,IAAI,MAAV,EAAiB;AACb3B,oBAAAA,MAAM,CAAC2B,GAAD,CAAN,GAAclC,UAAU,CAACJ,QAAQ,CAAC3C,GAAD,CAAT,CAAxB;AACH,mBAFD,MAEK;AACDsD,oBAAAA,MAAM,CAAC2B,GAAD,CAAN,GAAcjF,GAAd;AACH;AAER,iBARD;AASA,qBAAK2E,QAAL,iCAAkB,KAAKvB,KAAvB;AAA8BE,kBAAAA,MAAM,oBAAO,KAAKF,KAAL,CAAWE,MAAlB;AAApC;AACH;;AA7CrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAiDA,kBAASzD,CAAT,EAAW;AAEP,WAAK8E,QAAL,iCAAkB,KAAKvB,KAAvB;AAA8BE,QAAAA,MAAM,EAAEzD;AAAtC;AACH;;;WACD,kBAAS;AAAA;AAAA;AAAA;;AACL,UAAMuF,UAAU,GAAG,SAAbA,UAAa,CAAC7E,KAAD,EAAQ8E,MAAR,EAAmB;AAClC,YAAIA,MAAM,KAAK,WAAf,EAA4B;AACxB;AACH;;AACD,QAAA,MAAI,CAACzG,KAAL,CAAW/B,WAAX,CAAuB;AAAEmF,UAAAA,IAAI,EAAE,KAAR;AAAesD,UAAAA,OAAO,EAAE;AAAxB,SAAvB;AACH,OALD;;AAMA,UAAMC,QAAO,GAAG,SAAVA,OAAU,CAAOnC,KAAP,EAAcG,IAAd;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sBACT,MAAI,CAACH,KAAL,CAAWW,YAAX,CAAwBb,MAAxB,IAAkC,CADzB;AAAA;AAAA;AAAA;;AAER,gBAAA,MAAI,CAACtE,KAAL,CAAW/B,WAAX,CAAuB;AAAEmF,kBAAAA,IAAI,EAAE,IAAR;AAAcsD,kBAAAA,OAAO,EAAE;AAAvB,iBAAvB;;AAFQ,kDAGD,KAHC;;AAAA;AAKZ,gBAAA,MAAI,CAACX,QAAL,iCAAmB,MAAI,CAACvB,KAAxB;AAA+BlB,kBAAAA,OAAO,EAAE;AAAxC;;AACA,gBAAA,MAAI,CAACtD,KAAL,CAAW/B,WAAX,CAAuB;AAAEmF,kBAAAA,IAAI,EAAE,IAAR;AAAcsD,kBAAAA,OAAO,EAAE;AAAvB,iBAAvB;;AACA/B,gBAAAA,IAAI,GAAG,SAAc,EAAd,EAAkBH,KAAK,CAAC4B,SAAxB,EAAmCzB,IAAnC,CAAP;AACAA,gBAAAA,IAAI,GAAG,SAAc,EAAd,EAAkBH,KAAK,CAAC8B,QAAxB,EAAkC3B,IAAlC,CAAP;AACAA,gBAAAA,IAAI,GAAG,SAAc,EAAd,EAAkBH,KAAK,CAAC+B,SAAxB,EAAmC5B,IAAnC,CAAP;AACAA,gBAAAA,IAAI,GAAG,SAAc,EAAd,EAAkBH,KAAlB,EAAyBG,IAAzB,CAAP;AACA,uBAAOA,IAAI,CAACyB,SAAZ;AACA,uBAAOzB,IAAI,CAAC2B,QAAZ;AACA,uBAAO3B,IAAI,CAAC4B,SAAZ;AACA5B,gBAAAA,IAAI,CAACiC,IAAL,GAAYzC,UAAU,CAACJ,QAAQ,CAACY,IAAI,CAACiC,IAAN,CAAT,CAAtB;AACA/F,gBAAAA,OAAO,CAACC,GAAR,CAAY6D,IAAI,CAACiC,IAAjB;;AACA,gBAAA,MAAI,CAACpC,KAAL,CAAWY,mBAAX,CAA+B/C,GAA/B,CAAmC,iBAAOwE,CAAP,EAASC,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DACf1I,0BAA0B,CAAC;AAAC2I,4BAAAA,WAAW,EAAE,MAAI,CAAC/G,KAAL,CAAW4F,KAAX,CAAiB9D,MAAjB,CAAwBzB,EAAtC;AAA0C2G,4BAAAA,UAAU,EAAEH,CAAC,CAACxG;AAAxD,2BAAD,CADX;;AAAA;AAC3B4G,0BAAAA,GAD2B;;AAE/B,8BAAGA,GAAG,CAACC,OAAJ,IAAe,KAAlB,EAAwB;AACpB,4BAAA,MAAI,CAAClH,KAAL,CAAW/B,WAAX,CAAuB;AAAEmF,8BAAAA,IAAI,EAAE,IAAR;AAAcsD,8BAAAA,OAAO,EAAEO,GAAG,CAACP;AAA3B,6BAAvB;AACH;;AAJ8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAnC;;AAMA,gBAAA,MAAI,CAAClC,KAAL,CAAWW,YAAX,CAAwB9C,GAAxB,CAA4B,kBAAOwE,CAAP,EAASC,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DACR5I,eAAe,cAAY,MAAI,CAAC8B,KAAL,CAAW4F,KAAX,CAAiB9D,MAAjB,CAAwBzB,EAApC,SAA0CwG,CAAC,CAACxG,EAA5C,CADP;;AAAA;AACpB8G,0BAAAA,GADoB;;AAExB,8BAAGA,GAAG,CAACD,OAAJ,IAAe,KAAlB,EAAwB;AACpB,4BAAA,MAAI,CAAClH,KAAL,CAAW/B,WAAX,CAAuB;AAAEmF,8BAAAA,IAAI,EAAE,IAAR;AAAcsD,8BAAAA,OAAO,EAACO,GAAG,CAACP;AAA1B,6BAAvB;AACH;;AAJuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA5B;;AAtBY;AAAA,iDA6BSxI,eAAe,CAAC,MAAI,CAAC8B,KAAL,CAAW4F,KAAX,CAAiB9D,MAAjB,CAAwBzB,EAAzB,EAA6BsE,IAA7B,CA7BxB;;AAAA;AA6BRyC,gBAAAA,QA7BQ;;AA+BZ,oBAAIA,QAAQ,CAACzC,IAAT,CAAcuC,OAAlB,EAA2B;AACvB,kBAAA,MAAI,CAAClH,KAAL,CAAW/B,WAAX,CAAuB;AAAEmF,oBAAAA,IAAI,EAAE,IAAR;AAAcsD,oBAAAA,OAAO,EAAEU,QAAQ,CAACzC,IAAT,CAAc+B;AAArC,mBAAvB;;AACA,kBAAA,MAAI,CAACX,QAAL,iCAAmB,MAAI,CAACvB,KAAxB;AAA+BlB,oBAAAA,OAAO,EAAE;AAAxC;;AACA,kBAAA,MAAI,CAACtD,KAAL,CAAWqH,OAAX,CAAmBC,MAAnB;AACH,iBAJD,MAIO;AAECC,kBAAAA,MAFD,qBAEUH,QAAQ,CAACzC,IAFnB,6BAE2BrE,SAF3B;AAKCkH,kBAAAA,QALD,GAKY,EALZ;;AAMH,sBAAGD,MAAM,KAAKjH,SAAX,IAAwBiH,MAAM,CAACtF,KAAP,KAAiB3B,SAAzC,IAAsDiH,MAAM,CAACtF,KAAP,CAAamF,QAAnE,IAA+EG,MAAM,CAACtF,KAAP,CAAamF,QAAb,CAAsBzC,IAAtB,KAA+BrE,SAA9G,IAA2HiH,MAAM,CAACtF,KAAP,CAAamF,QAAb,CAAsBzC,IAAtB,CAA2B4C,MAA3B,KAAsCjH,SAApK,EAA8K;AAC1K4F,oBAAAA,MAAM,CAACuB,IAAP,CAAYF,MAAM,CAACtF,KAAP,CAAamF,QAAb,CAAsBzC,IAAtB,CAA2B4C,MAAvC,EAA+ClF,GAA/C,CAAmD,UAAAqF,GAAG,EAAI;AAEtD,0BAAIC,KAAK,GAAGD,GAAG,IAAI,MAAP,GAAgB,OAAhB,GAA0BA,GAAtC;AACAF,sBAAAA,QAAQ,WAASG,KAAK,CAACC,WAAN,EAAT,SAAgCL,MAAM,CAACtF,KAAP,CAAamF,QAAb,CAAsBzC,IAAtB,CAA2B4C,MAA3B,CAAkCG,GAAlC,EAAuC,CAAvC,CAAhC,QAAR;AACH,qBAJD;AAKH,mBAND,MAMM;AACFF,oBAAAA,QAAQ,GAAG,sCAAX;AACH;;AACD,kBAAA,MAAI,CAACzB,QAAL,iCAAmB,MAAI,CAACvB,KAAxB;AAA+BlB,oBAAAA,OAAO,EAAE;AAAxC;;AAEA,kBAAA,MAAI,CAACtD,KAAL,CAAW/B,WAAX,CAAuB;AAAEmF,oBAAAA,IAAI,EAAE,IAAR;AAAcoE,oBAAAA,QAAQ,EAARA;AAAd,mBAAvB;AACH;;AArDW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAhB;;AAwDA,UAAMK,cAAc,GAAG,SAAjBA,cAAiB,CAACnD,MAAD,EAASxE,MAAT,EAAoB;AACvC,YAAI4H,KAAK,GAAGxH,SAAZ;AACAoE,QAAAA,MAAM,CAACqD,OAAP,GAAiB1F,GAAjB,CAAqB,UAACwE,CAAD,EAAIC,CAAJ,EAAU;AAC3BD,UAAAA,CAAC,CAACnC,MAAF,CAASqD,OAAT,GAAmB1F,GAAnB,CAAuB,UAAC2F,EAAD,EAAKC,EAAL,EAAY;AAC/B,gBAAI/H,MAAM,CAAC8H,EAAE,CAAC9F,MAAJ,CAAN,KAAsB5B,SAA1B,EAAqC;AACjC,kBAAIL,KAAK,GAAGC,MAAM,CAAC8H,EAAE,CAAC9F,MAAJ,CAAlB;;AACA,kBAAI8F,EAAE,CAAC3G,QAAH,KAAgBf,SAApB,EAA+B;AAC3B,oBAAI0H,EAAE,CAAC3G,QAAH,CAAY6G,MAAZ,KAAuB5H,SAA3B,EAAsC;AAClC,sBAAI,YAAY6H,IAAZ,CAAiBlI,KAAjB,KAA2B,KAA/B,EACI6H,KAAK,GAAG;AAAEzH,oBAAAA,EAAE,EAAE2H,EAAE,CAAC9F,MAAT;AAAiBwE,oBAAAA,OAAO,eAAasB,EAAE,CAACjG,KAAhB;AAAxB,mBAAR;AACP;;AACD,oBAAGiG,EAAE,CAAC3G,QAAH,CAAY+G,OAAZ,KAAwB9H,SAA3B,EAAqC;AACjC,sBAAIc,GAAG,GAAGlB,MAAM,CAAC8H,EAAE,CAAC3G,QAAH,CAAY+G,OAAZ,CAAoBlG,MAArB,CAAhB;;AAGA,sBAAId,GAAG,IAAI,WAAX,EAAwB;AACpB0G,oBAAAA,KAAK,GAAG;AAAEzH,sBAAAA,EAAE,EAAE2H,EAAE,CAAC9F,MAAT;AAAiBwE,sBAAAA,OAAO,eAAatF,GAAG,CAACW,KAAjB;AAAxB,qBAAR;AACH;;AACD,sBAAIiG,EAAE,CAAC3G,QAAH,CAAY+G,OAAZ,CAAoBnI,KAApB,KAA8BmB,GAAlC,EACI0G,KAAK,GAAG;AAAEzH,oBAAAA,EAAE,EAAE2H,EAAE,CAAC9F,MAAT;AAAiBwE,oBAAAA,OAAO,eAAasB,EAAE,CAACjG,KAAhB,0BAA0CiG,EAAE,CAAC3G,QAAH,CAAY+G,OAAZ,CAAoBC,IAA9D,YAAyEL,EAAE,CAAC3G,QAAH,CAAY+G,OAAZ,CAAoBrG;AAArH,mBAAR;AACP;;AAED,oBAAGiG,EAAE,CAAC3G,QAAH,CAAYiH,OAAZ,KAAwBhI,SAA3B,EAAqC,CAGpC;;AACD,oBAAI0H,EAAE,CAAC3G,QAAH,CAAYkH,GAAZ,KAAoBjI,SAAxB,EAAmC;AAC/B,sBAAIL,KAAK,CAACqE,MAAN,GAAe0D,EAAE,CAAC3G,QAAH,CAAYkH,GAA/B,EACIT,KAAK,GAAG;AAAEzH,oBAAAA,EAAE,EAAE2H,EAAE,CAAC9F,MAAT;AAAiBwE,oBAAAA,OAAO,eAAasB,EAAE,CAACjG,KAAhB,+BAA4CiG,EAAE,CAAC3G,QAAH,CAAYkH,GAAxD;AAAxB,mBAAR;AACP;;AAED,oBAAIP,EAAE,CAAC3G,QAAH,CAAYmH,GAAZ,KAAoBlI,SAAxB,EAAmC;AAC/B,sBAAIL,KAAK,CAACqE,MAAN,GAAe0D,EAAE,CAAC3G,QAAH,CAAYmH,GAA/B,EACIV,KAAK,GAAG;AAAEzH,oBAAAA,EAAE,EAAE2H,EAAE,CAAC9F,MAAT;AAAiBwE,oBAAAA,OAAO,eAAasB,EAAE,CAACjG,KAAhB,4BAA4CiG,EAAE,CAAC3G,QAAH,CAAYmH,GAAxD;AAAxB,mBAAR;AACP;;AAED,oBAAIR,EAAE,CAAC3G,QAAH,CAAYoH,QAAZ,KAAyBnI,SAA7B,EAAwC;AACpC,sBAAIL,KAAK,IAAI,WAAb,EAA0B;AACtB6H,oBAAAA,KAAK,GAAG;AAAEzH,sBAAAA,EAAE,EAAE2H,EAAE,CAAC9F,MAAT;AAAiBwE,sBAAAA,OAAO,eAAasB,EAAE,CAACjG,KAAhB;AAAxB,qBAAR;AACH;;AACD,sBAAI9B,KAAK,CAACqE,MAAN,IAAgB,CAApB,EACIwD,KAAK,GAAG;AAAEzH,oBAAAA,EAAE,EAAE2H,EAAE,CAAC9F,MAAT;AAAiBwE,oBAAAA,OAAO,eAAasB,EAAE,CAACjG,KAAhB;AAAxB,mBAAR;AACP;AACJ;;AACD,kBAAIiG,EAAE,CAACU,eAAH,KAAuBpI,SAA3B,EAAsC;AAClC,oBAAI0H,EAAE,CAACU,eAAH,CAAmBzI,KAAnB,KAA6B,KAAjC,EACI6H,KAAK,GAAG;AAAEzH,kBAAAA,EAAE,EAAE2H,EAAE,CAAC9F,MAAT;AAAiBwE,kBAAAA,OAAO,eAAasB,EAAE,CAACjG,KAAhB;AAAxB,iBAAR;AACP;AACJ;AACJ,WA9CD;AA+CH,SAhDD;AAkDA+F,QAAAA,KAAK,KAAKxH,SAAV,GAAsB,MAAI,CAACN,KAAL,CAAW/B,WAAX,CAAuB;AAAEmF,UAAAA,IAAI,EAAE,IAAR;AAAcsD,UAAAA,OAAO,EAAEoB,KAAK,CAACpB;AAA7B,SAAvB,CAAtB,GAAuF,EAAvF;AAEA,eAAOoB,KAAK,KAAKxH,SAAV,GAAsB,IAAtB,GAA6B,KAApC;AACH,OAvDD;;AAwDA,UAAMuC,SAAS,GAAG,KAAlB;AACA,UAAM8F,KAAK,GAAI,KAAKnE,KAAL,CAAWG,IAAX,KAAoBrE,SAApB,IAAiC,KAAKkE,KAAL,CAAWG,IAAX,CAAgBtE,EAAhB,KAAuBC,SAAzD,GAAsE,EAAtE,GAA2E,CACrF;AACIsI,QAAAA,KAAK,EAAE,eADX;AAEIlE,QAAAA,MAAM,EAAE,CACJ;AACIxC,UAAAA,MAAM,EAAE,QADZ;AACsBH,UAAAA,KAAK,EAAE,OAD7B;AACsC8D,UAAAA,IAAI,EAAE,UAD5C;AACwD5F,UAAAA,KAAK,EAAE,KAAKuE,KAAL,CAAWG,IAAX,CAAgB,QAAhB,KAA6B,CAA7B,GAAiC,IAAjC,GAAwC,KADvG;AAC8GnD,UAAAA,QAAQ,EAAE,KADxH;AAEIqC,UAAAA,aAAa,EAAE,KAAKW,KAAL,CAAWG,IAAX,CAAgB,QAAhB,IAA4B,KAAKH,KAAL,CAAWG,IAAX,CAAgB,QAAhB,EAA0Bd,aAA1B,IAA2C,IAA3C,GAAkD,GAAlD,GAAwD,KAAKW,KAAL,CAAWG,IAAX,CAAgB,QAAhB,EAA0Bd,aAA9G,GAA8H,EAFjJ;AAGIhB,UAAAA,SAAS,EAAE;AAHf,SADI,EAMJ;AACIX,UAAAA,MAAM,EAAE,iBADZ;AAC+BH,UAAAA,KAAK,EAAE,iBADtC;AACyD8D,UAAAA,IAAI,EAAE,QAD/D;AAEIzD,UAAAA,IAAI,EAAE,IAFV;AAGIrB,UAAAA,UAAU,EAAE,MAHhB;AAIIb,UAAAA,MAAM,EAAE,KAAKsE,KAAL,CAAWsB,aAJvB;AAKIzE,UAAAA,QAAQ,EAAE;AAAEoH,YAAAA,QAAQ,EAAE;AAAZ,WALd;AAMIxI,UAAAA,KAAK,EAAE,KAAKuE,KAAL,CAAWG,IAAX,CAAgB,iBAAhB,CANX;AAQI9B,UAAAA,SAAS,EAATA;AARJ,SANI,EAgBJ;AACIX,UAAAA,MAAM,EAAE,WADZ;AAEIH,UAAAA,KAAK,EAAE,QAFX;AAGI8D,UAAAA,IAAI,EAAE,QAHV;AAIIzD,UAAAA,IAAI,EAAE,IAJV;AAKIrB,UAAAA,UAAU,EAAE,cALhB;AAMId,UAAAA,KAAK,EAAC,KAAKuE,KAAL,CAAWG,IAAX,CAAgB,MAAhB,CANV;AAOIlC,UAAAA,MAAM,EAAE,KAAK+B,KAAL,CAAWG,IAAX,CAAgB,WAAhB,CAPZ;AAQIzE,UAAAA,MAAM,EAAE,KAAKsE,KAAL,CAAWO,SARvB;AASIlC,UAAAA,SAAS,EAAE,KATf;AAUIgG,UAAAA,SAAS,EAAErG,gBAVf;AAWII,UAAAA,OAAO,EAAE,iBAAOvC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDACkB/B,eAAe,CAAC,EAAD,EAAI+B,EAAJ,CADjC;;AAAA;AACDyI,oBAAAA,UADC;AAEDpE,oBAAAA,MAFC,GAEQ,MAAI,CAACF,KAAL,CAAWE,MAFnB;AAGLwB,oBAAAA,MAAM,CAACC,OAAP,CAAe2C,UAAU,CAAC1C,SAA1B,EACK/D,GADL,CACS,iBAAgB;AAAA;AAAA,0BAAdgE,GAAc;AAAA,0BAATjF,GAAS;;AACjBsD,sBAAAA,MAAM,CAAC2B,GAAD,CAAN,GAAcjF,GAAd;AACP,qBAHD;AAIA8E,oBAAAA,MAAM,CAACC,OAAP,CAAe2C,UAAU,CAACxC,QAA1B,EACKjE,GADL,CACS,iBAAgB;AAAA;AAAA,0BAAdgE,GAAc;AAAA,0BAATjF,GAAS;;AACjBsD,sBAAAA,MAAM,CAAC2B,GAAD,CAAN,GAAcjF,GAAd;AACP,qBAHD;AAIA8E,oBAAAA,MAAM,CAACC,OAAP,CAAe2C,UAAU,CAACvC,SAA1B,EACKlE,GADL,CACS,kBAAgB;AAAA;AAAA,0BAAdgE,GAAc;AAAA,0BAATjF,GAAS;;AACjBsD,sBAAAA,MAAM,CAAC2B,GAAD,CAAN,GAAcjF,GAAd;AACP,qBAHD;;AAKA,oBAAA,MAAI,CAAC2E,QAAL,iCAAkB,MAAI,CAACvB,KAAvB;AAA8BE,sBAAAA,MAAM,EAANA;AAA9B;;AACA7D,oBAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAAC0D,KAAL,CAAWE,MAAvB;;AAjBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXb,SAhBI,EAgDJ;AAAExC,UAAAA,MAAM,EAAE,MAAV;AAAkBH,UAAAA,KAAK,EAAE,MAAzB;AAAiC8D,UAAAA,IAAI,EAAE,MAAvC;AAA+C5F,UAAAA,KAAK,EAAE,KAAKuE,KAAL,CAAWG,IAAX,CAAgB,MAAhB,CAAtD;AAA+EoE,UAAAA,IAAI,EAAElK,SAArF;AAAgGwC,UAAAA,QAAQ,EAAE;AAAEmH,YAAAA,GAAG,EAAE,EAAP;AAAWN,YAAAA,MAAM,EAAE,IAAnB;AAAyBO,YAAAA,QAAQ,EAAE;AAAnC,WAA1G;AAAqJC,UAAAA,eAAe,EAAEhK,UAAtK;AAAkLmE,UAAAA,SAAS,EAAE,KAA7L;AAAoME,UAAAA,UAAU,EAAE;AAAhN,SAhDI,EAiDJ;AAAEb,UAAAA,MAAM,EAAE,cAAV;AAA0BH,UAAAA,KAAK,EAAE,cAAjC;AAAiD8D,UAAAA,IAAI,EAAE,MAAvD;AAA+D5F,UAAAA,KAAK,EAAE,KAAKuE,KAAL,CAAWG,IAAX,CAAgB,cAAhB,CAAtE;AAAuGtD,UAAAA,QAAQ,EAAE;AAAEkH,YAAAA,GAAG,EAAE,EAAP;AAAWE,YAAAA,QAAQ,EAAE;AAArB,WAAjH;AAA8I5F,UAAAA,SAAS,EAAE;AAAzJ,SAjDI,EAkDJ;AAAEX,UAAAA,MAAM,EAAE,cAAV;AAA0BH,UAAAA,KAAK,EAAE,eAAjC;AAAkD8D,UAAAA,IAAI,EAAE,MAAxD;AAAgE5F,UAAAA,KAAK,EAAE,KAAKuE,KAAL,CAAWG,IAAX,CAAgB,cAAhB,CAAvE;AAAwGtD,UAAAA,QAAQ,EAAE;AAAEkH,YAAAA,GAAG,EAAE,EAAP;AAAWE,YAAAA,QAAQ,EAAE;AAArB,WAAlH;AAA+I5F,UAAAA,SAAS,EAAE;AAA1J,SAlDI,EAmDJ;AAAEX,UAAAA,MAAM,EAAE,YAAV;AAAwBH,UAAAA,KAAK,EAAE,WAA/B;AAA4C8D,UAAAA,IAAI,EAAE,MAAlD;AAA0DmD,UAAAA,IAAI,EAAE,KAAKxE,KAAL,CAAWG,IAAX,CAAgB,YAAhB,IAAgC,KAAKH,KAAL,CAAWG,IAAX,CAAgB,YAAhB,EAA8BlD,IAA9D,GAAqE,EAArI;AAAyIoB,UAAAA,SAAS,EAATA;AAAzI,SAnDI,EAoDJ;AAAEX,UAAAA,MAAM,EAAE,WAAV;AAAuBH,UAAAA,KAAK,EAAE,YAA9B;AAA4C8D,UAAAA,IAAI,EAAE,MAAlD;AAA0DmD,UAAAA,IAAI,EAAE,KAAKxE,KAAL,CAAWG,IAAX,CAAgB,WAAhB,IAA+B,KAAKH,KAAL,CAAWG,IAAX,CAAgB,WAAhB,EAA6BlD,IAA5D,GAAmE,EAAnI;AAAuIJ,UAAAA,QAAQ,EAAE;AAAEoH,YAAAA,QAAQ,EAAE;AAAZ,WAAjJ;AAAqK5F,UAAAA,SAAS,EAATA;AAArK,SApDI;AAFZ,OADqF,EA2DrF;AACIxC,QAAAA,EAAE,EAAE,MADR;AAEIuI,QAAAA,KAAK,EAAE,UAFX;AAKIlE,QAAAA,MAAM,EAAE,CACJ;AAAExC,UAAAA,MAAM,EAAE,YAAV;AAAwBH,UAAAA,KAAK,EAAE,eAA/B;AAAgDP,UAAAA,QAAQ,EAAG,KAAKgD,KAAL,CAAWE,MAAX,CAAkB,MAAlB,KAA6B,CAAxF;AAA4FmB,UAAAA,IAAI,EAAE,UAAlG;AAA8GxE,UAAAA,QAAQ,EAAC;AAAC+G,YAAAA,OAAO,EAAC;AAACrG,cAAAA,KAAK,EAAE,MAAR;AAAgB9B,cAAAA,KAAK,EAAE,CAAvB;AAA0BiC,cAAAA,MAAM,EAAE,MAAlC;AAA0CmG,cAAAA,IAAI,EAAE;AAAhD;AAAT,WAAvH;AAA6LxF,UAAAA,SAAS,EAAE,MAAxM;AAAgN5C,UAAAA,KAAK,EAAE,KAAKuE,KAAL,CAAWG,IAAX,CAAgBsE;AAAvO,SADI,EAEJ;AAAE/G,UAAAA,MAAM,EAAE,SAAV;AAAqBH,UAAAA,KAAK,EAAE,KAA5B;AAAmC8D,UAAAA,IAAI,EAAE,MAAzC;AAAiDrE,UAAAA,QAAQ,EAAG,KAAKgD,KAAL,CAAWE,MAAX,CAAkB,YAAlB,KAAmC,CAA/F;AAAmGqE,UAAAA,IAAI,EAAEnK,QAAzG;AAAmHyC,UAAAA,QAAQ,EAAE;AAAEkH,YAAAA,GAAG,EAAE,CAAP;AAAUE,YAAAA,QAAQ,EAAE;AAApB,WAA7H;AAAyJ5F,UAAAA,SAAS,EAAE,IAApK;AAA0K5C,UAAAA,KAAK,EAAG,KAAKuE,KAAL,CAAWE,MAAX,CAAkB,MAAlB,KAA6B,CAA7B,IAAkC,KAAKF,KAAL,CAAWE,MAAX,CAAkB,YAAlB,KAAmC,CAArE,IAA0E,KAAKF,KAAL,CAAWE,MAAX,CAAkB,SAAlB,MAAiC,MAAK,IAAL,IAAapE,SAA9C,CAA3E,GAAuI,KAAKkE,KAAL,CAAWE,MAAX,CAAkB,SAAlB,CAAvI,GAAsK,KAAKF,KAAL,CAAWG,IAAX,CAAgB,WAAhB,EAA6BuE;AAApX,SAFI,EAGJ;AAAEhH,UAAAA,MAAM,EAAE,QAAV;AAAoBH,UAAAA,KAAK,EAAE,UAA3B;AAAuCP,UAAAA,QAAQ,EAAG,KAAKgD,KAAL,CAAWE,MAAX,CAAkB,YAAlB,KAAmC,CAArF;AAAwFrD,UAAAA,QAAQ,EAAE;AAAEkH,YAAAA,GAAG,EAAE,GAAP;AAAYE,YAAAA,QAAQ,EAAE;AAAtB,WAAlG;AAAgI5C,UAAAA,IAAI,EAAE,MAAtI;AAA8IhD,UAAAA,SAAS,EAATA,SAA9I;AAAyJ5C,UAAAA,KAAK,EAAG,KAAKuE,KAAL,CAAWE,MAAX,CAAkB,MAAlB,KAA6B,CAA7B,IAAkC,KAAKF,KAAL,CAAWE,MAAX,CAAkB,YAAlB,KAAmC,CAArE,IAA0E,KAAKF,KAAL,CAAWE,MAAX,CAAkB,QAAlB,MAAgC,MAAK,IAAL,IAAapE,SAA7C,CAA3E,GAAsI,KAAKkE,KAAL,CAAWE,MAAX,CAAkB,QAAlB,CAAtI,GAAoK,KAAKF,KAAL,CAAWG,IAAX,CAAgB,WAAhB,EAA6BwE;AAAjW,SAHI,EAIJ;AAAEjH,UAAAA,MAAM,EAAE,YAAV;AAAwBH,UAAAA,KAAK,EAAE,aAA/B;AAA8CP,UAAAA,QAAQ,EAAG,KAAKgD,KAAL,CAAWE,MAAX,CAAkB,YAAlB,KAAmC,CAA5F;AAAgGrD,UAAAA,QAAQ,EAAE;AAACkH,YAAAA,GAAG,EAAE;AAAN,WAA1G;AAAqH1C,UAAAA,IAAI,EAAE,MAA3H;AAAmIhD,UAAAA,SAAS,EAATA,SAAnI;AAA8I5C,UAAAA,KAAK,EAAG,KAAKuE,KAAL,CAAWE,MAAX,CAAkB,MAAlB,KAA6B,CAA7B,IAAkC,KAAKF,KAAL,CAAWE,MAAX,CAAkB,YAAlB,KAAmC,CAArE,IAA0E,KAAKF,KAAL,CAAWE,MAAX,CAAkB,YAAlB,MAAoC,MAAK,IAAL,IAAapE,SAAjD,CAA3E,GAA0I,KAAKkE,KAAL,CAAWE,MAAX,CAAkB,YAAlB,CAA1I,GAA6K,KAAKF,KAAL,CAAWG,IAAX,CAAgB,WAAhB,EAA6ByE,UAA7B,IAA2C,MAA3C,GAAoD,KAAK5E,KAAL,CAAWG,IAAX,CAAgB,WAAhB,EAA6ByE,UAAjF,GAA8F;AAAha,SAJI,EAKJ;AACIlH,UAAAA,MAAM,EAAE,IADZ;AACkBH,UAAAA,KAAK,EAAE,QADzB;AACmC8D,UAAAA,IAAI,EAAE,QADzC;AAEIgD,UAAAA,SAAS,EAAE7G,YAFf;AAE6BR,UAAAA,QAAQ,EAAG,KAAKgD,KAAL,CAAWE,MAAX,CAAkB,YAAlB,KAAmC,CAF3E;AAGIxE,UAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,SAAT,EAAoB,UAApB,EAAgC,OAAhC,EAAyC,OAAzC,EAAkD,OAAlD,EAA2D,UAA3D,EAAuE,gBAAvE,EAAyF,OAAzF,EAAkG,UAAlG,EAA8G,cAA9G,EAA8H,oBAA9H,EAAoJ,aAApJ,EAAmK,MAAnK,EAA2K,SAA3K,EAAsL,YAAtL,EAAoM,OAApM,EAA6M,QAA7M,EAAuN,gBAAvN,EAAyO,qBAAzO,EAAgQ,UAAhQ,EAA4Q,SAA5Q,EAAuR,mBAAvR,EAA4S,gBAA5S,EAA8T,SAA9T,EAAyU,WAAzU,EAAsV,WAAtV,CAHZ;AAIID,UAAAA,KAAK,EAAG,KAAKuE,KAAL,CAAWE,MAAX,CAAkB,MAAlB,KAA6B,CAA7B,IAAkC,KAAKF,KAAL,CAAWE,MAAX,CAAkB,YAAlB,KAAmC,CAArE,IAA2E,KAAKF,KAAL,CAAWE,MAAX,CAAkB,IAAlB,MAA4B,MAAK,IAAL,IAAapE,SAAzC,CAA5E,GAAmI,KAAKkE,KAAL,CAAWE,MAAX,CAAkB,IAAlB,CAAnI,GAA6J,KAAKF,KAAL,CAAWG,IAAX,CAAgB,WAAhB,EAA6B0E,EAJrM;AAIyMxG,UAAAA,SAAS,EAATA,SAJzM;AAIoNyG,UAAAA,QAAQ,EAAE,CAJ9N;AAIiOzH,UAAAA,KAAK,EAAE;AAAE0H,YAAAA,QAAQ,EAAE;AAAZ;AAJxO,SALI,EAWJ;AAAErH,UAAAA,MAAM,EAAE,MAAV;AAAkBH,UAAAA,KAAK,EAAE,QAAzB;AAAmC8D,UAAAA,IAAI,EAAE,MAAzC;AAAiDrE,UAAAA,QAAQ,EAAG,KAAKgD,KAAL,CAAWE,MAAX,CAAkB,YAAlB,KAAmC,CAA/F;AAAmGrD,UAAAA,QAAQ,EAAE;AAAEkH,YAAAA,GAAG,EAAE,GAAP;AAAYE,YAAAA,QAAQ,EAAE;AAAtB,WAA7G;AAA2I5F,UAAAA,SAAS,EAATA,SAA3I;AAAsJ5C,UAAAA,KAAK,EAAG,KAAKuE,KAAL,CAAWE,MAAX,CAAkB,MAAlB,KAA6B,CAA7B,IAAkC,KAAKF,KAAL,CAAWE,MAAX,CAAkB,YAAlB,KAAmC,CAArE,IAA0E,KAAKF,KAAL,CAAWE,MAAX,CAAkB,MAAlB,MAA8B,MAAK,IAAL,IAAapE,SAA3C,CAA3E,GAAoI,KAAKkE,KAAL,CAAWE,MAAX,CAAkB,MAAlB,CAApI,GAAgK,KAAKF,KAAL,CAAWG,IAAX,CAAgB,WAAhB,EAA6B6E;AAA1V,SAXI;AALZ,OA3DqF,EA8ErF;AACIZ,QAAAA,KAAK,EAAE,SADX;AAGIlE,QAAAA,MAAM,EAAE,CACJ;AAAExC,UAAAA,MAAM,EAAE,eAAV;AAA2BH,UAAAA,KAAK,EAAE,eAAlC;AAAmDP,UAAAA,QAAQ,EAAG,KAAKgD,KAAL,CAAWE,MAAX,CAAkB,MAAlB,KAA6B,CAA7B,GAAiC,IAAjC,GAAwC,KAAtG;AAA8GmB,UAAAA,IAAI,EAAE,UAApH;AAAgIxE,UAAAA,QAAQ,EAAC;AAAC+G,YAAAA,OAAO,EAAC;AAACrG,cAAAA,KAAK,EAAE,MAAR;AAAgB9B,cAAAA,KAAK,EAAE,CAAvB;AAA0BiC,cAAAA,MAAM,EAAE,MAAlC;AAA0CmG,cAAAA,IAAI,EAAE;AAAhD;AAAT,WAAzI;AAA8MxF,UAAAA,SAAS,EAAE,MAAzN;AAAiO5C,UAAAA,KAAK,EAAE,KAAKuE,KAAL,CAAWG,IAAX,CAAgB8E;AAAxP,SADI,EAEJ;AAAEvH,UAAAA,MAAM,EAAE,QAAV;AAAoBH,UAAAA,KAAK,EAAE,SAA3B;AAAsC8D,UAAAA,IAAI,EAAE,MAA5C;AAAoDrE,UAAAA,QAAQ,EAAG,KAAKgD,KAAL,CAAWE,MAAX,CAAkB,eAAlB,KAAsC,CAArG;AAAyGqE,UAAAA,IAAI,EAAEjK,UAA/G;AAA2HuC,UAAAA,QAAQ,EAAE;AAAEkH,YAAAA,GAAG,EAAE,EAAP;AAAWE,YAAAA,QAAQ,EAAE;AAArB,WAArI;AAAkK5F,UAAAA,SAAS,EAATA,SAAlK;AAA6K5C,UAAAA,KAAK,EAAG,KAAKuE,KAAL,CAAWE,MAAX,CAAkB,MAAlB,KAA6B,CAA7B,IAAkC,KAAKF,KAAL,CAAWE,MAAX,CAAkB,eAAlB,KAAsC,CAAxE,IAA6E,KAAKF,KAAL,CAAWE,MAAX,CAAkB,QAAlB,MAAgC,MAAK,IAAL,IAAapE,SAA7C,CAA9E,GAAyI,KAAKkE,KAAL,CAAWE,MAAX,CAAkB,QAAlB,CAAzI,GAAuK,KAAKF,KAAL,CAAWG,IAAX,CAAgB,UAAhB,EAA4B+E;AAAvX,SAFI,EAGJ;AAAExH,UAAAA,MAAM,EAAE,QAAV;AAAoBH,UAAAA,KAAK,EAAE,qBAA3B;AAAkD8D,UAAAA,IAAI,EAAE,MAAxD;AAAgErE,UAAAA,QAAQ,EAAG,KAAKgD,KAAL,CAAWE,MAAX,CAAkB,eAAlB,KAAsC,CAAjH;AAAqHqE,UAAAA,IAAI,EAAEjK,UAA3H;AAAuIuC,UAAAA,QAAQ,EAAE;AAAEkH,YAAAA,GAAG,EAAE;AAAP,WAAjJ;AAA8J1F,UAAAA,SAAS,EAATA,SAA9J;AAAyK5C,UAAAA,KAAK,EAAG,KAAKuE,KAAL,CAAWE,MAAX,CAAkB,MAAlB,KAA6B,CAA7B,IAAkC,KAAKF,KAAL,CAAWE,MAAX,CAAkB,eAAlB,KAAsC,CAAxE,IAA6E,KAAKF,KAAL,CAAWE,MAAX,CAAkB,QAAlB,MAAgC,MAAK,IAAL,IAAapE,SAA7C,CAA9E,GAAyI,KAAKkE,KAAL,CAAWE,MAAX,CAAkB,QAAlB,CAAzI,GAAuK,KAAKF,KAAL,CAAWG,IAAX,CAAgB,UAAhB,EAA4BgF;AAAnX,SAHI,EAIJ;AAAEzH,UAAAA,MAAM,EAAE,OAAV;AAAmBH,UAAAA,KAAK,EAAE,QAA1B;AAAoC8D,UAAAA,IAAI,EAAE,OAA1C;AAAmDrE,UAAAA,QAAQ,EAAG,KAAKgD,KAAL,CAAWE,MAAX,CAAkB,eAAlB,KAAsC,CAApG;AAAwGrD,UAAAA,QAAQ,EAAE;AAAEkH,YAAAA,GAAG,EAAE;AAAP,WAAlH;AAAgIG,UAAAA,eAAe,EAAEjK,WAAjJ;AAA8JoE,UAAAA,SAAS,EAATA,SAA9J;AAAyK5C,UAAAA,KAAK,EAAG,KAAKuE,KAAL,CAAWE,MAAX,CAAkB,MAAlB,KAA6B,CAA7B,IAAkC,KAAKF,KAAL,CAAWE,MAAX,CAAkB,eAAlB,KAAsC,CAAxE,IAA6E,KAAKF,KAAL,CAAWE,MAAX,CAAkB,OAAlB,MAA+B,MAAK,IAAL,IAAapE,SAA5C,CAA9E,GAAwI,KAAKkE,KAAL,CAAWE,MAAX,CAAkB,OAAlB,CAAxI,GAAqK,KAAKF,KAAL,CAAWG,IAAX,CAAgB,UAAhB,EAA4BiF;AAAjX,SAJI,EAKJ;AAAE1H,UAAAA,MAAM,EAAE,MAAV;AAAkBH,UAAAA,KAAK,EAAE,MAAzB;AAAiC8D,UAAAA,IAAI,EAAE,MAAvC;AAA+CrE,UAAAA,QAAQ,EAAG,KAAKgD,KAAL,CAAWE,MAAX,CAAkB,eAAlB,KAAsC,CAAhG;AAAoGrD,UAAAA,QAAQ,EAAE;AAAEkH,YAAAA,GAAG,EAAE;AAAP,WAA9G;AAA4H1F,UAAAA,SAAS,EAAE,KAAvI;AAA8I5C,UAAAA,KAAK,EAAG,KAAKuE,KAAL,CAAWE,MAAX,CAAkB,MAAlB,KAA6B,CAA7B,IAAkC,KAAKF,KAAL,CAAWE,MAAX,CAAkB,eAAlB,KAAsC,CAAxE,IAA6E,KAAKF,KAAL,CAAWE,MAAX,CAAkB,MAAlB,MAA8B,MAAK,IAAL,IAAapE,SAA3C,CAA9E,GAAuI,KAAKkE,KAAL,CAAWE,MAAX,CAAkB,MAAlB,CAAvI,GAAoK,KAAKF,KAAL,CAAWG,IAAX,CAAgB,UAAhB,EAA4BkF,IAA5B,IAAoC,MAApC,GAA6C,EAA7C,GAAkD,KAAKrF,KAAL,CAAWG,IAAX,CAAgB,UAAhB,EAA4BkF;AAAvY,SALI;AAHZ,OA9EqF,EAyFrF;AACIjB,QAAAA,KAAK,EAAE,eADX;AAGIlE,QAAAA,MAAM,EAAE,CACJ;AAAExC,UAAAA,MAAM,EAAE,UAAV;AAAsBH,UAAAA,KAAK,EAAE,qBAA7B;AAAoD8D,UAAAA,IAAI,EAAE,MAA1D;AAAkErE,UAAAA,QAAQ,EAAG,KAAKgD,KAAL,CAAWE,MAAX,CAAkB,eAAlB,KAAsC,CAAnH;AAAuHrD,UAAAA,QAAQ,EAAE;AAAEkH,YAAAA,GAAG,EAAE,GAAP;AAAYE,YAAAA,QAAQ,EAAE;AAAtB,WAAjI;AAA+J5F,UAAAA,SAAS,EAATA,SAA/J;AAA0K5C,UAAAA,KAAK,EAAG,KAAKuE,KAAL,CAAWE,MAAX,CAAkB,MAAlB,KAA6B,CAA7B,IAAkC,KAAKF,KAAL,CAAWE,MAAX,CAAkB,eAAlB,KAAsC,CAAxE,IAA6E,KAAKF,KAAL,CAAWE,MAAX,CAAkB,UAAlB,MAAkC,MAAK,IAAL,IAAapE,SAA/C,CAA9E,GAA2I,KAAKkE,KAAL,CAAWE,MAAX,CAAkB,UAAlB,CAA3I,GAA2K,KAAKF,KAAL,CAAWG,IAAX,CAAgB,UAAhB,EAA4BmF;AAAxX,SADI,EAEJ;AAAE5H,UAAAA,MAAM,EAAE,UAAV;AAAsBH,UAAAA,KAAK,EAAE,qBAA7B;AAAoD8D,UAAAA,IAAI,EAAE,MAA1D;AAAkErE,UAAAA,QAAQ,EAAG,KAAKgD,KAAL,CAAWE,MAAX,CAAkB,eAAlB,KAAsC,CAAnH;AAAuHrD,UAAAA,QAAQ,EAAE;AAAEkH,YAAAA,GAAG,EAAE,GAAP;AAAYE,YAAAA,QAAQ,EAAE;AAAtB,WAAjI;AAA+J5F,UAAAA,SAAS,EAATA,SAA/J;AAA0K5C,UAAAA,KAAK,EAAG,KAAKuE,KAAL,CAAWE,MAAX,CAAkB,MAAlB,KAA6B,CAA7B,IAAkC,KAAKF,KAAL,CAAWE,MAAX,CAAkB,eAAlB,KAAsC,CAAxE,IAA6E,KAAKF,KAAL,CAAWE,MAAX,CAAkB,UAAlB,MAAkC,MAAK,IAAL,IAAapE,SAA/C,CAA9E,GAA2I,KAAKkE,KAAL,CAAWE,MAAX,CAAkB,UAAlB,CAA3I,GAA2K,KAAKF,KAAL,CAAWG,IAAX,CAAgB,UAAhB,EAA4BoF;AAAxX,SAFI,EAGJ;AAAE7H,UAAAA,MAAM,EAAE,WAAV;AAAuBH,UAAAA,KAAK,EAAE,sBAA9B;AAAsD8D,UAAAA,IAAI,EAAE,MAA5D;AAAoErE,UAAAA,QAAQ,EAAG,KAAKgD,KAAL,CAAWE,MAAX,CAAkB,eAAlB,KAAsC,CAArH;AAAyHrD,UAAAA,QAAQ,EAAE;AAAEkH,YAAAA,GAAG,EAAE,GAAP;AAAYE,YAAAA,QAAQ,EAAE;AAAtB,WAAnI;AAAiK5F,UAAAA,SAAS,EAATA,SAAjK;AAA4K5C,UAAAA,KAAK,EAAG,KAAKuE,KAAL,CAAWE,MAAX,CAAkB,MAAlB,KAA6B,CAA7B,IAAkC,KAAKF,KAAL,CAAWE,MAAX,CAAkB,eAAlB,KAAsC,CAAxE,IAA6E,KAAKF,KAAL,CAAWE,MAAX,CAAkB,WAAlB,MAAmC,MAAK,IAAL,IAAapE,SAAhD,CAA9E,GAA4I,KAAKkE,KAAL,CAAWE,MAAX,CAAkB,WAAlB,CAA5I,GAA6K,KAAKF,KAAL,CAAWG,IAAX,CAAgB,UAAhB,EAA4BqF;AAA5X,SAHI;AAHZ,OAzFqF,EAkGrF;AACIpB,QAAAA,KAAK,EAAE,gBADX;AAGIlE,QAAAA,MAAM,EAAE,CACJ;AAAExC,UAAAA,MAAM,EAAE,gBAAV;AAA4BH,UAAAA,KAAK,EAAE,eAAnC;AAAoDP,UAAAA,QAAQ,EAAG,KAAKgD,KAAL,CAAWE,MAAX,CAAkB,MAAlB,KAA6B,CAA7B,GAAiC,IAAjC,GAAwC,KAAvG;AAA+GmB,UAAAA,IAAI,EAAE,UAArH;AAAiIxE,UAAAA,QAAQ,EAAC;AAAC+G,YAAAA,OAAO,EAAC;AAACrG,cAAAA,KAAK,EAAE,MAAR;AAAgB9B,cAAAA,KAAK,EAAE,CAAvB;AAA0BiC,cAAAA,MAAM,EAAE,MAAlC;AAA0CmG,cAAAA,IAAI,EAAE;AAAhD;AAAT,WAA1I;AAAgNxF,UAAAA,SAAS,EAAE;AAA3N,SADI,EAEJ;AAAEX,UAAAA,MAAM,EAAE,gBAAV;AAA4BH,UAAAA,KAAK,EAAE,yBAAnC;AAA8D8D,UAAAA,IAAI,EAAE,MAApE;AAA4ErE,UAAAA,QAAQ,EAAG,KAAKgD,KAAL,CAAWE,MAAX,CAAkB,gBAAlB,KAAuC,CAA9H;AAAkIrD,UAAAA,QAAQ,EAAE;AAAEoH,YAAAA,QAAQ,EAAE;AAAZ,WAA5I;AAAgK5F,UAAAA,SAAS,EAAE,KAA3K;AAAkL5C,UAAAA,KAAK,EAAG,KAAKuE,KAAL,CAAWE,MAAX,CAAkB,MAAlB,KAA6B,CAA7B,IAAkC,KAAKF,KAAL,CAAWE,MAAX,CAAkB,gBAAlB,KAAuC,CAAzE,IAA8E,KAAKF,KAAL,CAAWE,MAAX,CAAkB,gBAAlB,MAAwC,MAAK,IAAL,IAAapE,SAArD,CAA/E,GAAkJ,KAAKkE,KAAL,CAAWE,MAAX,CAAkB,gBAAlB,CAAlJ,GAAwL,KAAKF,KAAL,CAAWG,IAAX,CAAgB,WAAhB,EAA6BsF;AAA9Y,SAFI,EAGJ;AAAE/H,UAAAA,MAAM,EAAE,UAAV;AAAsBH,UAAAA,KAAK,EAAE,sBAA7B;AAAqD8D,UAAAA,IAAI,EAAE,MAA3D;AAAmErE,UAAAA,QAAQ,EAAG,KAAKgD,KAAL,CAAWE,MAAX,CAAkB,gBAAlB,KAAuC,CAArH;AAAyHrD,UAAAA,QAAQ,EAAE;AAAEoH,YAAAA,QAAQ,EAAE;AAAZ,WAAnI;AAAuJ5F,UAAAA,SAAS,EAAE,KAAlK;AAAyK5C,UAAAA,KAAK,EAAG,KAAKuE,KAAL,CAAWE,MAAX,CAAkB,MAAlB,KAA6B,CAA7B,IAAkC,KAAKF,KAAL,CAAWE,MAAX,CAAkB,gBAAlB,KAAuC,CAAzE,IAA8E,KAAKF,KAAL,CAAWE,MAAX,CAAkB,UAAlB,MAAkC,MAAK,IAAL,IAAapE,SAA/C,CAA/E,GAA4I,KAAKkE,KAAL,CAAWE,MAAX,CAAkB,UAAlB,CAA5I,GAA2K,KAAKF,KAAL,CAAWG,IAAX,CAAgB,WAAhB,EAA6BuF;AAAxX,SAHI,EAIJ;AACIhI,UAAAA,MAAM,EAAE,gBADZ;AAEIH,UAAAA,KAAK,EAAE,UAFX;AAGI8D,UAAAA,IAAI,EAAE,cAHV;AAIIxE,UAAAA,QAAQ,EAAC;AAACoH,YAAAA,QAAQ,EAAE;AAAX,WAJb;AAKIxI,UAAAA,KAAK,EAAG,KAAKuE,KAAL,CAAWE,MAAX,CAAkB,MAAlB,KAA6B,CAA7B,IAAkC,KAAKF,KAAL,CAAWE,MAAX,CAAkB,gBAAlB,KAAuC,CAAzE,IAA8E,KAAKF,KAAL,CAAWE,MAAX,CAAkB,iBAAlB,MAAyC,MAAK,IAAL,IAAapE,SAAtD,CAA/E,GAAmJ,KAAKkE,KAAL,CAAWE,MAAX,CAAkB,iBAAlB,CAAnJ,GAA0L,KAAKF,KAAL,CAAWG,IAAX,CAAgB,WAAhB,EAA6BwF,eALlO;AAMI/H,UAAAA,IAAI,EAAE,IANV;AAOIrB,UAAAA,UAAU,EAAE,MAPhB;AAQIb,UAAAA,MAAM,EAAE,KAAKsE,KAAL,CAAWK,YARvB;AASIhC,UAAAA,SAAS,EAAE,KATf;AASsBrB,UAAAA,QAAQ,EAAG,KAAKgD,KAAL,CAAWE,MAAX,CAAkB,gBAAlB,KAAuC;AATxE,SAJI,EAeJ;AAAExC,UAAAA,MAAM,EAAE,MAAV;AAAkBH,UAAAA,KAAK,EAAE,gBAAzB;AAA2C8D,UAAAA,IAAI,EAAE,SAAjD;AAA4DrE,UAAAA,QAAQ,EAAG,KAAKgD,KAAL,CAAWE,MAAX,CAAkB,gBAAlB,KAAuC,CAA9G;AAAkHrD,UAAAA,QAAQ,EAAE;AAAEoH,YAAAA,QAAQ,EAAE,IAAZ;AAAkBH,YAAAA,OAAO,EAAE;AAA3B,WAA5H;AAA+JzF,UAAAA,SAAS,EAAE,KAA1K;AAAiL5C,UAAAA,KAAK,EAAG,KAAKuE,KAAL,CAAWE,MAAX,CAAkB,MAAlB,KAA6B,CAA7B,IAAkC,KAAKF,KAAL,CAAWE,MAAX,CAAkB,gBAAlB,KAAuC,CAAzE,IAA8E,KAAKF,KAAL,CAAWE,MAAX,CAAkB,MAAlB,MAA8B,MAAK,IAAL,IAAapE,SAA3C,CAA/E,GAAwI6D,UAAU,CAACJ,QAAQ,CAAC,KAAKS,KAAL,CAAWE,MAAX,CAAkB,MAAlB,CAAD,CAAT,CAAlJ,GAA0LP,UAAU,CAACJ,QAAQ,CAAC,KAAKS,KAAL,CAAWG,IAAX,CAAgB,WAAhB,EAA6BiC,IAA9B,CAAT;AAA5X,SAfI;AAHZ,OAlGqF,CAAzF;AAwHA,UAAMwD,IAAI,GAAK,KAAK5F,KAAL,CAAWW,YAAX,KAA4B7E,SAA7B,GAA0C,KAAKkE,KAAL,CAAWW,YAArD,GAAoE,EAAlF;AACA,UAAMkF,OAAO,GAAG,CACZ;AACI1C,QAAAA,KAAK,EAAE,KADX;AACkB2C,QAAAA,UAAU,EAAE,KAD9B;AACqCC,QAAAA,IAAI,EAAE,GAD3C;AAEIC,QAAAA,cAAc,EAAE,wBAAC1I,MAAD,EAAkC;AAC9C,iBAAOA,MAAM,CAAC7B,KAAP,GAAelB,SAAS,CAAC+C,MAAM,CAAC7B,KAAR,CAAxB,GAAyC,EAAhD;AACH;AAJL,OADY,EAOZ;AAAE0H,QAAAA,KAAK,EAAE,MAAT;AAAiB2C,QAAAA,UAAU,EAAE,MAA7B;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAPY,EAQZ;AAAE5C,QAAAA,KAAK,EAAE,UAAT;AAAqB2C,QAAAA,UAAU,EAAE,QAAjC;AAA2CC,QAAAA,IAAI,EAAE;AAAjD,OARY,EASZ;AACI5C,QAAAA,KAAK,EAAE,QADX;AAEI2C,QAAAA,UAAU,EAAE,UAFhB;AAGIC,QAAAA,IAAI,EAAE,GAHV;AAIIC,QAAAA,cAAc,EAAE,wBAAC1I,MAAD,EAAkC;AAC9C,iBAAOA,MAAM,CAAC7B,KAAP,KAAiB,CAAjB,GAAqB,OAArB,GAA+B,SAAtC;AACH;AANL,OATY,EAgBT;AACC0H,QAAAA,KAAK,EAAE,IADR;AAEC2C,QAAAA,UAAU,EAAE,OAFb;AAGCC,QAAAA,IAAI,EAAE,CAHP;AAICE,QAAAA,UAAU,EAAE,oBAAC3I,MAAD,EAA+B4I,GAA/B,EAAoD;AAE5D,iBACI,iCACI,oBAAC,MAAD;AACI,YAAA,OAAO,EAAC,WADZ;AAEI,YAAA,KAAK,EAAC,SAFV;AAGI,YAAA,IAAI,EAAC,OAHT;AAII,YAAA,OAAO,EAAE,kBAAOzJ,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEGkE,sBAAAA,YAFH,GAEkB,MAAI,CAACX,KAAL,CAAWW,YAF7B;AAGGwF,sBAAAA,SAHH,GAGexF,YAAY,CAAChF,IAAb,CAAkB,UAAA6F,CAAC;AAAA,+BAAIA,CAAC,CAAC3F,EAAF,IAAQyB,MAAM,CAAC4I,GAAP,CAAWrK,EAAvB;AAAA,uBAAnB,CAHf;AAIGuK,sBAAAA,KAJH,GAIWzF,YAAY,CAAC0F,SAAb,CAAuB,UAAA7E,CAAC;AAAA,+BAAIA,CAAC,CAAC3F,EAAF,IAAQyB,MAAM,CAAC4I,GAAP,CAAWrK,EAAvB;AAAA,uBAAxB,CAJX;AAAA;AAAA,uDAKK/B,eAAe,CAAC,EAAD,EAAK,MAAI,CAAC0B,KAAL,CAAW4F,KAAX,CAAiB9D,MAAjB,CAAwBzB,EAA7B,CALpB;;AAAA;AAMD,sBAAA,MAAI,CAAC0F,QAAL,iCAAkB,MAAI,CAACvB,KAAvB;AAA8BW,wBAAAA,YAAY,EAAE7E;AAA5C;;AACA6E,sBAAAA,YAAY,CAAC2F,MAAb,CAAoBF,KAApB,EAA0B,CAA1B;AACIxF,sBAAAA,mBARH,GAQyB,MAAI,CAACZ,KAAL,CAAWY,mBARpC;AASDA,sBAAAA,mBAAmB,CAAC2F,IAApB,CAAyBJ,SAAzB;;AACA,sBAAA,MAAI,CAAC5E,QAAL,iCAAkB,MAAI,CAACvB,KAAvB;AAA8BW,wBAAAA,YAAY,EAAZA,YAA9B;AAA4CC,wBAAAA,mBAAmB,EAAnBA;AAA5C;;AAVC;AAAA;;AAAA;AAAA;AAAA;AAqBDvE,sBAAAA,OAAO,CAACC,GAAR;;AArBC;AAsBJ;;AAtBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJb;AA6BI,YAAA,KAAK,EAAE;AAAEkK,cAAAA,UAAU,EAAE;AAAd;AA7BX,aA+BG,oBAAC,iBAAD;AAAmB,YAAA,QAAQ,EAAC;AAA5B,YA/BH,CADJ,CADJ;AAqCH;AA3CF,OAhBS,CAAhB;AAiEA,UAAMC,QAAQ,GAAI,KAAKzG,KAAL,CAAWU,aAAX,KAA6B5E,SAA9B,GAA2C,KAAKkE,KAAL,CAAWU,aAAtD,GAAsE,EAAvF;AACA,UAAMgG,WAAW,GAAG,CAChB;AACIvD,QAAAA,KAAK,EAAE,cADX;AAC2B2C,QAAAA,UAAU,EAAE,UADvC;AACmDC,QAAAA,IAAI,EAAE,GADzD;AAC8DG,QAAAA,GAAG,EAAE,IADnE;AAEIF,QAAAA,cAAc,EAAE,wBAAC1I,MAAD,EAAkC;AAAA;;AAC9C,iBAAOA,MAAM,CAAC4I,GAAP,CAAWS,YAAX,GAAyB,KAAzB,GAAgCnM,UAAU,qBAAC8C,MAAM,CAAC4I,GAAP,CAAWU,IAAZ,+BAAoB,gBAApB,CAAjD;AACH;AAJL,OADgB,EAOjB;AACCzD,QAAAA,KAAK,EAAE,QADR;AACkB2C,QAAAA,UAAU,EAAE,UAD9B;AAC0CC,QAAAA,IAAI,EAAE,GADhD;AACqDG,QAAAA,GAAG,EAAE,IAD1D;AAEKF,QAAAA,cAAc,EAAE,wBAAC1I,MAAD,EAAkC;AAE9C,iBAAOA,MAAM,CAAC4I,GAAP,CAAWW,OAAX,GAAqBvJ,MAAM,CAAC4I,GAAP,CAAWW,OAAX,CAAmB3B,MAAxC,GAAiD,GAAxD;AACH;AALN,OAPiB,EAchB;AACI/B,QAAAA,KAAK,EAAE,OADX;AACoB2C,QAAAA,UAAU,EAAE,QADhC;AACyCC,QAAAA,IAAI,EAAE,GAD/C;AACoDG,QAAAA,GAAG,EAAE,IADzD;AAEIF,QAAAA,cAAc,EAAE,wBAAC1I,MAAD,EAAkC;AAG9C,iBAAOA,MAAM,CAAC4I,GAAP,CAAWW,OAAX,GAAqBvJ,MAAM,CAAC4I,GAAP,CAAWW,OAAX,CAAmBzB,KAAxC,GAAgD,EAAvD;AACH;AANL,OAdgB,EAsBhB;AACIjC,QAAAA,KAAK,EAAE,MADX;AACmB2C,QAAAA,UAAU,EAAE,MAD/B;AACuCC,QAAAA,IAAI,EAAE,GAD7C;AACkDG,QAAAA,GAAG,EAAE,IADvD;AAEIF,QAAAA,cAAc,EAAE,wBAAC1I,MAAD,EAAkC;AAC9C,iBAAOA,MAAM,CAAC4I,GAAP,CAAW7E,IAAX,KAAoB,CAApB,GAAwB,QAAxB,GAAmC,QAA1C;AACH;AAJL,OAtBgB,EA4BhB;AACI8B,QAAAA,KAAK,EAAE,IADX;AAEI2C,QAAAA,UAAU,EAAE,OAFhB;AAGIC,QAAAA,IAAI,EAAE,CAHV;AAIIE,QAAAA,UAAU,EAAE,oBAAC3I,MAAD,EAA+B4I,GAA/B,EAAoD;AAE5D,iBACI,iCACI,oBAAC,MAAD;AACI,YAAA,OAAO,EAAC,WADZ;AAEI,YAAA,KAAK,EAAC,SAFV;AAGI,YAAA,IAAI,EAAC,OAHT;AAII,YAAA,OAAO,EAAE,kBAAOzJ,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAGS/C,eAAe,CAAC4D,MAAM,CAAC4I,GAAP,CAAWrK,EAAZ,EAAe;AAAC4F,wBAAAA,SAAS,EAAE,IAAZ;AAAiBJ,wBAAAA,IAAI,EAAE;AAAvB,uBAAf,CAHxB;;AAAA;AAAA;AAAA,uDAKsBvH,eAAe,CAAC,EAAD,EAAK,MAAI,CAAC0B,KAAL,CAAW4F,KAAX,CAAiB9D,MAAjB,CAAwBzB,EAA7B,CALrC;;AAAA;AAKSsE,sBAAAA,IALT;;AAMG,sBAAA,MAAI,CAACoB,QAAL,iCAAmB,MAAI,CAACvB,KAAxB;AAA+BU,wBAAAA,aAAa,EAAEP,IAAI,CAACK;AAAnD;;AANH;AAAA;;AAAA;AAAA;AAAA;AAWDnE,sBAAAA,OAAO,CAACC,GAAR;;AAXC;AAYJ;;AAZI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJb;AAmBI,YAAA,KAAK,EAAE;AAAEkK,cAAAA,UAAU,EAAE;AAAd;AAnBX,aAqBI,oBAAC,iBAAD;AAAmB,YAAA,QAAQ,EAAC;AAA5B,YArBJ,CADJ,CADJ;AA2BH;AAjCL,OA5BgB,CAApB;AAgEA,aACI,oBAAC,QAAD,QACI,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAC,QAAjB;AAA0B,QAAA,KAAK,EAAE;AAAEM,UAAAA,OAAO,EAAE,EAAX;AAAenJ,UAAAA,SAAS,EAAE,EAA1B;AAA8BoJ,UAAAA,YAAY,EAAE;AAA5C;AAAjC,SACI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC;AAApB,SACI,oBAAC,QAAD,OADJ,QACkB,wDADlB,CADJ,CADJ,EAOQ,oBAAC,MAAD;AACI,QAAA,KAAK,EAAE5C,KADX;AAEI,QAAA,QAAQ,EAAE,kBAAC1H,CAAD,EAAO;AAAC,UAAA,MAAI,CAACM,QAAL,CAAcN,CAAd;AAAiB,SAFvC;AAGI,QAAA,OAAO,EAAE,iBAAC0D,IAAD,EAAU;AAAEgC,UAAAA,QAAO,CAAC,MAAI,CAACnC,KAAL,CAAWG,IAAZ,EAAkBA,IAAlB,CAAP;AAAgC,SAHzD;AAII,QAAA,QAAQ,EAAE,kBAACzE,MAAD,EAAY;AAAE,iBAAO2H,cAAc,CAACc,KAAD,EAAQzI,MAAR,CAArB;AAAsC,SAJlE;AAKI,QAAA,OAAO,EAAE,KAAKsE,KAAL,CAAWlB;AALxB,SAOK,KAAKkB,KAAL,CAAWG,IAAX,CAAgBtE,EAAhB,IAAsBC,SAAtB,GAAmC,EAAnC,GACA,iCACG,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEiL,UAAAA,YAAY,EAAE;AAAhB;AAAb,SACI,oBAAC,WAAD,QACI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAE,mBAAM;AACnB,cAAI9G,MAAM,GAAG,MAAI,CAACD,KAAL,CAAWC,MAAxB;AACAA,UAAAA,MAAM,CAAC,kBAAD,CAAN,GAA6B,MAAI,CAACD,KAAL,CAAWC,MAAX,CAAkB,kBAAlB,KAAyC,OAAzC,GAAmD,MAAnD,GAA4D,OAAzF;;AACA,UAAA,MAAI,CAACsB,QAAL,iCAAmB,MAAI,CAACvB,KAAxB;AAA+BC,YAAAA,MAAM,EAANA;AAA/B;AACH;AAJL,SAKI,oBAAC,yBAAD,OALJ,qBADJ,EAQI;AAAK,QAAA,KAAK,EAAE;AACR3B,UAAAA,OAAO,2BAAE,KAAK0B,KAAL,CAAWC,MAAX,CAAkB,kBAAlB,CAAF,oCAA2C;AAD1C;AAAZ,SAGA;AAAM,QAAA,KAAK,EAAE;AACL+G,UAAAA,UAAU,EAAE,QADP;AAELC,UAAAA,cAAc,EAAE,OAFX;AAGL3I,UAAAA,OAAO,EAAE;AAHJ;AAAb,SAKI,oBAAC,WAAD;AAAa,QAAA,UAAU,EAAC,OAAxB;AACI,QAAA,IAAI,EAAE,IADV;AAEI,QAAA,UAAU,EAAE,MAFhB;AAGI,QAAA,GAAG,aAAW,KAHlB;AAG2B,QAAA,EAAE,EAAE,SAH/B;AAG0C,QAAA,KAAK,EAAE,aAHjD;AAGgE,QAAA,IAAI,EAAE,SAHtE;AAII,QAAA,MAAM,EAAE,KAAK0B,KAAL,CAAWI,QAJvB;AAKI,QAAA,KAAK,EAAE;AAAC/B,UAAAA,SAAS,EAAEI,MAAM,CAACC,UAAP,GAAoB,GAApB,GAA0B,KAA1B,GAAkC,KAA9C;AAAqDqI,UAAAA,YAAY,EAAE;AAAnE,SALX;AAMI,QAAA,QAAQ,EAAE,kBAACtK,CAAD,EAAO;AACb,UAAA,MAAI,CAAC8E,QAAL,iCAAkB,MAAI,CAACvB,KAAvB;AAA8BM,YAAAA,OAAO,EAAE7D,CAAC,CAACE,MAAF,CAASlB;AAAhD;AACH;AARL,QALJ,EAcQ,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA4C,QAAA,IAAI,EAAC,OAAjD;AAAyD,QAAA,gBAAgB,MAAzE;AAA0E,QAAA,OAAO,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3EkF,kBAAAA,YAD2E,GAC5D,MAAI,CAACX,KAAL,CAAWW,YADiD;AAEzEuG,kBAAAA,WAFyE,GAE3DvG,YAAY,CAAChF,IAAb,CAAkB,UAAA6F,CAAC;AAAA,2BAAIA,CAAC,CAAC3F,EAAF,IAAQ,MAAI,CAACmE,KAAL,CAAWM,OAAvB;AAAA,mBAAnB,CAF2D;;AAAA,uBAG5E4G,WAH4E;AAAA;AAAA;AAAA;;AAI3E,kBAAA,MAAI,CAAC1L,KAAL,CAAW/B,WAAX,CAAuB;AAACmF,oBAAAA,IAAI,EAAE,IAAP;AAAasD,oBAAAA,OAAO,wBAAmBgF,WAAW,CAACjK,IAA/B;AAApB,mBAAvB;;AAJ2E,qDAKpE,KALoE;;AAAA;AAAA;AAAA,mDAO5DtD,cAAc,CAAC,EAAD,EAAK,MAAI,CAACqG,KAAL,CAAWM,OAAhB,CAP8C;;AAAA;AAOzEH,kBAAAA,IAPyE;;AAQ/E,kBAAA,MAAI,CAACoB,QAAL,iCAAkB,MAAI,CAACvB,KAAvB;AAA8BW,oBAAAA,YAAY,EAAE7E;AAA5C;;AACA6E,kBAAAA,YAAY,CAAC4F,IAAb,CAAkBpG,IAAlB;;AACA,kBAAA,MAAI,CAACoB,QAAL,iCAAkB,MAAI,CAACvB,KAAvB;AAA8BW,oBAAAA,YAAY,EAAZA;AAA9B;;AACAtE,kBAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAAC0D,KAAL,CAAWW,YAAvB;;AAX+E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAnF,SAkBG,oBAAC,OAAD,OAlBH,CAdR,CAHA,EAqCI;AAAK,QAAA,KAAK,EAAE;AACRqG,UAAAA,UAAU,EAAE,QADJ;AAERC,UAAAA,cAAc,EAAE,OAFR;AAGRE,UAAAA,QAAQ,EAAE,MAHF;AAIRC,UAAAA,MAAM,EAAE,GAJA;AAKRC,UAAAA,SAAS,EAAE;AALH;AAAZ,SAOM5I,MAAM,CAACC,UAAP,GAAoB,GAApB,GACF,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AACV,iCAAuB;AACnB,uCAA2B;AACvB4I,cAAAA,QAAQ,EAAE;AADa;AADR;AADb,SAAd;AAOI,QAAA,IAAI,EAAE1B,IAPV;AAOgB,QAAA,OAAO,EAAEC,OAPzB;AAQI,QAAA,OAAO,EAAE,CARb;AASI,QAAA,YAAY,MAThB;AAUI,QAAA,yBAAyB,MAV7B;AAWI,QAAA,iBAAiB,EAAE,IAXvB;AAYI,QAAA,UAAU,EAAEjL,mBAZhB;AAaI,QAAA,QAAQ,EAAE,EAbd;AAakB,QAAA,kBAAkB,EAAE,CAAC,EAAD,CAbtC;AAa4C,QAAA,UAAU;AAbtD,QADE,GAeIgL,IAAI,CAAC/H,GAAL,CAAS,UAACqI,GAAD,EAAMrE,GAAN,EAAc;AAEzB,eACI,oBAAC,IAAD;AAAM,UAAA,GAAG,qBAAmBA,GAA5B;AAAmC,UAAA,KAAK,EAAE;AAAClE,YAAAA,SAAS,EAAE;AAAZ;AAA1C,WACI,oBAAC,WAAD,QACA,oBAAC,IAAD;AAAM,UAAA,GAAG,kBAAgBkE,GAAzB;AAAgC,UAAA,SAAS,EAAC;AAA1C,WACKH,MAAM,CAACC,OAAP,CAAeuE,GAAf,EAAoBrI,GAApB,CAAwB,UAAAsF,KAAK,EAAI;AAE9B,cAAI2C,UAAU,GAAGD,OAAO,CAAClK,IAAR,CAAa,UAAA+B,MAAM;AAAA,mBAAIA,MAAM,CAACyF,KAAP,KAAiBA,KAAK,CAAC,CAAD,CAA1B;AAAA,WAAnB,CAAjB;;AACA,cAAI2C,UAAU,IAAIA,UAAU,CAAC3C,KAAX,KAAqB,IAAvC,EAA6C;AAAA;;AAEzC,gBAAI1H,KAAK,4BAAGqK,UAAU,CAACE,cAAd,oCAAgCF,UAAU,CAACG,UAApD;AACAxK,YAAAA,KAAK,GAAGA,KAAK,IAAIK,SAAT,GAAqBqH,KAAK,CAAC,CAAD,CAA1B,GAAgC1H,KAAK,CAACqK,UAAU,CAACI,GAAX,IAAkB,IAAlB,GAAyB;AAACA,cAAAA,GAAG,EAAHA;AAAD,aAAzB,GAAiC;AAACzK,cAAAA,KAAK,EAAE0H,KAAK,CAAC,CAAD;AAAb,aAAlC,CAA7C;;AACA,gBAAG2C,UAAU,CAACG,UAAX,KAA0BnK,SAA7B,EACA;AAEIL,cAAAA,KAAK,GAAGqK,UAAU,CAACG,UAAX,CAAsB;AAACxK,gBAAAA,KAAK,EAAE0H,KAAK,CAAC,CAAD,CAAb;AAAkB+C,gBAAAA,GAAG,EAAEA;AAAvB,eAAtB,EAAoDA,GAApD,CAAR;AAEA,qBACI,oBAAC,QAAD;AAAU,gBAAA,KAAK,EAAE;AAACqB,kBAAAA,UAAU,EAAE,CAAb;AAAgBC,kBAAAA,aAAa,EAAE;AAA/B;AAAjB,iBACI,oBAAC,YAAD;AAAc,gBAAA,OAAO,OAAK1B,UAAU,CAACA,UAArC;AAAmD,gBAAA,SAAS,EAAErK;AAA9D,gBADJ,CADJ;AAKH,aAVD,MAUK;AACD,qBACI,oBAAC,QAAD;AAAU,gBAAA,KAAK,EAAE;AAAC8L,kBAAAA,UAAU,EAAE,CAAb;AAAgBC,kBAAAA,aAAa,EAAE;AAA/B;AAAjB,iBACI,oBAAC,YAAD;AAAc,gBAAA,OAAO,OAAK1B,UAAU,CAACA,UAArC;AAAmD,gBAAA,SAAS,OAAKrK;AAAjE,gBADJ,CADJ;AAIE;AACL;AACR,SAxBA,CADL,CADA,CADJ,EA8BI,oBAAC,WAAD;AAAa,UAAA,KAAK,EAAE;AAACwL,YAAAA,cAAc,EAAE;AAAjB;AAApB,WACCvF,MAAM,CAACC,OAAP,CAAeuE,GAAf,EAAoBrI,GAApB,CAAwB,UAAAsF,KAAK,EAAI;AAC9B,cAAI2C,UAAU,GAAGD,OAAO,CAAClK,IAAR,CAAa,UAAA+B,MAAM;AAAA,mBAAIA,MAAM,CAACyF,KAAP,KAAiBA,KAAK,CAAC,CAAD,CAA1B;AAAA,WAAnB,CAAjB;;AACA,cAAG2C,UAAU,IAAIA,UAAU,CAAC3C,KAAX,IAAoB,IAArC,EAA2C;AACvC,mBAAO2C,UAAU,CAACG,UAAX,CAAsB;AAACxK,cAAAA,KAAK,EAAE0H,KAAK,CAAC,CAAD,CAAb;AAAkB+C,cAAAA,GAAG,EAAHA;AAAlB,aAAtB,EAA+CA,GAA/C,CAAP;AACH;AACJ,SALA,CADD,CA9BJ,CADJ;AAyCH,OA3CK,CAtBV,CArCJ,CARJ,CADJ,CADH,EAsHG,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEa,UAAAA,YAAY,EAAE;AAAhB;AAAb,SACI,oBAAC,WAAD,QACI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAE,mBAAM;AACnB,cAAI9G,MAAM,GAAG,MAAI,CAACD,KAAL,CAAWC,MAAxB;AACAA,UAAAA,MAAM,CAAC,kBAAD,CAAN,GAA6B,MAAI,CAACD,KAAL,CAAWC,MAAX,CAAkB,kBAAlB,KAAyC,OAAzC,GAAmD,MAAnD,GAA4D,OAAzF;;AACA,UAAA,MAAI,CAACsB,QAAL,iCAAmB,MAAI,CAACvB,KAAxB;AAA+BC,YAAAA,MAAM,EAANA;AAA/B;AACH;AAJL,SAKI,oBAAC,yBAAD,OALJ,kBADJ,EAQI;AAAK,QAAA,KAAK,EAAE;AACR3B,UAAAA,OAAO,2BAAE,KAAK0B,KAAL,CAAWC,MAAX,CAAkB,kBAAlB,CAAF,oCAA2C;AAD1C;AAAZ,SAGA;AAAM,QAAA,KAAK,EAAE;AACL+G,UAAAA,UAAU,EAAE,QADP;AAELC,UAAAA,cAAc,EAAE,OAFX;AAGL3I,UAAAA,OAAO,EAAE;AAHJ;AAAb,SAKI,oBAAC,WAAD;AAAa,QAAA,UAAU,EAAC,OAAxB;AACI,QAAA,IAAI,EAAE,IADV;AAEI,QAAA,UAAU,EAAE,cAFhB;AAGI,QAAA,GAAG,aAAW,KAHlB;AAG2B,QAAA,EAAE,EAAE,UAH/B;AAG2C,QAAA,KAAK,EAAE,QAHlD;AAG4D,QAAA,IAAI,EAAE,UAHlE;AAII,QAAA,MAAM,EAAE,KAAK0B,KAAL,CAAWQ,OAJvB;AAKI,QAAA,KAAK,EAAE;AAACnC,UAAAA,SAAS,EAAEI,MAAM,CAACC,UAAP,GAAoB,GAApB,GAA0B,KAA1B,GAAkC,KAA9C;AAAqDqI,UAAAA,YAAY,EAAE;AAAnE,SALX;AAMI,QAAA,QAAQ,EAAE,kBAACtK,CAAD,EAAO;AACb,UAAA,MAAI,CAAC8E,QAAL,iCAAkB,MAAI,CAACvB,KAAvB;AAA8BS,YAAAA,QAAQ,EAAEhE,CAAC,CAACE,MAAF,CAASlB;AAAjD;AACH;AARL,QALJ,EAcQ,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA4C,QAAA,IAAI,EAAC,OAAjD;AAAyD,QAAA,gBAAgB,MAAzE;AAA0E,QAAA,OAAO,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDACzE/B,eAAe,CAAC,MAAI,CAACsG,KAAL,CAAWS,QAAZ,EAAqB;AAACY,oBAAAA,IAAI,EAAE,CAAP;AAASI,oBAAAA,SAAS,EAAE,MAAI,CAACzB,KAAL,CAAWG,IAAX,CAAgBsB,SAAhB,GAA4B,CAA5B,GAAgC,MAAI,CAACzB,KAAL,CAAWG,IAAX,CAAgBsB,SAAhD,GAA4D,MAAI,CAACjG,KAAL,CAAW4F,KAAX,CAAiB9D,MAAjB,CAAwBzB;AAAxG,mBAArB,CAD0D;;AAAA;AAAA;AAAA,mDAE5D/B,eAAe,CAAC,EAAD,EAAK,MAAI,CAAC0B,KAAL,CAAW4F,KAAX,CAAiB9D,MAAjB,CAAwBzB,EAA7B,CAF6C;;AAAA;AAEzEsE,kBAAAA,IAFyE;;AAG/E,kBAAA,MAAI,CAACoB,QAAL,iCAAkB,MAAI,CAACvB,KAAvB;AAA8BU,oBAAAA,aAAa,EAAEP,IAAI,CAACK;AAAlD;;AAH+E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAnF,SAIG,oBAAC,OAAD,OAJH,CAdR,CAHA,EAuBA;AAAK,QAAA,KAAK,EAAE;AACRwG,UAAAA,UAAU,EAAE,QADJ;AAERC,UAAAA,cAAc,EAAE,OAFR;AAGRE,UAAAA,QAAQ,EAAE,MAHF;AAIRC,UAAAA,MAAM,EAAE,GAJA;AAKRC,UAAAA,SAAS,EAAE;AALH;AAAZ,SAOM5I,MAAM,CAACC,UAAP,GAAoB,GAApB,GACF,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AACV,iCAAuB;AACnB,uCAA2B;AACvB4I,cAAAA,QAAQ,EAAE;AADa;AADR;AADb,SAAd;AAOI,QAAA,IAAI,EAAEb,QAPV;AAOoB,QAAA,OAAO,EAAEC,WAP7B;AAQI,QAAA,OAAO,EAAE,CARb;AASI,QAAA,YAAY,MAThB;AAUI,QAAA,yBAAyB,MAV7B;AAWI,QAAA,iBAAiB,EAAE,IAXvB;AAYI,QAAA,UAAU,EAAE9L,mBAZhB;AAaI,QAAA,QAAQ,EAAE,EAbd;AAakB,QAAA,kBAAkB,EAAE,CAAC,EAAD,CAbtC;AAa4C,QAAA,UAAU;AAbtD,QADE,GAgBE6L,QAAQ,CAAC5I,GAAT,CAAa,UAACqI,GAAD,EAAMrE,GAAN,EAAc;AAE3B,eACI,oBAAC,IAAD;AAAM,UAAA,GAAG,qBAAmBA,GAA5B;AAAmC,UAAA,KAAK,EAAE;AAAClE,YAAAA,SAAS,EAAE;AAAZ;AAA1C,WACI,oBAAC,WAAD,QACA,oBAAC,IAAD;AAAM,UAAA,GAAG,kBAAgBkE,GAAzB;AAAgC,UAAA,SAAS,EAAC;AAA1C,WACKH,MAAM,CAACC,OAAP,CAAeuE,GAAf,EAAoBrI,GAApB,CAAwB,UAAAsF,KAAK,EAAI;AAC9B,cAAI2C,UAAU,GAAGY,WAAW,CAAC/K,IAAZ,CAAiB,UAAA+B,MAAM;AAAA,mBAAKA,MAAM,CAACyF,KAAP,KAAiBA,KAAK,CAAC,CAAD,CAAtB,IAA6BA,KAAK,CAAC,CAAD,CAAL,IAAY,SAAZ,IAAyBzF,MAAM,CAACyF,KAAP,IAAgB,QAAtE,IAAkFA,KAAK,CAAC,CAAD,CAAL,IAAY,eAAZ,IAA+BzF,MAAM,CAACyF,KAAP,IAAgB,OAAtI;AAAA,WAAvB,CAAjB;;AACA,cAAI2C,UAAU,IAAIA,UAAU,CAAC3C,KAAX,KAAqB,IAAvC,EAA6C;AAAA;;AAEzC,gBAAI1H,KAAK,6BAAGqK,UAAU,CAACE,cAAd,qCAAgCF,UAAU,CAACG,UAApD;AACAxK,YAAAA,KAAK,GAAGA,KAAK,IAAIK,SAAT,GAAqBqH,KAAK,CAAC,CAAD,CAA1B,GAAgC1H,KAAK,CAACqK,UAAU,CAACI,GAAX,IAAkB,IAAlB,GAAyB;AAACA,cAAAA,GAAG,EAAHA,GAAD;AAAMzK,cAAAA,KAAK,EAAE0H,KAAK,CAAC,CAAD;AAAlB,aAAzB,GAAkD;AAAC1H,cAAAA,KAAK,EAAE0H,KAAK,CAAC,CAAD;AAAb,aAAnD,CAA7C;;AACA,gBAAG2C,UAAU,CAACG,UAAX,KAA0BnK,SAA7B,EACA;AAEIL,cAAAA,KAAK,GAAGqK,UAAU,CAACG,UAAX,CAAsB;AAACxK,gBAAAA,KAAK,EAAE0H,KAAK,CAAC,CAAD,CAAb;AAAkB+C,gBAAAA,GAAG,EAAEA;AAAvB,eAAtB,EAAoDA,GAApD,CAAR;AAEA,qBACI,oBAAC,QAAD;AAAU,gBAAA,KAAK,EAAE;AAACqB,kBAAAA,UAAU,EAAE,CAAb;AAAgBC,kBAAAA,aAAa,EAAE;AAA/B;AAAjB,iBACI,oBAAC,YAAD;AAAc,gBAAA,OAAO,OAAK1B,UAAU,CAACA,UAArC;AAAmD,gBAAA,SAAS,EAAErK;AAA9D,gBADJ,CADJ;AAKH,aAVD,MAUK;AACD,qBACI,oBAAC,QAAD;AAAU,gBAAA,KAAK,EAAE;AAAC8L,kBAAAA,UAAU,EAAE,CAAb;AAAgBC,kBAAAA,aAAa,EAAE;AAA/B;AAAjB,iBACI,oBAAC,YAAD;AAAc,gBAAA,OAAO,OAAK1B,UAAU,CAACA,UAArC;AAAmD,gBAAA,SAAS,OAAKrK;AAAjE,gBADJ,CADJ;AAIE;AACL;AACR,SAvBA,CADL,CADA,CADJ,EA6BI,oBAAC,WAAD;AAAa,UAAA,KAAK,EAAE;AAACwL,YAAAA,cAAc,EAAE;AAAjB;AAApB,WACCvF,MAAM,CAACC,OAAP,CAAeuE,GAAf,EAAoBrI,GAApB,CAAwB,UAAAsF,KAAK,EAAI;AAC9B,cAAI2C,UAAU,GAAGY,WAAW,CAAC/K,IAAZ,CAAiB,UAAA+B,MAAM;AAAA,mBAAIA,MAAM,CAACyF,KAAP,KAAiBA,KAAK,CAAC,CAAD,CAA1B;AAAA,WAAvB,CAAjB;;AACA,cAAG2C,UAAU,IAAIA,UAAU,CAAC3C,KAAX,IAAoB,IAArC,EAA2C;AACvC,mBAAO2C,UAAU,CAACG,UAAX,CAAsB;AAACxK,cAAAA,KAAK,EAAE0H,KAAK,CAAC,CAAD,CAAb;AAAkB+C,cAAAA,GAAG,EAAHA;AAAlB,aAAtB,EAA+CA,GAA/C,CAAP;AACH;AACJ,SALA,CADD,CA7BJ,CADJ;AAwCH,OA1CG,CAvBR,CAvBA,CARJ,CADJ,CAtHH,CARL,CAPR,EA+OM,KAAKlG,KAAL,CAAWG,IAAX,CAAgBsH,MAAhB,IACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAAE9J,UAAAA,SAAS,EAAE,EAAb;AAAiBoJ,UAAAA,YAAY,EAAE,EAA/B;AAAmCD,UAAAA,OAAO,EAAE,EAA5C;AAAgDM,UAAAA,MAAM,EAAE3I,MAAM,CAACC,UAAP,GAAoB,GAApB,GAA0B,GAA1B,GAAgC;AAAxF;AAAd,SACI;AAAK,QAAA,KAAK,EAAE;AAAEgJ,UAAAA,KAAK,EAAE,MAAT;AAAiBJ,UAAAA,QAAQ,EAAE;AAA3B;AAAZ,SACI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,WAApB;AAAgC,QAAA,KAAK,EAAE;AAAER,UAAAA,OAAO,EAAE;AAAX;AAAvC,gCACuB,+BAAI3M,eAAe,CAAC,KAAK6F,KAAL,CAAWG,IAAX,CAAgBwH,UAAjB,EAA6B,YAA7B,EAA2C;AAAEC,QAAAA,GAAG,EAAE,CAAP;AAAUC,QAAAA,MAAM,EAAE;AAAlB,OAA3C,CAAnB,CADvB,SADJ,EAII,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,WAApB;AAAgC,QAAA,KAAK,EAAE;AAAEf,UAAAA,OAAO,EAAE;AAAX;AAAvC,yCACuB,+BAAI3M,eAAe,CAAC,KAAK6F,KAAL,CAAWG,IAAX,CAAgB2H,UAAjB,EAA6B,YAA7B,EAA2C;AAAEF,QAAAA,GAAG,EAAE,CAAP;AAAUC,QAAAA,MAAM,EAAE;AAAlB,OAA3C,CAAnB,CADvB,CAJJ,CADJ,EASI;AAAK,QAAA,KAAK,EAAE;AAAEH,UAAAA,KAAK,EAAE,MAAT;AAAiBJ,UAAAA,QAAQ,EAAE;AAA3B;AAAZ,SACI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,WAApB;AAAgC,QAAA,KAAK,EAAE;AAAER,UAAAA,OAAO,EAAE;AAAX;AAAvC,kBACS,+BAAI,KAAK9G,KAAL,CAAWG,IAAX,CAAgBsH,MAAhB,CAAuBM,IAAvB,CAA4BlM,EAAhC,CADT,CADJ,EAII,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,WAApB;AAAgC,QAAA,KAAK,EAAE;AAAEiL,UAAAA,OAAO,EAAE;AAAX;AAAvC,0BACc,+BAAI,KAAK9G,KAAL,CAAWG,IAAX,CAAgBsH,MAAhB,CAAuBM,IAAvB,CAA4B9K,IAAhC,CADd,CAJJ,CATJ,CAhPR,CADJ;AAsQH;;;;EA9rBuBrF,S;;AAgsB5B,IAAMoQ,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BC,IAAAA,OAAO,EAAED,KAAK,CAACE,WAAN,CAAkBhI,IADG;AAE9BiI,IAAAA,QAAQ,EAAEH,KAAK,CAACI,UAAN,CAAiBD;AAFG,GAAL;AAAA,CAA7B;;AAIA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAC/BrQ,kBAAkB,CAAC;AAAEuB,IAAAA,WAAW,EAAXA;AAAF,GAAD,EAAkB8O,QAAlB,CADa;AAAA,CAAnC;;AAGA,eAAepQ,UAAU,CAACF,OAAO,CAAC+P,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CvI,aAA7C,CAAD,CAAzB","sourcesContent":["import React, { Component, Fragment, useState, useRef, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport LForms from '../../../components/Forms';\r\n//\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n//\r\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { setSnackbar } from '../../../actions/appActions'\r\nimport { putApiProviders, getApiManagers, deleteApiManagersProviders,getAddressByCepla, getApiProviders, getApiProviderTypes, getApiContributors } from '../../../providers/api'\r\nimport { validaEmail, validaCnpj, stringToaddDate } from '../../../providers/commonMethods'\r\nimport { InputCep, InputCnpj, InputPhone, stringCpf, stringCnpj } from '../../../providers/masks'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { withSnackbar } from 'notistack';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { DEFAULT_LOCALE_TEXT } from '../../../providers/langs/datagrid';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { CardActions, List, ListItem, ListItemText } from '@material-ui/core';\r\n\r\n// MODULE ID\r\nconst module_id = 4\r\n\r\nconst AutocompleteMatriz = (props) => {\r\n  \r\n    const [value, setValue] = React.useState(props.value ? props.values.find((item) => item.id == props.value) : undefined);\r\n    const [inputValue, setInputValue] = React.useState('');\r\n    const [defaultVal, setDefault] = useState(props.value ? props.values.find((item) => item.id == props.value) : undefined);\r\n      useEffect(() => {\r\n          if(props.value !== defaultVal){\r\n              const vl = props.value ? props.values.find((item) => item.id == props.value) : undefined;\r\n              if(vl !== undefined){\r\n                console.log(vl);\r\n                setValue(vl);\r\n                setInputValue(vl !== undefined ? vl[props.valueLabel] : \"\");\r\n              }\r\n          }\r\n      })\r\n  \r\n    function handleChange(e, newValue) {\r\n      const { val, id } = e.target;\r\n      let vl = {target: { id: props.id, value: newValue.id}}\r\n      if (props.validate !== undefined) {\r\n          if (props.validate(val)) {\r\n              setError(false);\r\n          } else {\r\n              setError(true)\r\n          }\r\n      }\r\n        props.onChange(vl)\r\n        //console.log(newValue);\r\n        setValue(newValue);\r\n      }\r\n    return <Autocomplete\r\n          key={`autocomplete-${props.id}`}\r\n          id={props.id}\r\n          disabled={props.disabled ?? false}\r\n          name={props.name}\r\n          value={value}\r\n          inputValue={inputValue}\r\n          onChange={handleChange}\r\n          getOptionSelected={(option, value) => {\r\n              if(option.id == value.id){\r\n                  setInputValue(value[props.valueLabel])\r\n              }\r\n              \r\n              return option.id == value.id\r\n          }}\r\n          getOptionLabel={(option) => option[props.valueLabel]}\r\n          onInputChange={(event, newInputValue) => {\r\n            setInputValue(newInputValue);\r\n          }}\r\n          options={props.values}\r\n          style={props.style}\r\n          renderInput={(params) => <TextField {...params} \r\n          label={props.label} \r\n           />}\r\n        />;\r\n  }\r\n\r\nconst SelectMatriz = (props) => {\r\n    const [value, setValue] = useState(props.value ?? \"Selecione\");\r\n    const [error, setError] = useState(false);\r\n    const [defaultVal, setDefault] = useState(props.value ?? \"Selecione\");\r\n    useEffect(() => {\r\n        if(props.value !== defaultVal){\r\n            setValue(props.value ?? \"Selecione\")\r\n        }\r\n    })\r\n\r\n    function handleChange(e) {\r\n        const { val, id } = e.target;\r\n        if (props.validate !== undefined) {\r\n            if (props.validate(val)) {\r\n                setError(false);\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }\r\n        props.onChange(e)\r\n        console.log(e.target.value)\r\n        setValue(e.target.value);\r\n    }\r\n    return (\r\n        <FormControl id={props.column} style={{ ...props.style, marginTop: '25px' }}>\r\n            <InputLabel id={props.column}>{props.label}</InputLabel>\r\n            <Select size=\"small\"\r\n                labelId={props.id}\r\n                id={props.id}\r\n                disabled={props.disabled ?? false}\r\n                name={props.name}\r\n                value={value}\r\n                error={error}\r\n                placeholder=\"Selecione\"\r\n                //helperText={props.error ? props.helperText ?? \"conteúdo inválido\" : \"\"}\r\n                onChange={handleChange}\r\n                onBlur={handleChange}\r\n            >\r\n                <MenuItem key={`input-00`} value=\"Selecione\">Selecione</MenuItem>\r\n                {props.json ? (\r\n                    props.values.map((val, ind) => {\r\n                        return <MenuItem key={`input-${ind}`} value={val.id}>{val[props.valueLabel]}</MenuItem>\r\n                    })\r\n                ) : (\r\n                    props.values.map((val, ind) => {\r\n                        return <MenuItem key={`input-${ind}`} value={val}>{val}</MenuItem>\r\n                    })\r\n                )\r\n                }\r\n\r\n            </Select>\r\n        </FormControl>)\r\n}\r\n\r\nconst SelectInput = (props) => {\r\n    const [value, setValue] = useState(props.value ?? \"Selecione\");\r\n    const [error, setError] = useState(false);\r\n    function handleChange(e) {\r\n        const { value, id } = e.target;\r\n        if (props.validate !== undefined) {\r\n            if (props.validate(value)) {\r\n                setError(false);\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }\r\n        e.target.id = e.target.name;\r\n        props.onChange(e)\r\n        //console.log(e.target)\r\n        setValue(e.target.value);\r\n    }\r\n    return (\r\n        <FormControl id={props.column} style={{ ...props.style, marginTop: '25px' }}>\r\n            <InputLabel id={props.column}>{props.label}</InputLabel>\r\n            <Select size=\"small\"\r\n                labelId={props.id}\r\n                id={props.id}\r\n                name={props.name}\r\n                value={value}\r\n                error={error}\r\n                placeholder=\"Selecione\"\r\n                //helperText={props.error ? props.helperText ?? \"conteúdo inválido\" : \"\"}\r\n                onChange={handleChange}\r\n                onBlur={handleChange}\r\n            >\r\n                <MenuItem key={`input-00`} value=\"Selecione\">Selecione</MenuItem>\r\n                {props.json ? (\r\n                    props.values.map((val, ind) => {\r\n                        return <MenuItem key={`input-${ind}`} value={val.id}>{val[props.valueLabel]}</MenuItem>\r\n                    })\r\n                ) : (\r\n                    props.values.map((val, ind) => {\r\n                        return <MenuItem key={`input-${ind}`} value={val}>{val}</MenuItem>\r\n                    })\r\n                )\r\n                }\r\n\r\n            </Select>\r\n        </FormControl>)\r\n}\r\nconst TypeEmpresaInput = (props) => {\r\n    const [value, setValue] = useState(props.value);\r\n    const [value1, setValue1] = useState(props.value1);\r\n    function handleChange(e) {\r\n        const { value, id } = e.target;\r\n        props.onChange(e) ?? undefined;\r\n        setValue(e.target.value);\r\n    }\r\n    async function handleChange1(e) {\r\n        const { value, id } = e.target;\r\n        try{\r\n            await props.handler(value);\r\n        }catch(e){\r\n            console.error(e);\r\n        }\r\n        props.onChange(e) ?? undefined;\r\n        setValue1(e.target.value);\r\n    }\r\n    return (<div style={{flexBasis: props.style.flexBasis, display: 'flex'}}>\r\n        <SelectInput valueLabel=\"value\" json={true} value={value} helperText={props.helperText ?? \"\"} key={`input-${15000}`} id={\"type\"} label={\"Empresa\"} name={\"type\"} values={[{id:1, value: 'Matriz'},{id:2, value: 'Filial'} ]} style={{margin: 5, marginTop: 25,flexBasis: window.innerWidth < 768 ? '100%' : '50%' }} onChange={(e) => handleChange(e)} />\r\n        {value == 2 &&\r\n        <SelectInput valueLabel={props.valueLabel} json={props.json} value={value1} helperText={props.helperText ?? \"\"} key={`input-${15001}`} id={\"matriz_id\"} label={props.label} name={\"matriz_id\"} values={props.values} style={{margin: 5, marginTop: 25,flexBasis: window.innerWidth < 768 ? '100%' : '50%' }} onChange={(e) => handleChange1(e) ?? undefined} />\r\n    }</div>)\r\n}\r\n\r\nfunction BlockDialog(props) {\r\n    const [open, setOpen] = React.useState(props.open);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [justfy, setjustfy] = React.useState('');\r\n    \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n      setLoading(false);\r\n    };\r\n    \r\n    const send = async () => {\r\n        setLoading(true);\r\n        await putApiProviders( props.id, {active: props.active ?? undefined, justification: justfy});\r\n        props.handle(props.active);\r\n        props.handleClose();\r\n        setjustfy('');\r\n        setLoading(false);\r\n    }\r\n    return (\r\n      <div>\r\n        <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n          <DialogTitle id=\"form-dialog-title\">Desvincular Responsável ?</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n            \r\n                Confirma o desvinculo do registro selecionado?\r\n            </DialogContentText>\r\n            { props.active == 0 &&<TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"justification\"\r\n              label=\"Justificativa\"\r\n              type=\"text\"\r\n              fullWidth\r\n              value={justfy}\r\n              onChange={(e) => {\r\n                setjustfy(e.target.value)\r\n              }}\r\n            /> }\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={props.handleClose} color=\"primary\">\r\n              NÃO\r\n            </Button>\r\n            { !loading ? (\r\n            <Button onClick={send} color=\"primary\">\r\n              SIM\r\n            </Button>):(\r\n                <Button color=\"primary\">\r\n                     <CircularProgress style={{display: 'flex'}} />\r\n                </Button>\r\n               \r\n            )}\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n  function getMoney( str )\r\n  {\r\n      return parseInt( str.replace(/[\\D]+/g,'') );\r\n  }\r\n  function formatReal( int )\r\n  {\r\n      var tmp = int+'';\r\n          tmp = tmp.replace(/([0-9]{2})$/g, \",$1\");\r\n          if( tmp.length > 6)\r\n              tmp = tmp.replace(/([0-9]{3}),([0-9]{2}$)/g, \".$1,$2\");\r\n          if( tmp.length >= 10 )\r\n              tmp = tmp.replace(/([0-9]{3})\\.([0-9]{3}),([0-9]{2}$)/g, \"$1.$2,$3\");\r\n          return tmp;\r\n  }\r\nclass EditProviders extends Component {\r\n    state = {\r\n        filter: ['flex'],\r\n        fields: {},\r\n        data: {},\r\n        managers: [],\r\n        contributors: [],\r\n        manager: 0,\r\n        providers: [],\r\n        filials: [],\r\n        provider: 0,\r\n        provProviders: [],\r\n        provManagers: [],\r\n        provManagersDeleted: [],\r\n        loading: false\r\n    }\r\n    async componentDidMount() {\r\n        if (JSON.parse(localStorage.getItem(\"user\")) == null) {\r\n            window.location.href = '/login';\r\n            return;\r\n        }\r\n        localStorage.setItem(\"sessionTime\", 9000)\r\n        const contributors = await getApiContributors({active: 1});\r\n        const data = await getApiProviders({}, this.props.match.params.id);\r\n        const providers = await getApiProviders({type: 1, active: 1});\r\n        const filials = await getApiProviders({type: 2, active: 1});\r\n        const managers = await getApiManagers({active: 1});\r\n        const providertypes = await getApiProviderTypes();\r\n        //console.log(providers.data.filter(x => x.id != this.props.match.params.id))\r\n        this.setState({ ...this.state, \r\n            data, \r\n            fields: data,\r\n            providers: providers.data.filter(x => x.id != this.props.match.params.id), \r\n            filials: filials.data.filter(x => x.id != this.props.match.params.id),\r\n            provManagers: data.managers, \r\n            provProviders: data.filials,\r\n            managers: managers.data, \r\n            contributors: contributors.data,\r\n            providertypes: providertypes.data \r\n        });\r\n\r\n                        if(data.matriz_id != (null||undefined)){\r\n                            let fields = this.state.fields;\r\n                            Object.entries(data.addresses)\r\n                                .map(([key, val]) => {\r\n                                    fields[key] = val\r\n                            });\r\n                            Object.entries(data.contacts)\r\n                                .map(([key, val]) => {\r\n                                    fields[key] = val\r\n                            });\r\n                            Object.entries(data.contracts)\r\n                                .map(([key, val]) => {\r\n                                    if(key == 'rate'){\r\n                                        fields[key] = formatReal(getMoney(val))\r\n                                    }else{\r\n                                        fields[key] = val\r\n                                    }\r\n                                    \r\n                            });\r\n                            this.setState({...this.state, fields: {... this.state.fields}});\r\n                        }\r\n        //console.log(this.state.fields);\r\n\r\n    }\r\n    onChange(e){\r\n        //console.log(e);\r\n        this.setState({...this.state, fields: e});\r\n    }\r\n    render() {\r\n        const closeSnack = (event, reason) => {\r\n            if (reason === 'clickaway') {\r\n                return;\r\n            }\r\n            this.props.setSnackbar({ open: false, message: \"\" });\r\n        };\r\n        const request = async (state, data) => {\r\n            if(this.state.provManagers.length == 0){\r\n                this.props.setSnackbar({ open: true, message: \"Você deve manter pelo menos 1 Responsável vinculado\"});\r\n                return false;\r\n            }\r\n            this.setState({ ...this.state, loading: true });\r\n            this.props.setSnackbar({ open: true, message: \"Validando Dados, Aguarde ...\", });\r\n            data = Object.assign({}, state.addresses, data);\r\n            data = Object.assign({}, state.contacts, data);\r\n            data = Object.assign({}, state.contracts, data);\r\n            data = Object.assign({}, state, data);\r\n            delete data.addresses;\r\n            delete data.contacts;\r\n            delete data.contracts;\r\n            data.rate = formatReal(getMoney(data.rate))\r\n            console.log(data.rate)\r\n            this.state.provManagersDeleted.map(async (v,k) => {\r\n                let del = await deleteApiManagersProviders({provider_id: this.props.match.params.id, manager_id: v.id });\r\n                if(del.success == false){\r\n                    this.props.setSnackbar({ open: true, message: del.message });\r\n                }\r\n            });\r\n            this.state.provManagers.map(async (v,k) => {\r\n                let add = await putApiProviders(`manager/${this.props.match.params.id}/${v.id }`)\r\n                if(add.success == false){\r\n                    this.props.setSnackbar({ open: true, message:del.message });\r\n                }\r\n            });\r\n            //data.rate = data.rate.replace(/\\./g,'').replace(',', '.');\r\n            let response = await putApiProviders(this.props.match.params.id, data);\r\n            //console.log(response);\r\n            if (response.data.success) {\r\n                this.props.setSnackbar({ open: true, message: response.data.message });\r\n                this.setState({ ...this.state, loading: false });\r\n                this.props.history.goBack();\r\n            } else {\r\n                //console.log(response)\r\n                let errors = response.data ?? undefined;\r\n\r\n                //let { errors } = response.data.error.response.data ?? {error: undefined}\r\n                let messages = '';\r\n                if(errors !== undefined && errors.error !== undefined && errors.error.response && errors.error.response.data !== undefined && errors.error.response.data.errors !== undefined){\r\n                    Object.keys(errors.error.response.data.errors).map(err => {\r\n                        //console.log(err);\r\n                        let field = err == \"file\" ? \"Anexo\" : err\r\n                        messages += `O ${field.toUpperCase()} ${errors.error.response.data.errors[err][0]} \\n`;\r\n                    })\r\n                } else{\r\n                    messages = 'Houve um problema em sua requisição!'\r\n                }\r\n                this.setState({ ...this.state, loading: false });\r\n                //response.data.error.response.data.errors\r\n                this.props.setSnackbar({ open: true, messages });\r\n            }\r\n\r\n        }\r\n        const validateFields = (fields, values) => {\r\n            let campo = undefined;\r\n            fields.reverse().map((v, k) => {\r\n                v.fields.reverse().map((v1, k1) => {\r\n                    if (values[v1.column] !== undefined) {\r\n                        let value = values[v1.column];\r\n                        if (v1.validate !== undefined) {\r\n                            if (v1.validate.number !== undefined) {\r\n                                if (/^[-]?\\d+$/.test(value) == false)\r\n                                    campo = { id: v1.column, message: `O Campo ${v1.label} é somente números ` }\r\n                            }\r\n                            if(v1.validate.depends !== undefined){\r\n                                let val = values[v1.validate.depends.column];\r\n                                //console.log(v1.validate.depends.value);\r\n                                //return false;\r\n                                if (val == \"Selecione\") {\r\n                                    campo = { id: v1.column, message: `O Campo ${val.label} é inválido ` }\r\n                                }\r\n                                if (v1.validate.depends.value !== val)\r\n                                    campo = { id: v1.column, message: `O Campo ${v1.label} depende do valor ${v1.validate.depends.text} em ${v1.validate.depends.label}` }\r\n                            }\r\n\r\n                            if(v1.validate.decimal !== undefined){\r\n                                //if (/^\\s*-?(\\d+(\\.\\d{1,2})?|\\.\\d{1,2})\\s*$/.test(value) == false)\r\n                                //    campo = {id: v1.column, message: `O Campo ${v1.label} é somente números e ponto ` }\r\n                            }\r\n                            if (v1.validate.max !== undefined) {\r\n                                if (value.length > v1.validate.max)\r\n                                    campo = { id: v1.column, message: `O Campo ${v1.label}, tamanho máximo de ${v1.validate.max} caracteres exêdido` };\r\n                            }\r\n\r\n                            if (v1.validate.min !== undefined) {\r\n                                if (value.length < v1.validate.min)\r\n                                    campo = { id: v1.column, message: `O Campo ${v1.label}, tamanho minimo de ${v1.validate.min} caracteres.` };\r\n                            }\r\n\r\n                            if (v1.validate.required !== undefined) {\r\n                                if (value == \"Selecione\") {\r\n                                    campo = { id: v1.column, message: `O Campo ${v1.label} é inválido ` }\r\n                                }\r\n                                if (value.length == 0)\r\n                                    campo = { id: v1.column, message: `O Campo ${v1.label} é obrigatório` };\r\n                            }\r\n                        }\r\n                        if (v1.validateHandler !== undefined) {\r\n                            if (v1.validateHandler(value) == false)\r\n                                campo = { id: v1.column, message: `O Campo ${v1.label} não possui é inválido ` }\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n            //console.log(campo)\r\n            campo !== undefined ? this.props.setSnackbar({ open: true, message: campo.message }) : '';\r\n\r\n            return campo === undefined ? true : false\r\n        }\r\n        const flexBasis = '22%';\r\n        const forms = (this.state.data === undefined || this.state.data.id === undefined) ? [] : [\r\n            {\r\n                title: 'Dados Básicos',\r\n                fields: [\r\n                    {\r\n                        column: 'active', label: 'Ativo', type: 'checkbox', value: this.state.data['active'] == 1 ? true : false, disabled: false,\r\n                        justification: this.state.data['audits'] ? this.state.data['audits'].justification == null ? \" \" : this.state.data['audits'].justification : '',\r\n                        flexBasis: \"100%\"\r\n                    },\r\n                    {\r\n                        column: 'providertype_id', label: 'Tipo Fornecedor', type: 'select',\r\n                        json: true,\r\n                        valueLabel: \"name\",\r\n                        values: this.state.providertypes,//[{id: 1, value: \"Farmácia\"},{id: 2, value: \"Loja\"}],\r\n                        validate: { required: true },\r\n                        value: this.state.data['providertype_id'],\r\n                        //value: \"Coordenador de usuários\",\r\n                        flexBasis\r\n                    },\r\n                    {\r\n                        column: 'matriz_id', \r\n                        label: 'Matriz', \r\n                        type: 'custom',\r\n                        json: true, \r\n                        valueLabel: \"fantasy_name\",\r\n                        value:this.state.data['type'],\r\n                        value1: this.state.data['matriz_id'],\r\n                        values: this.state.providers,//[{id: 1, value: \"Farmácia\"},{id: 2, value: \"Loja\"}],\r\n                        flexBasis: '66%',\r\n                        component: TypeEmpresaInput,\r\n                        handler: async (id) => {\r\n                            let matrizData = await getApiProviders({},id);\r\n                            let fields = this.state.fields;\r\n                            Object.entries(matrizData.addresses)\r\n                                .map(([key, val]) => {\r\n                                    fields[key] = val\r\n                            });\r\n                            Object.entries(matrizData.contacts)\r\n                                .map(([key, val]) => {\r\n                                    fields[key] = val\r\n                            });\r\n                            Object.entries(matrizData.contracts)\r\n                                .map(([key, val]) => {\r\n                                    fields[key] = val\r\n                            });\r\n                            \r\n                            this.setState({...this.state, fields});\r\n                            console.log(this.state.fields);\r\n                            //console.log(fields);\r\n                        }\r\n                    },\r\n                    { column: 'cnpj', label: 'CNPJ', type: 'text', value: this.state.data['cnpj'], mask: InputCnpj, validate: { min: 11, number: true, required: true }, validateHandler: validaCnpj, flexBasis: '22%', helperText: \"o valor digitado é inválido\" },\r\n                    { column: 'company_name', label: 'Razão Social', type: 'text', value: this.state.data['company_name'], validate: { max: 50, required: true }, flexBasis: '25%' },\r\n                    { column: 'fantasy_name', label: 'Nome Fantasia', type: 'text', value: this.state.data['fantasy_name'], validate: { max: 50, required: true }, flexBasis: '25%' },\r\n                    { column: 'file_anexo', label: 'Documento', type: 'file', file: this.state.data['file_anexo'] ? this.state.data['file_anexo'].name : '', flexBasis },\r\n                    { column: 'file_logo', label: 'Logo marca', type: 'file', file: this.state.data['file_logo'] ? this.state.data['file_logo'].name : '', validate: { required: true }, flexBasis },\r\n\r\n                ]\r\n            },\r\n            {\r\n                id: 'addr',\r\n                title: 'Endereço',\r\n                //flexFlow: 'row no-wrap',\r\n                //json: \"address\",\r\n                fields: [\r\n                    { column: 'addr_clone', label: 'Clonar Matriz', disabled: (this.state.fields['type'] == 1), type: 'checkbox', validate:{depends:{label: 'Tipo', value: 2, column: 'type', text: 'Filial' }}, flexBasis: \"100%\", value: this.state.data.addr_clone },\r\n                    { column: 'zipcode', label: 'CEP', type: 'text', disabled: (this.state.fields['addr_clone'] == 1), mask: InputCep, validate: { max: 9, required: true }, flexBasis: '9%', value: (this.state.fields['type'] == 2 && this.state.fields['addr_clone'] == 1 && this.state.fields['zipcode'] != (\"\"|| null || undefined)) ? this.state.fields['zipcode'] : this.state.data['addresses'].zipcode },\r\n                    { column: 'street', label: 'Endereço', disabled: (this.state.fields['addr_clone'] == 1),validate: { max: 100, required: true }, type: 'text', flexBasis, value: (this.state.fields['type'] == 2 && this.state.fields['addr_clone'] == 1 && this.state.fields['street'] != (\"\"|| null || undefined)) ? this.state.fields['street'] : this.state.data['addresses'].street },\r\n                    { column: 'additional', label: 'Complemento', disabled: (this.state.fields['addr_clone'] == 1), validate: {max: 20}, type: 'text', flexBasis, value: (this.state.fields['type'] == 2 && this.state.fields['addr_clone'] == 1 && this.state.fields['additional'] != (\"\"|| null || undefined)) ? this.state.fields['additional'] : (this.state.data['addresses'].additional != 'null' ? this.state.data['addresses'].additional : '') },\r\n                    {\r\n                        column: 'uf', label: 'Estado', type: 'custom',\r\n                        component: SelectMatriz, disabled: (this.state.fields['addr_clone'] == 1),\r\n                        values: [\"Acre\", \"Alagoas\", \"Amazonas\", \"Amapá\", \"Bahia\", \"Ceará\", \"Brasília\", \"Espírito Santo\", \"Goiás\", \"Maranhão\", \"Minas Gerais\", \"Mato Grosso do Sul\", \"Mato Grosso\", \"Pará\", \"Paraíba\", \"Pernambuco\", \"Piauí\", \"Paraná\", \"Rio de Janeiro\", \"Rio Grande do Norte\", \"Rondônia\", \"Roraima\", \"Rio Grande do Sul\", \"Santa Catarina\", \"Sergipe\", \"São Paulo\", \"Tocantins\"],\r\n                        value: (this.state.fields['type'] == 2 && this.state.fields['addr_clone'] == 1  && this.state.fields['uf'] != (\"\"|| null || undefined)) ? this.state.fields['uf'] : this.state.data['addresses'].uf, flexBasis, flexGrow: 2, style: { minWidth: \"192px\" }\r\n                    },\r\n                    { column: 'city', label: 'Cidade', type: 'text', disabled: (this.state.fields['addr_clone'] == 1), validate: { max: 100, required: true }, flexBasis, value: (this.state.fields['type'] == 2 && this.state.fields['addr_clone'] == 1 && this.state.fields['city'] != (\"\"|| null || undefined)) ? this.state.fields['city'] : this.state.data['addresses'].city },\r\n                ]\r\n            },\r\n            {\r\n                title: 'Contato',\r\n                //json: 'contact',\r\n                fields: [\r\n                    { column: 'contact_clone', label: 'Clonar Matriz', disabled: (this.state.fields['type'] == 1 ? true : false), type: 'checkbox', validate:{depends:{label: 'Tipo', value: 2, column: 'type', text: 'Filial' }},flexBasis: \"100%\", value: this.state.data.contact_clone },\r\n                    { column: 'phone1', label: 'Contato', type: 'text', disabled: (this.state.fields['contact_clone'] == 1), mask: InputPhone, validate: { max: 15, required: true }, flexBasis, value: (this.state.fields['type'] == 2 && this.state.fields['contact_clone'] == 1 && this.state.fields['phone1'] != (\"\"|| null || undefined)) ? this.state.fields['phone1'] : this.state.data['contacts'].phone1 },\r\n                    { column: 'phone2', label: 'Contato alternativo', type: 'text', disabled: (this.state.fields['contact_clone'] == 1), mask: InputPhone, validate: { max: 15 }, flexBasis, value: (this.state.fields['type'] == 2 && this.state.fields['contact_clone'] == 1 && this.state.fields['phone2'] != (\"\"|| null || undefined)) ? this.state.fields['phone2'] : this.state.data['contacts'].phone2 },\r\n                    { column: 'email', label: 'E-mail', type: 'email', disabled: (this.state.fields['contact_clone'] == 1), validate: { max: 100 }, validateHandler: validaEmail, flexBasis, value: (this.state.fields['type'] == 2 && this.state.fields['contact_clone'] == 1 && this.state.fields['email'] != (\"\"|| null || undefined)) ? this.state.fields['email'] : this.state.data['contacts'].email },\r\n                    { column: 'site', label: 'Site', type: 'text', disabled: (this.state.fields['contact_clone'] == 1), validate: { max: 100 }, flexBasis: '20%', value: (this.state.fields['type'] == 2 && this.state.fields['contact_clone'] == 1 && this.state.fields['site'] != (\"\"|| null || undefined)) ? this.state.fields['site'] : (this.state.data['contacts'].site == \"null\" ? \"\" : this.state.data['contacts'].site) },\r\n                ]\r\n            },\r\n            {\r\n                title: 'Redes Sociais',\r\n                //json: 'contact',\r\n                fields: [\r\n                    { column: 'linkedin', label: 'Usuário do LinkedIn', type: 'text', disabled: (this.state.fields['contact_clone'] == 1), validate: { max: 100, required: true }, flexBasis, value: (this.state.fields['type'] == 2 && this.state.fields['contact_clone'] == 1 && this.state.fields['linkedin'] != (\"\"|| null || undefined)) ? this.state.fields['linkedin'] : this.state.data['contacts'].linkedin },\r\n                    { column: 'facebook', label: 'Usuário do Facebook', type: 'text', disabled: (this.state.fields['contact_clone'] == 1), validate: { max: 100, required: true }, flexBasis, value: (this.state.fields['type'] == 2 && this.state.fields['contact_clone'] == 1 && this.state.fields['facebook'] != (\"\"|| null || undefined)) ? this.state.fields['facebook'] : this.state.data['contacts'].facebook },\r\n                    { column: 'instagram', label: 'Usuário do Instagram', type: 'text', disabled: (this.state.fields['contact_clone'] == 1), validate: { max: 100, required: true }, flexBasis, value: (this.state.fields['type'] == 2 && this.state.fields['contact_clone'] == 1 && this.state.fields['instagram'] != (\"\"|| null || undefined)) ? this.state.fields['instagram'] : this.state.data['contacts'].instagram },\r\n                ]\r\n            },\r\n            {\r\n                title: 'Contrato Atual',\r\n                //json: 'contact',\r\n                fields: [\r\n                    { column: 'contract_clone', label: 'Clonar Matriz', disabled: (this.state.fields['type'] == 1 ? true : false), type: 'checkbox', validate:{depends:{label: 'Tipo', value: 2, column: 'type', text: 'Filial' }}, flexBasis: \"100%\" },\r\n                    { column: 'accession_date', label: 'Data de Adesão - Início', type: 'date', disabled: (this.state.fields['contract_clone'] == 1), validate: { required: true }, flexBasis: '20%', value: (this.state.fields['type'] == 2 && this.state.fields['contract_clone'] == 1 && this.state.fields['accession_date'] != (\"\"|| null || undefined)) ? this.state.fields['accession_date'] : this.state.data['contracts'].accession_date },\r\n                    { column: 'end_date', label: 'Data de Adesão - Fim', type: 'date', disabled: (this.state.fields['contract_clone'] == 1), validate: { required: true }, flexBasis: '20%', value: (this.state.fields['type'] == 2 && this.state.fields['contract_clone'] == 1 && this.state.fields['end_date'] != (\"\"|| null || undefined)) ? this.state.fields['end_date'] :this.state.data['contracts'].end_date },\r\n                    { \r\n                        column: 'contributor_id', \r\n                        label: 'Vendedor', \r\n                        type: 'autocomplete',\r\n                        validate:{required: true}, \r\n                        value: (this.state.fields['type'] == 2 && this.state.fields['contract_clone'] == 1 && this.state.fields['contributors_id'] != (\"\"|| null || undefined)) ? this.state.fields['contributors_id'] : this.state.data['contracts'].contributors_id, \r\n                        json: true,\r\n                        valueLabel: 'name',\r\n                        values: this.state.contributors,\r\n                        flexBasis: '20%', disabled: (this.state.fields['contract_clone'] == 1)\r\n                    },\r\n                    { column: 'rate', label: 'Taxa de Adesão', type: 'decimal', disabled: (this.state.fields['contract_clone'] == 1), validate: { required: true, decimal: true }, flexBasis: '20%', value: (this.state.fields['type'] == 2 && this.state.fields['contract_clone'] == 1 && this.state.fields['rate'] != (\"\"|| null || undefined)) ? formatReal(getMoney(this.state.fields['rate'])) : formatReal(getMoney(this.state.data['contracts'].rate)) },\r\n                ]\r\n            }\r\n        ];\r\n        const rows =  (this.state.provManagers !== undefined) ? this.state.provManagers : [];\r\n        const columns = [\r\n            {\r\n                field: 'cpf', headerName: 'CPF', flex: 0.7,\r\n                valueFormatter: (params: ValueFormatterParams) => {\r\n                    return params.value ? stringCpf(params.value) : '';\r\n                }\r\n            },\r\n            { field: 'name', headerName: 'Nome', flex: 2 },\r\n            { field: 'function', headerName: 'Função', flex: 1 },\r\n            {\r\n                field: 'active',\r\n                headerName: 'Situação',\r\n                flex: 0.5,\r\n                valueFormatter: (params: ValueFormatterParams) => {\r\n                    return params.value === 1 ? \"Ativo\" : \"Inativo\"\r\n                }\r\n            }, {\r\n                field: 'id',\r\n                headerName: 'Ações',\r\n                flex: 1,\r\n                renderCell: (params: ValueFormatterParams, row: RowIdGetter) => {\r\n                    //let view = this.state.session.permissions.find(x => x.module === module_id)\r\n                    return (\r\n                        <div>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                onClick={async (e) => {\r\n                                    try{\r\n                                        let provManagers = this.state.provManagers;\r\n                                        let actualDel = provManagers.find(x => x.id == params.row.id)\r\n                                        let index = provManagers.findIndex(x => x.id == params.row.id)\r\n                                        await getApiProviders({}, this.props.match.params.id);\r\n                                        this.setState({...this.state, provManagers: undefined});\r\n                                        provManagers.splice(index,1)\r\n                                        let provManagersDeleted = this.state.provManagersDeleted;\r\n                                        provManagersDeleted.push(actualDel)\r\n                                        this.setState({...this.state, provManagers, provManagersDeleted });\r\n                                        \r\n                                        //if(this.state.provManagers.length > 1){\r\n                                            /*await deleteApiManagersProviders({provider_id: this.props.match.params.id, manager_id: params.row.id });\r\n                                            const data = await getApiProviders({}, this.props.match.params.id);\r\n                                            this.setState({...this.state, provManagers: data.managers});*/\r\n                                        //}else{\r\n                                        //    this.props.setSnackbar({ open: true, message: \"Você deve manter pelo menos 1 registro\" })\r\n                                        //}\r\n                                       \r\n                                    }catch(err){\r\n                                        console.log(err)\r\n                                    };\r\n                                    \r\n                                }}\r\n                                style={{ marginLeft: 16 }}\r\n                            >\r\n                               <DeleteForeverIcon fontSize=\"small\" />\r\n                            </Button>\r\n                        </div>\r\n                    )\r\n                },\r\n            },\r\n        ];\r\n\r\n        //\r\n        // Providers Grid\r\n        const rowsProv = (this.state.provProviders !== undefined) ? this.state.provProviders : [];\r\n        const columnsProv = [\r\n            {\r\n                field: 'company_name', headerName: 'Farmácia', flex: 0.7, row: true,\r\n                valueFormatter: (params: ValueFormatterParams) => {\r\n                    return params.row.company_name +\" - \"+ stringCnpj(params.row.cnpj ?? '00000000000000');\r\n                }\r\n            },\r\n           { \r\n            field: 'phone1', headerName: 'Telefone', flex: 0.7, row: true,\r\n                valueFormatter: (params: ValueFormatterParams) => {\r\n                    //let provider = this.state.providers.filter(prov => prov.id === params.row.id); \r\n                    return params.row.contact ? params.row.contact.phone1 : '-';\r\n                }\r\n            },\r\n            { \r\n                field: 'email', headerName: 'E-mail',flex: 0.7, row: true,\r\n                valueFormatter: (params: ValueFormatterParams) => {\r\n                    //let provider = this.state.providers.filter(prov => prov.id === params.row.id); \r\n                    //console.log(provider)\r\n                    return params.row.contact ? params.row.contact.email : '';\r\n                }\r\n            },\r\n            { \r\n                field: 'type', headerName: 'Tipo', flex: 0.7, row: true,\r\n                valueFormatter: (params: ValueFormatterParams) => {\r\n                    return params.row.type === 1 ? \"Matriz\" : \"Filial\"\r\n                } \r\n            }, \r\n            {\r\n                field: 'id',\r\n                headerName: 'Ações',\r\n                flex: 1,\r\n                renderCell: (params: ValueFormatterParams, row: RowIdGetter) => {\r\n                    //let view = this.state.session.permissions.find(x => x.module === module_id)\r\n                    return (\r\n                        <div>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                onClick={async (e) => {\r\n                                    try {\r\n                                        //if(this.state.provProviders.length > 1){\r\n                                            await putApiProviders(params.row.id,{matriz_id: null,type: 1})\r\n                                            //await deleteApiManagersProviders({provider_id: params.row.id,manager_id: this.props.match.params.id})\r\n                                            const data = await getApiProviders({}, this.props.match.params.id);\r\n                                            this.setState({ ...this.state, provProviders: data.filials });\r\n                                        /*}else{\r\n                                            this.props.setSnackbar({ open: true, message: \"Você deve manter pelo menos 1 registro\" })\r\n                                        }*/\r\n                                    } catch (err) {\r\n                                        console.log(err)\r\n                                    };\r\n\r\n                                }}\r\n                                style={{ marginLeft: 16 }}\r\n                            >\r\n                                <DeleteForeverIcon fontSize=\"small\" />\r\n                            </Button>\r\n                        </div>\r\n                    )\r\n                },\r\n            },\r\n        ]\r\n        return (\r\n            <Fragment>\r\n                <AppBar position=\"static\" style={{ padding: 10, marginTop: 10, marginBottom: 10 }}>\r\n                    <Typography variant=\"h6\">\r\n                        <HomeIcon />  <span>Editar / Fornecedor</span>\r\n                    </Typography>\r\n                </AppBar>\r\n                {\r\n                    <LForms \r\n                        forms={forms}\r\n                        onChange={(e) => {this.onChange(e)}}\r\n                        request={(data) => { request(this.state.data, data) }}\r\n                        validate={(values) => { return validateFields(forms, values) }}\r\n                        loading={this.state.loading}\r\n                    >\r\n                        {this.state.data.id == undefined ? ('') :\r\n                        (<div>\r\n                            <Card style={{ marginBottom: 15 }}>\r\n                                <CardContent>\r\n                                    <Typography onClick={() => {\r\n                                            let filter = this.state.filter;\r\n                                            filter['responsaveis-ind'] = this.state.filter['responsaveis-ind'] == 'block' ? 'none' : 'block'\r\n                                            this.setState({ ...this.state, filter })\r\n                                        }}>\r\n                                        <IndeterminateCheckBoxIcon /> Responsáveis\r\n                                    </Typography>\r\n                                    <div style={{\r\n                                        display: this.state.filter['responsaveis-ind'] ?? 'block',\r\n                                    }}>\r\n                                    <div  style={{\r\n                                            alignItems: 'center',\r\n                                            justifyContent: 'start',\r\n                                            display: 'flex',\r\n                                        }}>\r\n                                        <SelectInput valueLabel=\"value\" \r\n                                            json={true} \r\n                                            valueLabel={'name'}\r\n                                            key={`input-${15019}`} id={\"manager\"} label={\"Responsável\"} name={\"manager\"} \r\n                                            values={this.state.managers} \r\n                                            style={{flexBasis: window.innerWidth < 768 ? '75%' : '75%', marginBottom: 15 }} \r\n                                            onChange={(e) => {\r\n                                                this.setState({...this.state, manager: e.target.value});\r\n                                            }} />\r\n                                            <Button variant=\"contained\" color=\"primary\" size=\"small\" disableElevation onClick={async () => {\r\n                                                let provManagers = this.state.provManagers;\r\n                                                const allmanagers = provManagers.find(x => x.id == this.state.manager)\r\n                                                if(allmanagers){\r\n                                                    this.props.setSnackbar({open: true, message: `O Responsável ${allmanagers.name} já está vinculado.`})\r\n                                                    return false;\r\n                                                }\r\n                                                const data = await getApiManagers({}, this.state.manager);\r\n                                                this.setState({...this.state, provManagers: undefined});\r\n                                                provManagers.push(data)\r\n                                                this.setState({...this.state, provManagers });\r\n                                                console.log(this.state.provManagers);\r\n                                                /*\r\n                                                await putApiProviders(`manager/${this.props.match.params.id}/${this.state.manager}`)\r\n                                                const data = await getApiProviders({}, this.props.match.params.id);\r\n                                                // let data = {...this.state.data};\r\n                                                // data = managers.managers\r\n                                                this.setState({...this.state, provManagers: data.managers });*/\r\n                                            }}><AddIcon /></Button>\r\n                                        </div>\r\n                                        <div style={{\r\n                                            alignItems: 'center',\r\n                                            justifyContent: 'start',\r\n                                            overflow: 'auto',\r\n                                            height: 350,\r\n                                            minHeight: 350,\r\n                                        }}>\r\n                                            { window.innerWidth > 720 ? (\r\n                                            <DataGrid sx={{\r\n                                                '& .MuiDataGrid-root': {\r\n                                                    '& .MuiDataGrid-viewport': {\r\n                                                        maxWidth: '600px',\r\n                                                    },\r\n                                                }\r\n                                            }}\r\n                                                rows={rows} columns={columns}\r\n                                                spacing={0}\r\n                                                stickyHeader\r\n                                                disableClickEventBubbling\r\n                                                disableColumnMenu={true}\r\n                                                localeText={DEFAULT_LOCALE_TEXT}\r\n                                                pageSize={10} rowsPerPageOptions={[10]} pagination\r\n                                            />) : rows.map((row, key) => {\r\n                                                //console.log(row);\r\n                                                return (\r\n                                                    <Card key={`card-container${key}`} style={{marginTop: 15}}>\r\n                                                        <CardContent>\r\n                                                        <List key={`list_field_${key}`} component=\"nav\">\r\n                                                            {Object.entries(row).map(field => {\r\n                                                                \r\n                                                                let headerName = columns.find(column => column.field === field[0]);\r\n                                                                if (headerName && headerName.field !== 'id') {\r\n                                                                    //console.log(field[1])\r\n                                                                    let value = headerName.valueFormatter ?? headerName.renderCell;\r\n                                                                    value = value == undefined ? field[1] : value(headerName.row == true ? {row} : {value: field[1]}); \r\n                                                                    if(headerName.renderCell !== undefined)\r\n                                                                    {\r\n                                                                        //console.log(row);\r\n                                                                        value = headerName.renderCell({value: field[1], row: row }, row);\r\n                                                                        //console.log(value);\r\n                                                                        return (\r\n                                                                            <ListItem style={{paddingTop: 0, paddingBottom: 0}}>\r\n                                                                                <ListItemText primary={`${headerName.headerName}`} secondary={value} />\r\n                                                                            </ListItem>\r\n                                                                        )\r\n                                                                    }else{\r\n                                                                        return (\r\n                                                                            <ListItem style={{paddingTop: 0, paddingBottom: 0}}>\r\n                                                                                <ListItemText primary={`${headerName.headerName}`} secondary={`${value}`} />\r\n                                                                            </ListItem>\r\n                                                                        )}\r\n                                                                    }\r\n                                                            })}\r\n                                                            </List>\r\n                                                        </CardContent>\r\n                                                        <CardActions style={{justifyContent: 'center'}}>\r\n                                                        {Object.entries(row).map(field => {\r\n                                                            let headerName = columns.find(column => column.field === field[0]);\r\n                                                            if(headerName && headerName.field == 'id') {\r\n                                                                return headerName.renderCell({value: field[1], row }, row);\r\n                                                            }\r\n                                                        })}\r\n                                                        </CardActions>\r\n                                                    </Card>\r\n                                                )\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                </CardContent>\r\n                            </Card>\r\n                            \r\n                            <Card style={{ marginBottom: 15 }}>\r\n                                <CardContent>\r\n                                    <Typography onClick={() => {\r\n                                            let filter = this.state.filter;\r\n                                            filter['fornecedores-ind'] = this.state.filter['fornecedores-ind'] == 'block' ? 'none' : 'block'\r\n                                            this.setState({ ...this.state, filter })\r\n                                        }}>\r\n                                        <IndeterminateCheckBoxIcon /> Fornecedores\r\n                                    </Typography>\r\n                                    <div style={{\r\n                                        display: this.state.filter['fornecedores-ind'] ?? 'block',\r\n                                    }}>\r\n                                    <div  style={{\r\n                                            alignItems: 'center',\r\n                                            justifyContent: 'start',\r\n                                            display: 'flex',\r\n                                        }}>\r\n                                        <SelectInput valueLabel=\"value\" \r\n                                            json={true} \r\n                                            valueLabel={'company_name'}\r\n                                            key={`input-${15019}`} id={\"provider\"} label={\"Filial\"} name={\"provider\"} \r\n                                            values={this.state.filials} \r\n                                            style={{flexBasis: window.innerWidth < 768 ? '75%' : '75%', marginBottom: 15 }} \r\n                                            onChange={(e) => {\r\n                                                this.setState({...this.state, provider: e.target.value});\r\n                                            }} />\r\n                                            <Button variant=\"contained\" color=\"primary\" size=\"small\" disableElevation onClick={async () => {\r\n                                                await putApiProviders(this.state.provider,{type: 2,matriz_id: this.state.data.matriz_id > 0 ? this.state.data.matriz_id : this.props.match.params.id})\r\n                                                const data = await getApiProviders({}, this.props.match.params.id);\r\n                                                this.setState({...this.state, provProviders: data.filials });\r\n                                            }}><AddIcon /></Button>\r\n                                        </div>\r\n                                    <div style={{\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'start',\r\n                                        overflow: 'auto',\r\n                                        height: 350,\r\n                                        minHeight: 350,\r\n                                    }}>\r\n                                        { window.innerWidth > 720 ? (\r\n                                        <DataGrid sx={{\r\n                                            '& .MuiDataGrid-root': {\r\n                                                '& .MuiDataGrid-viewport': {\r\n                                                    maxWidth: '600px',\r\n                                                },\r\n                                            }\r\n                                        }}\r\n                                            rows={rowsProv} columns={columnsProv}\r\n                                            spacing={0}\r\n                                            stickyHeader\r\n                                            disableClickEventBubbling\r\n                                            disableColumnMenu={true}\r\n                                            localeText={DEFAULT_LOCALE_TEXT}\r\n                                            pageSize={10} rowsPerPageOptions={[10]} pagination\r\n                                        />\r\n                                        ) : rowsProv.map((row, key) => {\r\n                                            //console.log(row);\r\n                                            return (\r\n                                                <Card key={`card-container${key}`} style={{marginTop: 15}}>\r\n                                                    <CardContent>\r\n                                                    <List key={`list_field_${key}`} component=\"nav\">\r\n                                                        {Object.entries(row).map(field => {\r\n                                                            let headerName = columnsProv.find(column => (column.field === field[0] || field[0] == 'contact' && column.field == 'phone1' || field[0] == 'contact_clone' && column.field == 'email' ));\r\n                                                            if (headerName && headerName.field !== 'id') {\r\n                                                                //console.log(headerName)\r\n                                                                let value = headerName.valueFormatter ?? headerName.renderCell;\r\n                                                                value = value == undefined ? field[1] : value(headerName.row == true ? {row, value: field[1]} : {value: field[1]}); \r\n                                                                if(headerName.renderCell !== undefined)\r\n                                                                {\r\n                                                                    //console.log(row);\r\n                                                                    value = headerName.renderCell({value: field[1], row: row }, row);\r\n                                                                    //console.log(value);\r\n                                                                    return (\r\n                                                                        <ListItem style={{paddingTop: 0, paddingBottom: 0}}>\r\n                                                                            <ListItemText primary={`${headerName.headerName}`} secondary={value} />\r\n                                                                        </ListItem>\r\n                                                                    )\r\n                                                                }else{\r\n                                                                    return (\r\n                                                                        <ListItem style={{paddingTop: 0, paddingBottom: 0}}>\r\n                                                                            <ListItemText primary={`${headerName.headerName}`} secondary={`${value}`} />\r\n                                                                        </ListItem>\r\n                                                                    )}\r\n                                                                }\r\n                                                        })}\r\n                                                        </List>\r\n                                                    </CardContent>\r\n                                                    <CardActions style={{justifyContent: 'center'}}>\r\n                                                    {Object.entries(row).map(field => {\r\n                                                        let headerName = columnsProv.find(column => column.field === field[0]);\r\n                                                        if(headerName && headerName.field == 'id') {\r\n                                                            return headerName.renderCell({value: field[1], row }, row);\r\n                                                        }\r\n                                                    })}\r\n                                                    </CardActions>\r\n                                                </Card>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                    </div>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </div>)\r\n                        }\r\n                    </LForms>\r\n                }\r\n                { this.state.data.audits &&\r\n                    <Paper style={{ marginTop: 10, marginBottom: 10, padding: 15, height: window.innerWidth < 720 ? 210 : 90 }}>\r\n                        <div style={{ float: 'left', maxWidth: 350 }}>\r\n                            <Typography variant=\"subtitle1\" style={{ padding: 10 }}>\r\n                                Data de cadastro:  <b>{stringToaddDate(this.state.data.created_at, 'DD/MM/YYYY', { qtd: 1, period: 'days' })}</b>&nbsp;\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" style={{ padding: 10 }}>\r\n                                Última alteração:  <b>{stringToaddDate(this.state.data.updated_at, 'DD/MM/YYYY', { qtd: 1, period: 'days' })}</b>\r\n                            </Typography>\r\n                        </div>\r\n                        <div style={{ float: 'left', maxWidth: 350 }}>\r\n                            <Typography variant=\"subtitle1\" style={{ padding: 10 }}>\r\n                                Id:  <b>{this.state.data.audits.user.id}</b>\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" style={{ padding: 10 }}>\r\n                                Usuário:  <b>{this.state.data.audits.user.name}</b>\r\n                            </Typography>\r\n                        </div>\r\n                    </Paper>\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = store => ({\r\n    session: store.authReducer.data,\r\n    snackbar: store.appReducer.snackbar\r\n});\r\nconst mapDispatchToProps = dispatch =>\r\n    bindActionCreators({ setSnackbar }, dispatch);\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditProviders))\r\n"]},"metadata":{},"sourceType":"module"}