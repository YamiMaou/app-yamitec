{"ast":null,"code":"import moment from 'moment';\nexport var stringToDate = function stringToDate(_date, _format) {\n  return moment(_date).format(_format);\n};\nexport var stringToaddDate = function stringToaddDate(_date, _format) {\n  var add = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    qtd: 1,\n    period: 'M'\n  };\n  return moment(_date).add(add.qtd, add.period).format(_format);\n};\nexport var isFutureData = function isFutureData(_value) {\n  var today = Date.now();\n  return new Date(_value) < today;\n};\nexport var formatToBRL = function formatToBRL(_valor) {\n  _valor = _valor + '';\n  _valor = parseInt(_valor.replace(/[\\D]+/g, ''));\n  _valor = _valor + '';\n  _valor = _valor.replace(/([0-9]{2})$/g, \",$1\");\n\n  if (_valor.length > 6) {\n    _valor = _valor.replace(/([0-9]{3}),([0-9]{2}$)/g, \".$1,$2\");\n  }\n\n  return _valor;\n};\nexport var checkImageUrl = function checkImageUrl(imageUrl) {\n  var img = new Image();\n  img.src = imageUrl;\n\n  if (img.height > 0) {\n    return true;\n  } else {\n    return false;\n  }\n};\nexport function validaEmail(email) {\n  var emailCheck = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n  return emailCheck.test(email);\n}\nexport function validaCpf() {\n  var strCPF = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  strCPF = strCPF.replace(/[^\\d]+/g, '');\n  var Soma;\n  var Resto;\n  Soma = 0;\n  if (strCPF.length != 11 || strCPF == \"00000000000\" || strCPF == \"11111111111\" || strCPF == \"22222222222\" || strCPF == \"33333333333\" || strCPF == \"44444444444\" || strCPF == \"55555555555\" || strCPF == \"66666666666\" || strCPF == \"77777777777\" || strCPF == \"88888888888\" || strCPF == \"99999999999\") return false;\n  if (strCPF.length < 11) return false;\n  if (strCPF.length < 11) return false;\n\n  for (var _i = 1; _i <= 9; _i++) {\n    Soma = Soma + parseInt(strCPF.substring(_i - 1, _i)) * (11 - _i);\n  }\n\n  Resto = Soma * 10 % 11;\n  if (Resto == 10 || Resto == 11) Resto = 0;\n  if (Resto != parseInt(strCPF.substring(9, 10))) return false;\n  Soma = 0;\n\n  for (var _i2 = 1; _i2 <= 10; _i2++) {\n    Soma = Soma + parseInt(strCPF.substring(_i2 - 1, _i2)) * (12 - _i2);\n  }\n\n  ;\n  Resto = Soma * 10 % 11;\n  if (Resto == 10 || Resto == 11) Resto = 0;\n  if (Resto != parseInt(strCPF.substring(10, 11))) return false;\n  return true;\n}\nexport function validaCnpj(value) {\n  var cnpj = value.replace(/[^\\d]+/g, '');\n  if (cnpj == '') return false;\n  if (cnpj.length != 14) return false;\n  if (cnpj == \"00000000000000\" || cnpj == \"11111111111111\" || cnpj == \"22222222222222\" || cnpj == \"33333333333333\" || cnpj == \"44444444444444\" || cnpj == \"55555555555555\" || cnpj == \"66666666666666\" || cnpj == \"77777777777777\" || cnpj == \"88888888888888\" || cnpj == \"99999999999999\") return false;\n  var tamanho = cnpj.length - 2;\n  var numeros = cnpj.substring(0, tamanho);\n  var digitos = cnpj.substring(tamanho);\n  var soma = 0;\n  var pos = tamanho - 7;\n\n  for (var _i3 = tamanho; _i3 >= 1; _i3--) {\n    soma += numeros.charAt(tamanho - _i3) * pos--;\n    if (pos < 2) pos = 9;\n  }\n\n  var resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\n  if (resultado != digitos.charAt(0)) return false;\n  tamanho = tamanho + 1;\n  numeros = cnpj.substring(0, tamanho);\n  soma = 0;\n  pos = tamanho - 7;\n\n  for (i = tamanho; i >= 1; i--) {\n    soma += numeros.charAt(tamanho - i) * pos--;\n    if (pos < 2) pos = 9;\n  }\n\n  resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\n  if (resultado != digitos.charAt(1)) return false;\n  return true;\n}","map":{"version":3,"sources":["C:/Users/Maou/Documents/Projetos/CLIENTES/RNF/Completo/client/src/providers/commonMethods/index.js"],"names":["moment","stringToDate","_date","_format","format","stringToaddDate","add","qtd","period","isFutureData","_value","today","Date","now","formatToBRL","_valor","parseInt","replace","length","checkImageUrl","imageUrl","img","Image","src","height","validaEmail","email","emailCheck","test","validaCpf","strCPF","Soma","Resto","i","substring","validaCnpj","value","cnpj","tamanho","numeros","digitos","soma","pos","charAt","resultado"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAOC,OAAP,EAC5B;AACE,SAAOH,MAAM,CAACE,KAAD,CAAN,CAAcE,MAAd,CAAqBD,OAArB,CAAP;AACD,CAHM;AAIP,OAAO,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACH,KAAD,EAAOC,OAAP,EAC/B;AAAA,MAD8CG,GAC9C,uEADoD;AAAEC,IAAAA,GAAG,EAAG,CAAR;AAAWC,IAAAA,MAAM,EAAG;AAApB,GACpD;AACE,SAAOR,MAAM,CAACE,KAAD,CAAN,CAAcI,GAAd,CAAkBA,GAAG,CAACC,GAAtB,EAA2BD,GAAG,CAACE,MAA/B,EAAuCJ,MAAvC,CAA8CD,OAA9C,CAAP;AACD,CAHM;AAKP,OAAO,IAAMM,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAAY;AACtC,MAAIC,KAAK,GAAGC,IAAI,CAACC,GAAL,EAAZ;AACA,SAAO,IAAID,IAAJ,CAASF,MAAT,IAAmBC,KAA1B;AACD,CAHM;AAIP,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAAY;AAErCA,EAAAA,MAAM,GAAGA,MAAM,GAAG,EAAlB;AACAA,EAAAA,MAAM,GAAGC,QAAQ,CAACD,MAAM,CAACE,OAAP,CAAe,QAAf,EAAwB,EAAxB,CAAD,CAAjB;AACAF,EAAAA,MAAM,GAAGA,MAAM,GAAG,EAAlB;AACAA,EAAAA,MAAM,GAAGA,MAAM,CAACE,OAAP,CAAe,cAAf,EAA+B,KAA/B,CAAT;;AAEA,MAAIF,MAAM,CAACG,MAAP,GAAgB,CAApB,EAAuB;AACrBH,IAAAA,MAAM,GAAGA,MAAM,CAACE,OAAP,CAAe,yBAAf,EAA0C,QAA1C,CAAT;AACD;;AAED,SAAOF,MAAP;AACD,CAZM;AAcP,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAACC,QAAD,EAAc;AACzC,MAAIC,GAAG,GAAG,IAAIC,KAAJ,EAAV;AACAD,EAAAA,GAAG,CAACE,GAAJ,GAAUH,QAAV;;AACA,MAAGC,GAAG,CAACG,MAAJ,GAAW,CAAd,EAAgB;AACd,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WAAO,KAAP;AACD;AACF,CARM;AASP,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA2B;AAEhC,MAAIC,UAAU,GAAG,sHAAjB;AAEA,SAAOA,UAAU,CAACC,IAAX,CAAgBF,KAAhB,CAAP;AACD;AACD,OAAO,SAASG,SAAT,GAAgC;AAAA,MAAbC,MAAa,uEAAJ,EAAI;AAErCA,EAAAA,MAAM,GAAGA,MAAM,CAACb,OAAP,CAAe,SAAf,EAA0B,EAA1B,CAAT;AACA,MAAIc,IAAJ;AACA,MAAIC,KAAJ;AACAD,EAAAA,IAAI,GAAG,CAAP;AACA,MAAID,MAAM,CAACZ,MAAP,IAAiB,EAAjB,IACFY,MAAM,IAAI,aADR,IAEFA,MAAM,IAAI,aAFR,IAGFA,MAAM,IAAI,aAHR,IAIFA,MAAM,IAAI,aAJR,IAKFA,MAAM,IAAI,aALR,IAMFA,MAAM,IAAI,aANR,IAOFA,MAAM,IAAI,aAPR,IAQFA,MAAM,IAAI,aARR,IASFA,MAAM,IAAI,aATR,IAUFA,MAAM,IAAI,aAVZ,EAWE,OAAO,KAAP;AACJ,MAAIA,MAAM,CAACZ,MAAP,GAAgB,EAApB,EAAwB,OAAO,KAAP;AAExB,MAAIY,MAAM,CAACZ,MAAP,GAAgB,EAApB,EAAyB,OAAO,KAAP;;AACzB,OAAK,IAAIe,EAAC,GAAC,CAAX,EAAcA,EAAC,IAAE,CAAjB,EAAoBA,EAAC,EAArB,EAAyB;AACvBF,IAAAA,IAAI,GAAGA,IAAI,GAAGf,QAAQ,CAACc,MAAM,CAACI,SAAP,CAAiBD,EAAC,GAAC,CAAnB,EAAsBA,EAAtB,CAAD,CAAR,IAAsC,KAAKA,EAA3C,CAAd;AACD;;AACDD,EAAAA,KAAK,GAAID,IAAI,GAAG,EAAR,GAAc,EAAtB;AAEE,MAAKC,KAAK,IAAI,EAAV,IAAkBA,KAAK,IAAI,EAA/B,EAAqCA,KAAK,GAAG,CAAR;AACrC,MAAIA,KAAK,IAAIhB,QAAQ,CAACc,MAAM,CAACI,SAAP,CAAiB,CAAjB,EAAoB,EAApB,CAAD,CAArB,EAAiD,OAAO,KAAP;AAEnDH,EAAAA,IAAI,GAAG,CAAP;;AACE,OAAK,IAAIE,GAAC,GAAG,CAAb,EAAgBA,GAAC,IAAI,EAArB,EAAyBA,GAAC,EAA1B,EAA8B;AAC5BF,IAAAA,IAAI,GAAGA,IAAI,GAAGf,QAAQ,CAACc,MAAM,CAACI,SAAP,CAAiBD,GAAC,GAAC,CAAnB,EAAsBA,GAAtB,CAAD,CAAR,IAAsC,KAAKA,GAA3C,CAAd;AACD;;AAAA;AACDD,EAAAA,KAAK,GAAID,IAAI,GAAG,EAAR,GAAc,EAAtB;AAEA,MAAKC,KAAK,IAAI,EAAV,IAAkBA,KAAK,IAAI,EAA/B,EAAqCA,KAAK,GAAG,CAAR;AACrC,MAAIA,KAAK,IAAIhB,QAAQ,CAACc,MAAM,CAACI,SAAP,CAAiB,EAAjB,EAAqB,EAArB,CAAD,CAArB,EAAmD,OAAO,KAAP;AACnD,SAAO,IAAP;AACD;AAED,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAEhC,MAAIC,IAAI,GAAGD,KAAK,CAACnB,OAAN,CAAc,SAAd,EAAwB,EAAxB,CAAX;AAEA,MAAGoB,IAAI,IAAI,EAAX,EAAe,OAAO,KAAP;AAEf,MAAIA,IAAI,CAACnB,MAAL,IAAe,EAAnB,EACI,OAAO,KAAP;AAGJ,MAAImB,IAAI,IAAI,gBAAR,IACAA,IAAI,IAAI,gBADR,IAEAA,IAAI,IAAI,gBAFR,IAGAA,IAAI,IAAI,gBAHR,IAIAA,IAAI,IAAI,gBAJR,IAKAA,IAAI,IAAI,gBALR,IAMAA,IAAI,IAAI,gBANR,IAOAA,IAAI,IAAI,gBAPR,IAQAA,IAAI,IAAI,gBARR,IASAA,IAAI,IAAI,gBATZ,EAUI,OAAO,KAAP;AAGJ,MAAIC,OAAO,GAAGD,IAAI,CAACnB,MAAL,GAAc,CAA5B;AACA,MAAIqB,OAAO,GAAGF,IAAI,CAACH,SAAL,CAAe,CAAf,EAAiBI,OAAjB,CAAd;AACA,MAAIE,OAAO,GAAGH,IAAI,CAACH,SAAL,CAAeI,OAAf,CAAd;AACA,MAAIG,IAAI,GAAG,CAAX;AACA,MAAIC,GAAG,GAAGJ,OAAO,GAAG,CAApB;;AACA,OAAK,IAAIL,GAAC,GAAGK,OAAb,EAAsBL,GAAC,IAAI,CAA3B,EAA8BA,GAAC,EAA/B,EAAmC;AACjCQ,IAAAA,IAAI,IAAIF,OAAO,CAACI,MAAR,CAAeL,OAAO,GAAGL,GAAzB,IAA8BS,GAAG,EAAzC;AACA,QAAIA,GAAG,GAAG,CAAV,EACMA,GAAG,GAAG,CAAN;AACP;;AACD,MAAIE,SAAS,GAAGH,IAAI,GAAG,EAAP,GAAY,CAAZ,GAAgB,CAAhB,GAAoB,KAAKA,IAAI,GAAG,EAAhD;AACA,MAAIG,SAAS,IAAIJ,OAAO,CAACG,MAAR,CAAe,CAAf,CAAjB,EACI,OAAO,KAAP;AAEJL,EAAAA,OAAO,GAAGA,OAAO,GAAG,CAApB;AACAC,EAAAA,OAAO,GAAGF,IAAI,CAACH,SAAL,CAAe,CAAf,EAAiBI,OAAjB,CAAV;AACAG,EAAAA,IAAI,GAAG,CAAP;AACAC,EAAAA,GAAG,GAAGJ,OAAO,GAAG,CAAhB;;AACA,OAAKL,CAAC,GAAGK,OAAT,EAAkBL,CAAC,IAAI,CAAvB,EAA0BA,CAAC,EAA3B,EAA+B;AAC7BQ,IAAAA,IAAI,IAAIF,OAAO,CAACI,MAAR,CAAeL,OAAO,GAAGL,CAAzB,IAA8BS,GAAG,EAAzC;AACA,QAAIA,GAAG,GAAG,CAAV,EACMA,GAAG,GAAG,CAAN;AACP;;AACDE,EAAAA,SAAS,GAAGH,IAAI,GAAG,EAAP,GAAY,CAAZ,GAAgB,CAAhB,GAAoB,KAAKA,IAAI,GAAG,EAA5C;AACA,MAAIG,SAAS,IAAIJ,OAAO,CAACG,MAAR,CAAe,CAAf,CAAjB,EACM,OAAO,KAAP;AAEN,SAAO,IAAP;AAED","sourcesContent":["import moment from 'moment';\r\nexport const stringToDate = (_date,_format) =>\r\n{\r\n  return moment(_date).format(_format);\r\n}\r\nexport const stringToaddDate = (_date,_format,add = { qtd : 1, period : 'M'}) =>\r\n{\r\n  return moment(_date).add(add.qtd, add.period).format(_format);\r\n}\r\n\r\nexport const isFutureData = (_value) => {\r\n  let today = Date.now()\r\n  return new Date(_value) < today;\r\n}\r\nexport const formatToBRL = (_valor) => {\r\n  \r\n  _valor = _valor + '';\r\n  _valor = parseInt(_valor.replace(/[\\D]+/g,''));\r\n  _valor = _valor + '';\r\n  _valor = _valor.replace(/([0-9]{2})$/g, \",$1\");\r\n\r\n  if (_valor.length > 6) {\r\n    _valor = _valor.replace(/([0-9]{3}),([0-9]{2}$)/g, \".$1,$2\");\r\n  }\r\n\r\n  return _valor;\r\n}\r\n\r\nexport const checkImageUrl = (imageUrl) => {\r\n  var img = new Image();\r\n  img.src = imageUrl;\r\n  if(img.height>0){\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\nexport function validaEmail(email){\r\n  //let emailCheck = /^([a-z]){1,}([a-z0-9._-]){1,}([@]){1}([a-z]){2,}([.]){1}([a-z]){2,}([.]?){1}([a-z]?){2,}$/i;\r\n  let emailCheck = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n  \r\n  return emailCheck.test(email);\r\n}\r\nexport function validaCpf(strCPF = \"\") {\r\n  //console.log(strCPF);\r\n  strCPF = strCPF.replace(/[^\\d]+/g, '');\r\n  var Soma;\r\n  var Resto;\r\n  Soma = 0;\r\n  if (strCPF.length != 11 ||\r\n    strCPF == \"00000000000\" ||\r\n    strCPF == \"11111111111\" ||\r\n    strCPF == \"22222222222\" ||\r\n    strCPF == \"33333333333\" ||\r\n    strCPF == \"44444444444\" ||\r\n    strCPF == \"55555555555\" ||\r\n    strCPF == \"66666666666\" ||\r\n    strCPF == \"77777777777\" ||\r\n    strCPF == \"88888888888\" ||\r\n    strCPF == \"99999999999\")\r\n    return false;\r\nif (strCPF.length < 11) return false;\r\n\r\nif (strCPF.length < 11 ) return false;\r\nfor (let i=1; i<=9; i++) {\r\n  Soma = Soma + parseInt(strCPF.substring(i-1, i)) * (11 - i);\r\n}\r\nResto = (Soma * 10) % 11;\r\n\r\n  if ((Resto == 10) || (Resto == 11))  Resto = 0;\r\n  if (Resto != parseInt(strCPF.substring(9, 10)) ) return false;\r\n\r\nSoma = 0;\r\n  for (let i = 1; i <= 10; i++) {\r\n    Soma = Soma + parseInt(strCPF.substring(i-1, i)) * (12 - i)\r\n  };\r\n  Resto = (Soma * 10) % 11;\r\n\r\n  if ((Resto == 10) || (Resto == 11))  Resto = 0;\r\n  if (Resto != parseInt(strCPF.substring(10, 11) ) ) return false;\r\n  return true; //strCPF.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/, \"$1.$2.$3-$4\");\r\n}\r\n\r\nexport function validaCnpj(value) {\r\n \r\n  let cnpj = value.replace(/[^\\d]+/g,'');\r\n\r\n  if(cnpj == '') return false;\r\n   \r\n  if (cnpj.length != 14)\r\n      return false;\r\n\r\n  // Elimina CNPJs invalidos conhecidos\r\n  if (cnpj == \"00000000000000\" || \r\n      cnpj == \"11111111111111\" || \r\n      cnpj == \"22222222222222\" || \r\n      cnpj == \"33333333333333\" || \r\n      cnpj == \"44444444444444\" || \r\n      cnpj == \"55555555555555\" || \r\n      cnpj == \"66666666666666\" || \r\n      cnpj == \"77777777777777\" || \r\n      cnpj == \"88888888888888\" || \r\n      cnpj == \"99999999999999\")\r\n      return false;\r\n       \r\n  // Valida DVs\r\n  let tamanho = cnpj.length - 2\r\n  let numeros = cnpj.substring(0,tamanho);\r\n  let digitos = cnpj.substring(tamanho);\r\n  let soma = 0;\r\n  let pos = tamanho - 7;\r\n  for (let i = tamanho; i >= 1; i--) {\r\n    soma += numeros.charAt(tamanho - i) * pos--;\r\n    if (pos < 2)\r\n          pos = 9;\r\n  }\r\n  let resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\r\n  if (resultado != digitos.charAt(0))\r\n      return false;\r\n       \r\n  tamanho = tamanho + 1;\r\n  numeros = cnpj.substring(0,tamanho);\r\n  soma = 0;\r\n  pos = tamanho - 7;\r\n  for (i = tamanho; i >= 1; i--) {\r\n    soma += numeros.charAt(tamanho - i) * pos--;\r\n    if (pos < 2)\r\n          pos = 9;\r\n  }\r\n  resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\r\n  if (resultado != digitos.charAt(1))\r\n        return false;\r\n         \r\n  return true;\r\n  \r\n}"]},"metadata":{},"sourceType":"module"}