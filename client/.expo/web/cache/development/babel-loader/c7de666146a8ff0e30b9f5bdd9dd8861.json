{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Maou\\\\Documents\\\\Projetos\\\\CLIENTES\\\\RNF\\\\Completo\\\\client\\\\src\\\\components\\\\Forms\\\\index.js\",\n    _this = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, Fragment, useState, useRef, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { setSnackbar } from \"../../actions/appActions\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Select from '@material-ui/core/Select';\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\nimport ptBR from \"date-fns/locale/pt-BR\";\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { getApiDownloadFile } from \"../../providers/api\";\nimport MaskedInput from 'react-text-mask';\nvar idNumbers = ['cpf', 'cnpj', 'zipcode'];\n\nfunction TextMaskCustom(props) {\n  var inputRef = props.inputRef,\n      other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return React.createElement(MaskedInput, _extends({}, other, {\n    ref: function ref(_ref) {\n      inputRef(_ref ? _ref.inputElement : null);\n    },\n    value: props.value,\n    onChange: props.onChange,\n    onBlur: props.onChange,\n    mask: props.mask,\n    placeholderChar: \"\\u2000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }));\n}\n\nvar CheckBoxInput = function CheckBoxInput(props) {\n  var _false, _props$disabled;\n\n  var _useState = useState(props.value == \"1\" ? true : (_false = false) != null ? _false : false),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  function handleChange(e) {\n    var _e$target = e.target,\n        checked = _e$target.checked,\n        id = _e$target.id;\n\n    if (props.validate !== undefined) {\n      if (props.validate(checked)) {\n        setError(false);\n      } else {\n        setError(true);\n      }\n    }\n\n    var target = {\n      id: id,\n      value: checked ? \"1\" : \"0\",\n      type: 'checkbox'\n    };\n    props.onChange({\n      target: target,\n      type: 'checkbox'\n    });\n    setValue(checked);\n  }\n\n  return React.createElement(\"div\", {\n    key: \"check-\" + props.id,\n    style: _objectSpread({}, props.style),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: value,\n      disabled: (_props$disabled = props.disabled) != null ? _props$disabled : false,\n      onChange: handleChange,\n      name: props.id,\n      id: props.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 18\n      }\n    }),\n    label: props.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar FileInput = function FileInput(props) {\n  var _props$value, _props$file, _props$file2;\n\n  var _useState5 = useState((_props$value = props.value) != null ? _props$value : undefined),\n      _useState6 = _slicedToArray(_useState5, 2),\n      value = _useState6[0],\n      setValue = _useState6[1];\n\n  var _useState7 = useState((_props$file = props.file) != null ? _props$file : undefined),\n      _useState8 = _slicedToArray(_useState7, 2),\n      file = _useState8[0],\n      setFile = _useState8[1];\n\n  var _useState9 = useState((_props$file2 = !props.file) != null ? _props$file2 : true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      replace = _useState10[0],\n      setReplace = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      error = _useState12[0],\n      setError = _useState12[1];\n\n  function handleChange(e) {\n    var _e$target2 = e.target,\n        value = _e$target2.value,\n        id = _e$target2.id;\n\n    if (props.validate !== undefined) {\n      if (props.validate(value)) {\n        setError(false);\n      } else {\n        setError(true);\n      }\n    }\n\n    props.onChange({\n      target: {\n        id: id,\n        value: e.target.files[0],\n        type: 'file'\n      }\n    });\n    setValue(e.target.value);\n  }\n\n  return React.createElement(FormControl, {\n    style: props.style,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, file === undefined || replace ? React.createElement(Button, {\n    variant: \"outlined\",\n    component: \"label\",\n    endIcon: React.createElement(Icon, {\n      name: \"arrow-circle-up\",\n      size: 18,\n      color: \"#025ea2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 69\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 14\n    }\n  }, value !== undefined ? React.createElement(\"b\", {\n    style: {\n      color: 'red'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, React.createElement(\"a\", {\n    href: \"file:///\" + value,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, value.split(/(\\\\|\\/)/g).pop(), \" \")) : props.label, React.createElement(\"input\", {\n    type: \"file\",\n    hidden: true,\n    onChange: handleChange,\n    onBlur: handleChange,\n    name: props.id,\n    id: props.id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  })) : React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    component: \"label\",\n    endIcon: React.createElement(Icon, {\n      name: \"remove\",\n      size: 18,\n      color: \"red\",\n      onClick: function onClick() {\n        setReplace(true);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"Baixar Arquivo\", React.createElement(Icon, {\n    name: \"arrow-circle-down\",\n    size: 18,\n    color: \"#025ea2\",\n    onClick: function onClick() {\n      getApiDownloadFile(file);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }))));\n};\n\nfunction TextInputCustom(props) {\n  var _props$value2, _props$required, _props$type, _props$helperText, _props$required2, _props$helperText2;\n\n  var inputRef = props.inputRef,\n      other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  var _useState13 = useState((_props$value2 = props.value) != null ? _props$value2 : \"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      value = _useState14[0],\n      setValue = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      error = _useState16[0],\n      setError = _useState16[1];\n\n  function handleChange(e) {\n    var id = e.target.id;\n    var val = e.target.value;\n    setValue(val);\n\n    if (props.validate !== undefined) {\n      if (props.validate(val) !== false) {\n        setError(false);\n      } else {\n        setError(true);\n      }\n    }\n\n    props.onChange(e);\n  }\n\n  if (props.mask === undefined) return React.createElement(TextField, {\n    key: \"input-\" + props.id,\n    size: \"small\",\n    style: props.style,\n    required: (_props$required = props.required) != null ? _props$required : false,\n    error: error,\n    type: (_props$type = props.type) != null ? _props$type : \"text\",\n    value: value,\n    helperText: error == true ? (_props$helperText = props.helperText) != null ? _props$helperText : \"conteúdo inválido\" : \"\",\n    id: props.id,\n    label: props.label,\n    onChange: handleChange,\n    onBlur: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  });else return React.createElement(FormControl, {\n    key: \"input-\" + props.id,\n    style: props.style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, React.createElement(InputLabel, {\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, props.label), React.createElement(Input, {\n    required: (_props$required2 = props.required) != null ? _props$required2 : false,\n    size: \"small\",\n    key: \"input-\" + props.id,\n    error: error,\n    onChange: handleChange,\n    onBlur: handleChange,\n    name: props.name,\n    value: value,\n    id: props.id,\n    \"aria-describedby\": \"component-error-text\",\n    inputProps: {\n      mask: props.mask\n    },\n    inputComponent: TextMaskCustom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }), error == true ? React.createElement(FormHelperText, {\n    id: \"component-error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }\n  }, (_props$helperText2 = props.helperText) != null ? _props$helperText2 : \"conteúdo inválido\") : '');\n}\n\nvar DateInput = function DateInput(props) {\n  var _props$label, _props$required3, _props$label2, _props$helperText3;\n\n  var valueDate = new Date(props.value);\n\n  var _useState17 = useState(props.value),\n      _useState18 = _slicedToArray(_useState17, 2),\n      value = _useState18[0],\n      setValue = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      error = _useState20[0],\n      setError = _useState20[1];\n\n  function handleChange(e) {\n    setValue(e.target.value);\n    console.log(e);\n\n    try {\n      if (props.validate !== undefined) {\n        if (props.validate(e.target.value)) {\n          setError(false);\n        } else {\n          setError(true);\n        }\n      }\n\n      props.onChange(e);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return React.createElement(\"form\", {\n    noValidate: true,\n    style: _objectSpread(_objectSpread({}, props.style), {}, {\n      marginTop: 20\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }, React.createElement(TextField, {\n    id: props.id,\n    label: (_props$label = props.label) != null ? _props$label : 'Data',\n    type: \"date\",\n    defaultValue: value,\n    onChange: handleChange,\n    onBlur: handleChange,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 15\n    }\n  }));\n  return React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    locale: ptBR,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }, React.createElement(Grid, {\n    style: _objectSpread(_objectSpread({}, props.style), {}, {\n      marginTop: 18\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }\n  }, React.createElement(KeyboardDatePicker, {\n    required: (_props$required3 = props.required) != null ? _props$required3 : false,\n    margin: \"normal\",\n    id: props.id,\n    label: (_props$label2 = props.label) != null ? _props$label2 : 'Data',\n    error: error,\n    helperText: props.error ? (_props$helperText3 = props.helperText) != null ? _props$helperText3 : \"conteúdo inválido\" : \"\",\n    format: \"dd/MM/yyyy\",\n    autoOk: true,\n    disableFuture: true,\n    value: value,\n    allowKeyboardControl: false,\n    cancelLabel: \"Cancelar\",\n    onChange: handleChange,\n    onBlur: handleChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  })));\n};\n\nvar SelectInput = function SelectInput(props) {\n  var _props$value3;\n\n  var _useState21 = useState((_props$value3 = props.value) != null ? _props$value3 : \"Selecione\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      value = _useState22[0],\n      setValue = _useState22[1];\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      error = _useState24[0],\n      setError = _useState24[1];\n\n  function handleChange(e) {\n    var _e$target3 = e.target,\n        value = _e$target3.value,\n        id = _e$target3.id;\n\n    if (props.validate !== undefined) {\n      if (props.validate(value)) {\n        setError(false);\n      } else {\n        setError(true);\n      }\n    }\n\n    props.onChange(e);\n    setValue(e.target.value);\n  }\n\n  return React.createElement(FormControl, {\n    id: props.column,\n    style: _objectSpread(_objectSpread({}, props.style), {}, {\n      marginTop: '25px'\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }\n  }, React.createElement(InputLabel, {\n    id: props.column,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }, props.label), React.createElement(Select, {\n    size: \"small\",\n    labelId: props.id,\n    id: props.id,\n    name: props.name,\n    value: value,\n    error: error,\n    placeholder: \"Selecione\",\n    onChange: handleChange,\n    onBlur: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }\n  }, React.createElement(MenuItem, {\n    key: \"input-00\",\n    value: \"Selecione\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 17\n    }\n  }, \"Selecione\"), props.values.map(function (val, ind) {\n    return React.createElement(MenuItem, {\n      key: \"input-\" + ind,\n      value: val,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 32\n      }\n    }, val);\n  })));\n};\n\nvar LForms = function (_Component) {\n  _inherits(LForms, _Component);\n\n  var _super = _createSuper(LForms);\n\n  function LForms() {\n    var _this2;\n\n    _classCallCheck(this, LForms);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.state = {\n      data: [],\n      inputVal: {},\n      filter: ['flex']\n    };\n    return _this2;\n  }\n\n  _createClass(LForms, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var inputValues = {};\n      var formValidate = {};\n      this.props.forms.map(function (form, ind) {\n        var ifjson = {};\n        form.fields.map(function (input, ind1) {\n          var _input$value, _form$json, _input$value2, _input$value3;\n\n          ifjson[input.column] = (_input$value = input.value) != null ? _input$value : '';\n          inputValues[(_form$json = form.json) != null ? _form$json : input.column] = form.json == undefined ? (_input$value2 = input.value) != null ? _input$value2 : '' : ifjson;\n          formValidate[input.column] = (_input$value3 = input.value) != null ? _input$value3 : '';\n        });\n      });\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        inputVal: inputValues,\n        formValidate: formValidate\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var mainChange = function mainChange(e, params) {\n        var _e$target$id;\n\n        var inputValues = _this3.state.inputVal;\n        var formValidate = _this3.state.formValidate;\n        var value = e.target.value;\n        var id = (_e$target$id = e.target.id) != null ? _e$target$id : e.target.name;\n\n        if (idNumbers.includes(e.target.id)) {\n          value = value.replace(/[^\\d]+/g, '');\n        }\n\n        if (e.target.type !== \"file\" && (value.length == 0 || value == '' || value == 'Selecione')) {\n          if (params.json === undefined) {\n            inputValues[id] = '';\n          } else {\n            if (inputValues[params.json] == undefined) {\n              inputValues[params.json] = {};\n            }\n\n            inputValues[params.json][id] = '';\n          }\n        } else {\n          if (id == 'created_at') {\n            value = \"\" + value.toJSON().split('T')[0];\n          }\n\n          if (idNumbers.includes(id)) {\n            value = value.replace(/[^\\d]+/g, '');\n          }\n\n          if (params.handle !== undefined) {}\n\n          if (params.json === undefined) {\n            inputValues[id] = value;\n          } else {\n            if (inputValues[params.json] == undefined) {\n              inputValues[params.json] = {};\n            }\n\n            inputValues[params.json][id] = value;\n          }\n        }\n\n        formValidate[id] = value;\n\n        _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n          inputVal: inputValues,\n          formValidate: formValidate\n        }));\n      };\n\n      var classes = {\n        m5: {\n          margin: 5,\n          marginTop: 25,\n          width: window.innerWidth > 780 ? '30%' : '100%'\n        },\n        root: {\n          maxWidth: 345,\n          marginBottom: 25\n        },\n        media: {\n          height: 140\n        }\n      };\n      var flexBasis = '22%';\n      return React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }\n      }, this.props.forms.map(function (form, ind) {\n        var _form$id, _form$flexFlow, _this3$state$filter$i;\n\n        return React.createElement(\"div\", {\n          key: \"card-\" + ind + \"-root\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 29\n          }\n        }, React.createElement(Card, {\n          style: {\n            marginBottom: 15\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 33\n          }\n        }, React.createElement(CardContent, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 37\n          }\n        }, React.createElement(Typography, {\n          onClick: function onClick() {\n            var filter = _this3.state.filter;\n            filter[ind] = _this3.state.filter[ind] == 'flex' ? 'none' : 'flex';\n\n            _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n              filter: filter\n            }));\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 41\n          }\n        }, React.createElement(IndeterminateCheckBoxIcon, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 45\n          }\n        }), \" \", form.title), React.createElement(\"div\", {\n          key: \"block-\" + ind,\n          id: \"data-form-\" + ((_form$id = form.id) != null ? _form$id : '1'),\n          style: {\n            alignItems: 'center',\n            flexFlow: (_form$flexFlow = form.flexFlow) != null ? _form$flexFlow : 'row wrap',\n            justifyContent: 'start',\n            display: (_this3$state$filter$i = _this3.state.filter[ind]) != null ? _this3$state$filter$i : 'flex'\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 41\n          }\n        }, form.fields.map(function (input, ind1) {\n          if (input.type == \"date\") {\n            var _input$value4, _input$helperText;\n\n            return React.createElement(DateInput, {\n              value: (_input$value4 = input.value) != null ? _input$value4 : \"\",\n              helperText: (_input$helperText = input.helperText) != null ? _input$helperText : \"\",\n              key: \"input-\" + ind1,\n              id: input.column,\n              label: input.label,\n              style: _objectSpread(_objectSpread({}, classes.m5), {}, {\n                flexBasis: window.innerWidth < 768 ? '100%' : '14%'\n              }),\n              onChange: function onChange(e) {\n                var _input$handle, _form$json2, _input$validate;\n\n                return mainChange(e, {\n                  handle: (_input$handle = input.handle) != null ? _input$handle : undefined,\n                  json: (_form$json2 = form.json) != null ? _form$json2 : undefined,\n                  validate: (_input$validate = input.validate) != null ? _input$validate : undefined\n                });\n              },\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 64\n              }\n            });\n          } else if (input.type == \"select\") {\n            var _input$value5, _input$helperText2;\n\n            return React.createElement(SelectInput, {\n              value: (_input$value5 = input.value) != null ? _input$value5 : undefined,\n              helperText: (_input$helperText2 = input.helperText) != null ? _input$helperText2 : \"\",\n              key: \"input-\" + ind1,\n              id: input.column,\n              label: input.label,\n              name: input.column,\n              values: input.values,\n              style: _objectSpread(_objectSpread({}, classes.m5), {}, {\n                flexBasis: window.innerWidth < 768 ? '100%' : '20%'\n              }),\n              onChange: function onChange(e) {\n                var _input$handle2, _form$json3, _input$validate2;\n\n                return mainChange(e, {\n                  handle: (_input$handle2 = input.handle) != null ? _input$handle2 : undefined,\n                  json: (_form$json3 = form.json) != null ? _form$json3 : undefined,\n                  validate: (_input$validate2 = input.validate) != null ? _input$validate2 : undefined\n                });\n              },\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 65\n              }\n            });\n          } else if (input.type == \"file\") {\n            return React.createElement(FileInput, {\n              key: \"input-\" + ind1,\n              style: _objectSpread(_objectSpread({}, classes.m5), {}, {\n                fontSize: '.6em',\n                width: '190px'\n              }),\n              file: input.file,\n              onChange: function onChange(e) {\n                var _input$handle3, _form$json4, _input$validate3;\n\n                return mainChange(e, {\n                  handle: (_input$handle3 = input.handle) != null ? _input$handle3 : undefined,\n                  json: (_form$json4 = form.json) != null ? _form$json4 : undefined,\n                  validate: (_input$validate3 = input.validate) != null ? _input$validate3 : undefined\n                });\n              },\n              onBlur: function onBlur(e) {\n                var _input$handle4, _form$json5, _input$validate4;\n\n                return mainChange(e, {\n                  handle: (_input$handle4 = input.handle) != null ? _input$handle4 : undefined,\n                  json: (_form$json5 = form.json) != null ? _form$json5 : undefined,\n                  validate: (_input$validate4 = input.validate) != null ? _input$validate4 : undefined\n                });\n              },\n              label: input.label,\n              id: input.column,\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 61\n              }\n            });\n          } else if (input.type == \"checkbox\") {\n            var _input$disabled;\n\n            return React.createElement(CheckBoxInput, {\n              key: \"input-\" + ind1,\n              disabled: (_input$disabled = input.disabled) != null ? _input$disabled : false,\n              value: input.value,\n              style: _objectSpread(_objectSpread({}, classes.m5), {}, {\n                flexBasis: input.flexBasis\n              }),\n              onChange: function onChange(e) {\n                var _input$handle5, _form$json6, _input$validate5;\n\n                return mainChange(e, {\n                  handle: (_input$handle5 = input.handle) != null ? _input$handle5 : undefined,\n                  json: (_form$json6 = form.json) != null ? _form$json6 : undefined,\n                  validate: (_input$validate5 = input.validate) != null ? _input$validate5 : undefined\n                });\n              },\n              onBlur: function onBlur(e) {\n                var _input$handle6, _form$json7, _input$validate6;\n\n                return mainChange(e, {\n                  handle: (_input$handle6 = input.handle) != null ? _input$handle6 : undefined,\n                  json: (_form$json7 = form.json) != null ? _form$json7 : undefined,\n                  validate: (_input$validate6 = input.validate) != null ? _input$validate6 : undefined\n                });\n              },\n              label: input.label,\n              id: input.column,\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 61\n              }\n            });\n          } else {\n            var _input$mask, _input$helperText3;\n\n            return React.createElement(TextInputCustom, {\n              key: \"input-\" + ind1,\n              id: input.column,\n              type: input.type,\n              value: input.value,\n              style: _objectSpread(_objectSpread({}, classes.m5), {}, {\n                flexBasis: window.innerWidth < 768 ? '100%' : input.flexBasis\n              }),\n              id: input.column,\n              label: input.label,\n              mask: (_input$mask = input.mask) != null ? _input$mask : undefined,\n              validate: input.validateHandler,\n              helperText: (_input$helperText3 = input.helperText) != null ? _input$helperText3 : \"\",\n              onChange: function onChange(e) {\n                var _input$handle7, _form$json8, _input$validate7;\n\n                return mainChange(e, {\n                  handle: (_input$handle7 = input.handle) != null ? _input$handle7 : undefined,\n                  json: (_form$json8 = form.json) != null ? _form$json8 : undefined,\n                  validate: (_input$validate7 = input.validate) != null ? _input$validate7 : undefined\n                });\n              },\n              onBlur: function onBlur(e) {\n                var _input$handle8, _form$json9, _input$validate8;\n\n                return mainChange(e, {\n                  handle: (_input$handle8 = input.handle) != null ? _input$handle8 : undefined,\n                  json: (_form$json9 = form.json) != null ? _form$json9 : undefined,\n                  validate: (_input$validate8 = input.validate) != null ? _input$validate8 : undefined\n                });\n              },\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 64\n              }\n            });\n          }\n        })))));\n      }), React.createElement(Button, {\n        size: \"small\",\n        style: {\n          margin: 5\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          if (_this3.props.validate === undefined) {\n            _this3.props.request(_this3.state.inputVal);\n          } else {\n            if (_this3.props.validate(_this3.state.formValidate)) {\n              _this3.props.request(_this3.state.inputVal);\n            }\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 17\n        }\n      }, \" Salvar\"), React.createElement(Button, {\n        size: \"small\",\n        style: {\n          margin: 5\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          _this3.props.history.goBack();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 17\n        }\n      }, \" Cancelar\"));\n    }\n  }]);\n\n  return LForms;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    snackbar: store.appReducer.snackbar\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setSnackbar: setSnackbar\n  }, dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LForms));","map":{"version":3,"sources":["C:/Users/Maou/Documents/Projetos/CLIENTES/RNF/Completo/client/src/components/Forms/index.js"],"names":["React","Component","Fragment","useState","useRef","useEffect","connect","bindActionCreators","withRouter","setSnackbar","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","Snackbar","TextField","Input","Checkbox","InputLabel","MenuItem","FormHelperText","FormControl","FormControlLabel","Select","IndeterminateCheckBoxIcon","ptBR","Grid","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","Icon","getApiDownloadFile","MaskedInput","idNumbers","TextMaskCustom","props","inputRef","other","ref","inputElement","value","onChange","mask","CheckBoxInput","setValue","error","setError","handleChange","e","target","checked","id","validate","undefined","type","style","disabled","label","FileInput","file","setFile","replace","setReplace","files","color","split","pop","TextInputCustom","val","required","helperText","name","DateInput","valueDate","Date","console","log","err","marginTop","shrink","SelectInput","column","values","map","ind","LForms","state","data","inputVal","filter","inputValues","formValidate","forms","form","ifjson","fields","input","ind1","json","setState","mainChange","params","includes","length","toJSON","handle","classes","m5","margin","width","window","innerWidth","root","maxWidth","marginBottom","media","height","flexBasis","title","alignItems","flexFlow","justifyContent","display","fontSize","validateHandler","request","history","goBack","mapStateToProps","store","snackbar","appReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment, useState, useRef, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\nimport { withRouter } from 'react-router-dom'\r\n//\r\n//\r\nimport { setSnackbar } from '../../actions/appActions'\r\n//const classes = useStyles();\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n//\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Input from '@material-ui/core/Input';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\r\n\r\nimport ptBR from \"date-fns/locale/pt-BR\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { getApiDownloadFile } from '../../providers/api'\r\nimport MaskedInput from 'react-text-mask';\r\nconst idNumbers = [\r\n    'cpf', 'cnpj', 'zipcode'\r\n];\r\n\r\n// MASKED INPUTS \r\n\r\nfunction TextMaskCustom(props) {\r\n    const { inputRef, ...other } = props;\r\n\r\n    return (\r\n        <MaskedInput\r\n            {...other}\r\n            ref={(ref) => {\r\n                inputRef(ref ? ref.inputElement : null);\r\n            }}\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n            onBlur={props.onChange}\r\n            mask={props.mask}\r\n            placeholderChar={'\\u2000'}\r\n\r\n        />\r\n    );\r\n}\r\n// CheckBox\r\n\r\nconst CheckBoxInput = (props) => {\r\n    const [value, setValue] = useState(props.value == \"1\" ? true : false ?? false);\r\n    const [error, setError] = useState(false);\r\n    function handleChange(e) {\r\n        const { checked, id } = e.target;\r\n        if (props.validate !== undefined) {\r\n            if (props.validate(checked)) {\r\n                setError(false);\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }\r\n        let target = {id, value: checked ? \"1\" : \"0\" , type: 'checkbox'};\r\n        props.onChange({target, type: 'checkbox'})\r\n        setValue(checked);\r\n    }\r\n    return (\r\n        <div key={`check-${props.id}`} style={{...props.style}}>\r\n        <FormControlLabel \r\n        control={<Checkbox checked={value} disabled={props.disabled ?? false}onChange={handleChange} name={props.id} id={props.id} />}\r\n        label={props.label}\r\n      />\r\n      </div>\r\n      )\r\n}\r\n\r\n// File Input\r\nconst FileInput = (props) => {\r\n    const [value, setValue] = useState(props.value ?? undefined);\r\n    const [file, setFile] = useState(props.file ?? undefined);\r\n    const [replace, setReplace] = useState(!props.file ?? true);\r\n    const [error, setError] = useState(false);\r\n    function handleChange(e) {\r\n        const { value, id } = e.target;\r\n        if (props.validate !== undefined) {\r\n            if (props.validate(value)) {\r\n                setError(false);\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }\r\n        \r\n        props.onChange({target: {id, value: e.target.files[0], type: 'file'}})\r\n        setValue(e.target.value);\r\n    }\r\n    return (\r\n        <FormControl style={props.style}>\r\n            { file === undefined || replace ?\r\n            (<Button  variant=\"outlined\" component=\"label\" endIcon={<Icon name=\"arrow-circle-up\" size={18} color=\"#025ea2\" />}>\r\n                { value !== undefined ? \r\n                <b style={{color: 'red'}}>\r\n                    <a href={`file:///${value}`}>{value.split(/(\\\\|\\/)/g).pop()} </a>\r\n                </b> : props.label}\r\n                <input type=\"file\" hidden\r\n                    onChange={handleChange}\r\n                    onBlur={handleChange}\r\n                    name={props.id}\r\n                    id={props.id}\r\n                />\r\n            </Button>) : \r\n            (\r\n            <div>\r\n            <Button  variant=\"outlined\" component=\"label\"\r\n                endIcon={\r\n                    <Icon name=\"remove\" size={18} color=\"red\" onClick={() => {\r\n                        setReplace(true);\r\n                    }} />\r\n                }>\r\n                Baixar Arquivo\r\n                <Icon name=\"arrow-circle-down\" \r\n                    size={18} color=\"#025ea2\"\r\n                    onClick={() => {\r\n                        getApiDownloadFile(file);\r\n                    }}\r\n                />\r\n            </Button>\r\n            \r\n            </div>\r\n            )}\r\n        </FormControl>)\r\n}\r\n//\r\nfunction TextInputCustom(props) {\r\n    const { inputRef, ...other } = props;\r\n\r\n    const [value, setValue] = useState(props.value ?? \"\");\r\n    const [error, setError] = useState(false);\r\n\r\n    function handleChange(e) {\r\n        const { id } = e.target;\r\n        let val = e.target.value;\r\n        setValue(val);\r\n        if (props.validate !== undefined) {\r\n            if (props.validate(val) !== false) {\r\n                setError(false);\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }\r\n        props.onChange(e)\r\n\r\n    }\r\n    //console.log(value);\r\n    if (props.mask === undefined)\r\n        return (\r\n            <TextField key={`input-${props.id}`} size=\"small\" style={props.style}\r\n                required={props.required ?? false}\r\n                error={error}\r\n                type={props.type ?? \"text\"}\r\n                value={value}\r\n                helperText={error == true ? props.helperText ?? \"conteúdo inválido\" : \"\"}\r\n                id={props.id} label={props.label}\r\n                onChange={handleChange}\r\n                onBlur={handleChange}\r\n            />\r\n        )\r\n    else\r\n        return (\r\n            <FormControl key={`input-${props.id}`} style={props.style} >\r\n                <InputLabel htmlFor={props.id}>{props.label}</InputLabel>\r\n                <Input\r\n                    required={props.required ?? false}\r\n                    size=\"small\"\r\n                    key={`input-${props.id}`}\r\n                    error={error}\r\n                    onChange={handleChange}\r\n                    onBlur={handleChange}\r\n                    name={props.name}\r\n                    value={value}\r\n                    id={props.id}\r\n                    aria-describedby=\"component-error-text\"\r\n                    inputProps={{\r\n                        mask: props.mask,\r\n                    }}\r\n                    inputComponent={TextMaskCustom}\r\n                />\r\n                {error == true ? (\r\n                    <FormHelperText id=\"component-error-text\">{props.helperText ?? \"conteúdo inválido\"}</FormHelperText>\r\n                ) : ('')}\r\n            </FormControl>)\r\n}\r\n//\r\nconst DateInput = (props) => {\r\n    let valueDate = new Date(props.value)\r\n    const [value, setValue] = useState(props.value);\r\n    const [error, setError] = useState(false);\r\n    function handleChange(e) {\r\n        setValue(e.target.value);\r\n        console.log(e)\r\n        try {\r\n            //let e = { target: { id: props.id, value: `${selectvalue.toJSON().split('T')[0]}` } }\r\n            if (props.validate !== undefined) {\r\n                if (props.validate(e.target.value)) {\r\n                    setError(false);\r\n                } else {\r\n                    setError(true)\r\n                }\r\n            }\r\n            props.onChange(e)\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n        //props.onChange(value);\r\n        \r\n    }\r\n    return (\r\n            <form  noValidate style={{ ...props.style, marginTop: 20 }}>\r\n              <TextField\r\n                id={props.id}\r\n                label={props.label ?? 'Data'}\r\n                type=\"date\"\r\n                defaultValue={value}\r\n                onChange={handleChange}\r\n                onBlur={handleChange}\r\n                \r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            </form>\r\n    );\r\n    return (<MuiPickersUtilsProvider utils={DateFnsUtils} locale={ptBR}>\r\n        <Grid style={{ ...props.style, marginTop: 18 }}>\r\n            <KeyboardDatePicker\r\n                required={props.required ?? false}\r\n                margin=\"normal\"\r\n                id={props.id}\r\n                label={props.label ?? 'Data'}\r\n                error={error}\r\n                helperText={props.error ? props.helperText ?? \"conteúdo inválido\" : \"\"}\r\n                format=\"dd/MM/yyyy\"\r\n                autoOk={true}\r\n                disableFuture\r\n                value={value}\r\n                allowKeyboardControl={false}\r\n                cancelLabel=\"Cancelar\"\r\n                onChange={handleChange}\r\n                onBlur={handleChange}\r\n                KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                }}\r\n            />\r\n        </Grid>\r\n    </MuiPickersUtilsProvider>)\r\n}\r\n//\r\n\r\nconst SelectInput = (props) => {\r\n    const [value, setValue] = useState(props.value ?? \"Selecione\");\r\n    const [error, setError] = useState(false);\r\n    function handleChange(e) {\r\n        const { value, id } = e.target;\r\n        if (props.validate !== undefined) {\r\n            if (props.validate(value)) {\r\n                setError(false);\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }\r\n        props.onChange(e)\r\n        setValue(e.target.value);\r\n    }\r\n    return (\r\n        <FormControl id={props.column} style={{ ...props.style, marginTop: '25px' }}>\r\n            <InputLabel id={props.column}>{props.label}</InputLabel>\r\n            <Select size=\"small\"\r\n                labelId={props.id}\r\n                id={props.id}\r\n                name={props.name}\r\n                value={value}\r\n                error={error}\r\n                placeholder=\"Selecione\"\r\n                //helperText={props.error ? props.helperText ?? \"conteúdo inválido\" : \"\"}\r\n                onChange={handleChange}\r\n                onBlur={handleChange}\r\n            >\r\n                <MenuItem key={`input-00`} value=\"Selecione\">Selecione</MenuItem>\r\n                {\r\n                    props.values.map((val, ind) => {\r\n                        return <MenuItem key={`input-${ind}`} value={val}>{val}</MenuItem>\r\n                    })\r\n                }\r\n\r\n            </Select>\r\n        </FormControl>)\r\n}\r\nclass LForms extends Component {\r\n    state = {\r\n        data: [],\r\n        inputVal: {},\r\n        filter: ['flex']\r\n    }\r\n    componentDidMount() {\r\n        let inputValues = {};\r\n        let formValidate = {};\r\n        this.props.forms.map((form, ind) => {\r\n            let ifjson = {};\r\n            form.fields.map((input, ind1) => {\r\n                ifjson[input.column] = input.value ?? '';\r\n                inputValues[form.json ?? input.column] = form.json == undefined ? input.value ?? '' : ifjson;\r\n                formValidate[input.column] = input.value ?? '';\r\n            });\r\n        });\r\n        this.setState({ ...this.state, inputVal: inputValues, formValidate });\r\n\r\n        //console.log(this.state)\r\n    }\r\n\r\n\r\n    render() {\r\n        const mainChange = (e, params) => {\r\n            let inputValues = this.state.inputVal;\r\n            let formValidate = this.state.formValidate;\r\n            let value = e.target.value;\r\n            let id = e.target.id ?? e.target.name;\r\n\r\n            if (idNumbers.includes(e.target.id)) {\r\n                value = value.replace(/[^\\d]+/g, '');\r\n            }\r\n\r\n            if (e.target.type !== \"file\" && (value.length == 0 || value == '' || value == 'Selecione')) {\r\n                if (params.json === undefined) {\r\n                    inputValues[id] = ''\r\n                } else {\r\n                    if (inputValues[params.json] == undefined) {\r\n                        inputValues[params.json] = {};\r\n                    }\r\n                    inputValues[params.json][id] = '';\r\n                }\r\n            } else {\r\n                if (id == 'created_at') {\r\n                    value = `${value.toJSON().split('T')[0]}`\r\n                }\r\n\r\n                if (idNumbers.includes(id)) {\r\n                    value = value.replace(/[^\\d]+/g, '');\r\n                }\r\n                if (params.handle !== undefined) {\r\n                    //let request = await params.handle(value)\r\n                    //value = request[id] ?? '';\r\n                }\r\n\r\n\r\n                if (params.json === undefined) {\r\n                    inputValues[id] = value\r\n                } else {\r\n                    if (inputValues[params.json] == undefined) {\r\n                        inputValues[params.json] = {};\r\n                    }\r\n                    inputValues[params.json][id] = value;\r\n                }\r\n            }\r\n            formValidate[id] = value;\r\n            this.setState({ ...this.state, inputVal: inputValues, formValidate });\r\n            //console.log(this.state.inputVal);\r\n        }\r\n        \r\n        const classes = {\r\n            m5: {\r\n                margin: 5,\r\n                marginTop: 25,\r\n                width: window.innerWidth > 780 ? '30%' :'100%'\r\n                //flexBasis: '30%'\r\n\r\n            },\r\n            root: {\r\n                maxWidth: 345,\r\n                marginBottom: 25\r\n            },\r\n            media: {\r\n                height: 140,\r\n            },\r\n        }\r\n        const flexBasis  = '22%'\r\n        return (\r\n            <div>\r\n                {\r\n                    this.props.forms.map((form, ind) => {\r\n                        return (\r\n                            <div key={`card-${ind}-root`}>\r\n                                <Card style={{ marginBottom: 15 }}>\r\n                                    <CardContent>\r\n                                        <Typography onClick={() => {\r\n                                            let filter = this.state.filter;\r\n                                            filter[ind] = this.state.filter[ind] == 'flex' ? 'none' : 'flex'\r\n                                            this.setState({ ...this.state, filter })\r\n                                        }}>\r\n                                            <IndeterminateCheckBoxIcon /> {form.title}\r\n                                        </Typography>\r\n\r\n                                        <div key={`block-${ind}`} id={`data-form-${form.id ?? '1'}`} style={{\r\n                                            alignItems: 'center',\r\n                                            flexFlow: form.flexFlow ?? 'row wrap',\r\n                                            justifyContent: 'start',\r\n                                            display: this.state.filter[ind] ?? 'flex',\r\n                                        }}>\r\n                                            {\r\n\r\n                                                form.fields.map((input, ind1) => {\r\n                                                    if (input.type == \"date\") {\r\n                                                        return <DateInput value={input.value ?? \"\"} helperText={input.helperText ?? \"\"} key={`input-${ind1}`} id={input.column} label={input.label} style={{ ...classes.m5, flexBasis: window.innerWidth < 768 ?'100%' : '14%'}} onChange={(e) => mainChange(e, { handle: input.handle ?? undefined, json: form.json ?? undefined, validate: input.validate ?? undefined })} />\r\n                                                    } else if (input.type == \"select\") {\r\n                                                        return (<SelectInput value={input.value ?? undefined} helperText={input.helperText ?? \"\"} key={`input-${ind1}`} id={input.column} label={input.label} name={input.column} values={input.values} style={{ ...classes.m5, flexBasis: window.innerWidth < 768 ?'100%' : '20%'}} onChange={(e) => mainChange(e, { handle: input.handle ?? undefined, json: form.json ?? undefined, validate: input.validate ?? undefined })} />)\r\n                                                    } else if (input.type == \"file\") {\r\n                                                        return (\r\n                                                            <FileInput key={`input-${ind1}`}\r\n                                                                style={{ ...classes.m5, fontSize: '.6em', width:'190px' }}\r\n                                                                file={input.file}\r\n                                                                onChange={(e) => mainChange(e, { handle: input.handle ?? undefined, json: form.json ?? undefined, validate: input.validate ?? undefined })}\r\n                                                                onBlur={(e) => mainChange(e, { handle: input.handle ?? undefined, json: form.json ?? undefined, validate: input.validate ?? undefined })}\r\n                                                                label={input.label}\r\n                                                                id={input.column}\r\n                                                            />\r\n                                                        )\r\n                                                    }else if (input.type == \"checkbox\") {\r\n                                                        return (\r\n                                                            <CheckBoxInput \r\n                                                                key={`input-${ind1}`}\r\n                                                                disabled={input.disabled ?? false}\r\n                                                                value={input.value}\r\n                                                                style={{ ...classes.m5, flexBasis: input.flexBasis}}\r\n                                                                onChange={(e) => mainChange(e, { handle: input.handle ?? undefined, json: form.json ?? undefined, validate: input.validate ?? undefined })}\r\n                                                                onBlur={(e) => mainChange(e, { handle: input.handle ?? undefined, json: form.json ?? undefined, validate: input.validate ?? undefined })}\r\n                                                                label={input.label}\r\n                                                                id={input.column}\r\n                                                            />\r\n                                                        )\r\n                                                    } else {\r\n                                                        return <TextInputCustom key={`input-${ind1}`}\r\n                                                            id={input.column}\r\n                                                            type={input.type}\r\n                                                            value={input.value}\r\n                                                            style={{ ...classes.m5, flexBasis: window.innerWidth < 768 ?'100%' : input.flexBasis}}\r\n                                                            id={input.column} label={input.label}\r\n                                                            mask={input.mask ?? undefined}\r\n                                                            validate={input.validateHandler}\r\n                                                            helperText={input.helperText ?? \"\"}\r\n                                                            onChange={(e) => mainChange(e, { handle: input.handle ?? undefined, json: form.json ?? undefined, validate: input.validate ?? undefined })}\r\n                                                            onBlur={(e) => mainChange(e, { handle: input.handle ?? undefined, json: form.json ?? undefined, validate: input.validate ?? undefined })} />\r\n                                                    }\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </div>\r\n                        )\r\n                    })\r\n\r\n                }\r\n                <Button size=\"small\" style={{ margin: 5 }} variant=\"contained\" color=\"primary\" onClick={() => {\r\n                    if (this.props.validate === undefined) {\r\n                        this.props.request(this.state.inputVal);\r\n                    } else {\r\n                        if (this.props.validate(this.state.formValidate)) {\r\n                            this.props.request(this.state.inputVal);\r\n                            //console.log(this.state)\r\n                        }\r\n                    }\r\n                }}> Salvar</Button>\r\n                <Button size=\"small\" style={{ margin: 5 }} variant=\"contained\" color=\"primary\" onClick={() => { this.props.history.goBack(); }} > Cancelar</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = store => ({\r\n    snackbar: store.appReducer.snackbar\r\n});\r\nconst mapDispatchToProps = dispatch =>\r\n    bindActionCreators({ setSnackbar }, dispatch);\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LForms))\r\n"]},"metadata":{},"sourceType":"module"}