{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Maou\\\\Documents\\\\Projetos\\\\CLIENTES\\\\RNF\\\\client\\\\src\\\\pages\\\\Contributors\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { setDialog, setProducts } from \"../../actions/productActions\";\nimport { setCart } from \"../../actions/cartAction\";\nimport { setSnackbar } from \"../../actions/appActions\";\nimport { browserHistory } from \"react-router-dom\";\n\nvar Contributors = function (_Component) {\n  _inherits(Contributors, _Component);\n\n  var _super = _createSuper(Contributors);\n\n  function Contributors() {\n    var _this;\n\n    _classCallCheck(this, Contributors);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      item: undefined\n    };\n    return _this;\n  }\n\n  _createClass(Contributors, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var authData = JSON.parse(localStorage.getItem(\"user\"));\n      var classes = {\n        root: {\n          maxWidth: 345\n        },\n        media: {\n          height: 140\n        }\n      };\n      var rows = [{\n        id: 1,\n        col1: 'Hello',\n        col2: 'World'\n      }, {\n        id: 2,\n        col1: 'XGrid',\n        col2: 'is Awesome'\n      }, {\n        id: 3,\n        col1: 'Material-UI',\n        col2: 'is Amazing'\n      }];\n      var columns = [{\n        field: 'col1',\n        headerName: 'Column 1',\n        width: 150\n      }, {\n        field: 'col2',\n        headerName: 'Column 2',\n        width: 150\n      }];\n      return React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, React.createElement(Card, {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }, React.createElement(\"div\", {\n        style: {\n          height: 300,\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }\n      }, React.createElement(DataGrid, {\n        rows: rows,\n        columns: columns,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }\n      }))), React.createElement(CardActionArea, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }), React.createElement(CardActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return Contributors;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    session: store.authReducer.data,\n    products: store.productReducer.products\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setProducts: setProducts,\n    setSnackbar: setSnackbar,\n    setDialog: setDialog,\n    setCart: setCart\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contributors);","map":{"version":3,"sources":["C:/Users/Maou/Documents/Projetos/CLIENTES/RNF/client/src/pages/Contributors/index.js"],"names":["React","Component","Fragment","connect","bindActionCreators","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","DataGrid","setDialog","setProducts","setCart","setSnackbar","browserHistory","Contributors","state","item","undefined","authData","JSON","parse","localStorage","getItem","classes","root","maxWidth","media","height","rows","id","col1","col2","columns","field","headerName","width","mapStateToProps","store","session","authReducer","data","products","productReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\n//\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n//\r\nimport { setDialog, setProducts } from '../../actions/productActions'\r\nimport { setCart } from '../../actions/cartAction'\r\nimport { setSnackbar } from '../../actions/appActions'\r\n\r\nimport { browserHistory } from \"react-router-dom\"\r\n//const classes = useStyles();\r\nclass Contributors extends Component {\r\n    state = {\r\n        item: undefined,\r\n    }\r\n\r\n    async componentDidMount() {\r\n        /*const authData = JSON.parse(localStorage.getItem(\"user\"));\r\n        if(authData == null)\r\n            browserHistory.push('/login')*/\r\n        /*let products = await getApiProducts();\r\n        console.log(products);*/\r\n        //this.props.setProducts(products);\r\n        //console.log(this.props.session)\r\n    }\r\n\r\n    render() {\r\n        const authData = JSON.parse(localStorage.getItem(\"user\"));\r\n        const classes = {\r\n            root: {\r\n                maxWidth: 345,\r\n            },\r\n            media: {\r\n                height: 140,\r\n            },\r\n        }\r\n        const rows: RowsProp = [\r\n            { id: 1, col1: 'Hello', col2: 'World' },\r\n            { id: 2, col1: 'XGrid', col2: 'is Awesome' },\r\n            { id: 3, col1: 'Material-UI', col2: 'is Amazing' },\r\n        ];\r\n\r\n        const columns: ColDef[] = [\r\n            { field: 'col1', headerName: 'Column 1', width: 150 },\r\n            { field: 'col2', headerName: 'Column 2', width: 150 },\r\n        ];\r\n\r\n        return (\r\n            <Fragment>\r\n                <Card className={classes.root}>\r\n                    <CardContent>\r\n                        <div style={{ height: 300, width: '100%' }}>\r\n                            <DataGrid rows={rows} columns={columns} />\r\n                        </div>\r\n                    </CardContent>\r\n                    <CardActionArea>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n\r\n                    </CardActions>\r\n                </Card>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = store => ({\r\n    session: store.authReducer.data,\r\n    products: store.productReducer.products\r\n});\r\nconst mapDispatchToProps = dispatch =>\r\n    bindActionCreators({ setProducts, setSnackbar, setDialog, setCart }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contributors)\r\n"]},"metadata":{},"sourceType":"module"}