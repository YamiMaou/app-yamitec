{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Maou\\\\Documents\\\\Projetos\\\\CLIENTES\\\\RNF\\\\client\\\\src\\\\components\\\\Forms\\\\index.js\",\n    _this = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, Fragment, useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { DataGrid, RowsProp, ColDef } from '@material-ui/data-grid';\nimport { setDialog, setProducts } from \"../../actions/productActions\";\nimport { setCart } from \"../../actions/cartAction\";\nimport { setSnackbar } from \"../../actions/appActions\";\nimport { DEFAULT_LOCALE_TEXT } from \"../../providers/langs/datagrid\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport AppBar from '@material-ui/core/AppBar';\nimport HomeIcon from '@material-ui/icons/Home';\nimport IconButton from '@material-ui/core/IconButton';\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ReorderIcon from '@material-ui/icons/Reorder';\nimport ptBR from \"date-fns/locale/pt-BR\";\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport { validaCpf } from \"../../providers/commonMethods\";\nvar idNumbers = ['cpf', 'cnpj', 'cep'];\nvar inputValues = {};\n\nfunction onChangeInputs(e) {\n  var _e$target$id;\n\n  var params,\n      value,\n      id,\n      request,\n      _args = arguments;\n  return _regeneratorRuntime.async(function onChangeInputs$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          params = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n          value = e.target.value;\n          id = (_e$target$id = e.target.id) != null ? _e$target$id : e.target.name;\n\n          if (idNumbers.includes(e.target.id)) {\n            value = value.replace(/[^\\d]+/g, '');\n          }\n\n          if (params.validate !== undefined) {\n            if (value.length == 11 && params.validate(value) == true) {\n              console.log(params.validate(value));\n              console.log(\"o valor \\\"\" + value + \"\\\" \\xE9 um  CPF\");\n            } else {\n              setSnackbar({\n                open: true,\n                message: \" valor do campo \" + id + \" inv\\xE1lido \"\n              });\n            }\n          }\n\n          if (!(value.length == 0 || value == 'Todos')) {\n            _context.next = 9;\n            break;\n          }\n\n          inputValues[id] = '';\n          _context.next = 16;\n          break;\n\n        case 9:\n          if (id == 'created_at') {\n            value = \"\" + value.toJSON().split('T')[0];\n          }\n\n          if (idNumbers.includes(id)) {\n            value = value.replace(/[^\\d]+/g, '');\n          }\n\n          if (!(params.handle !== undefined)) {\n            _context.next = 15;\n            break;\n          }\n\n          _context.next = 14;\n          return _regeneratorRuntime.awrap(params.handle(value));\n\n        case 14:\n          request = _context.sent;\n\n        case 15:\n          if (params.json === undefined) {\n            inputValues[id] = value;\n          } else {\n            inputValues[params.json][id] = value;\n          }\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction onClearFilter() {\n  inputValues = {};\n  document.getElementById('filter-form').querySelectorAll('input').forEach(function (item, index) {\n    console.log({\n      index: index,\n      item: item\n    });\n    item.value = '';\n  });\n  document.getElementById('filter-form').querySelectorAll('select').forEach(function (item, index) {\n    console.log({\n      index: index,\n      item: item,\n      selectedIndex: item.selectedIndex\n    });\n    item.value = \"Todos\";\n  });\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      '& > *': {\n        margin: theme.spacing(1)\n      }\n    }\n  };\n});\n\nfunction TextMaskCustom(props) {\n  var inputRef = props.inputRef,\n      other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return React.createElement(MaskedInput, _extends({}, other, {\n    ref: function ref(_ref) {\n      inputRef(_ref ? _ref.inputElement : null);\n    },\n    mask: props.mask,\n    placeholderChar: \"\\u2000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }));\n}\n\nvar DateInput = function DateInput(props) {\n  var _props$label;\n\n  var _useState = useState(new Date('2021-02-13')),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  function handleChange(value) {\n    try {\n      inputValues[props.id] = \"\" + value.toJSON().split('T')[0];\n    } catch (err) {\n      console.log(err);\n    }\n\n    props.onChange(value);\n    setValue(value);\n  }\n\n  return React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    locale: ptBR,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, React.createElement(Grid, {\n    justify: \"space-around\",\n    style: {\n      flexGrow: 0,\n      marginTop: 18\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, React.createElement(KeyboardDatePicker, {\n    margin: \"normal\",\n    id: props.id,\n    label: (_props$label = props.label) != null ? _props$label : 'Data',\n    format: \"dd/MM/yyyy\",\n    value: value,\n    onChange: handleChange,\n    onBlur: handleChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  })));\n};\n\nvar SelectInput = function SelectInput(props) {\n  var _useState3 = useState(props.values[0]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      value = _useState4[0],\n      setValue = _useState4[1];\n\n  function handleChange(e) {\n    props.onChange(e);\n    setValue(e.target.value);\n  }\n\n  return React.createElement(FormControl, {\n    id: props.column,\n    style: _objectSpread(_objectSpread({}, props.style), {}, {\n      marginTop: '25px'\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, React.createElement(InputLabel, {\n    id: props.column,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, props.label), React.createElement(Select, {\n    size: \"small\",\n    labelId: props.id,\n    id: props.id,\n    name: props.name,\n    value: value,\n    onChange: handleChange,\n    onBlur: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, props.values.map(function (val, ind) {\n    return React.createElement(MenuItem, {\n      key: \"input-\" + ind,\n      value: val,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 32\n      }\n    }, val);\n  })));\n};\n\nvar LForms = function (_Component) {\n  _inherits(LForms, _Component);\n\n  var _super = _createSuper(LForms);\n\n  function LForms() {\n    var _this2;\n\n    _classCallCheck(this, LForms);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.state = {\n      data: [],\n      filter: ['flex']\n    };\n    return _this2;\n  }\n\n  _createClass(LForms, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var classes = {\n        m5: {\n          margin: 5,\n          marginTop: 25\n        },\n        root: {\n          maxWidth: 345,\n          marginBottom: 25\n        },\n        media: {\n          height: 140\n        }\n      };\n      return React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }\n      }, this.props.forms.map(function (form, ind) {\n        var _form$id, _form$flexFlow, _this3$state$filter$i;\n\n        var ifjson = {};\n        return React.createElement(\"div\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 29\n          }\n        }, React.createElement(Card, {\n          className: classes.root,\n          style: {\n            marginBottom: 15\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 33\n          }\n        }, React.createElement(CardContent, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 37\n          }\n        }, React.createElement(Typography, {\n          onClick: function onClick() {\n            var filter = _this3.state.filter;\n            filter[ind] = _this3.state.filter[ind] == 'flex' ? 'none' : 'flex';\n\n            _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n              filter: filter\n            }));\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 41\n          }\n        }, React.createElement(IndeterminateCheckBoxIcon, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 45\n          }\n        }), \" \", form.title), React.createElement(\"div\", {\n          key: \"block-\" + ind,\n          id: \"data-form-\" + ((_form$id = form.id) != null ? _form$id : '1'),\n          style: {\n            alignItems: 'center',\n            flexFlow: (_form$flexFlow = form.flexFlow) != null ? _form$flexFlow : 'row wrap',\n            justifyContent: 'start',\n            display: (_this3$state$filter$i = _this3.state.filter[ind]) != null ? _this3$state$filter$i : 'flex'\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 41\n          }\n        }, form.fields.map(function (input, ind1) {\n          var _input$value, _form$json, _input$value2;\n\n          ifjson[input.column] = (_input$value = input.value) != null ? _input$value : '';\n          inputValues[(_form$json = form.json) != null ? _form$json : input.column] = form.json == undefined ? (_input$value2 = input.value) != null ? _input$value2 : '' : ifjson;\n\n          if (input.type == \"text\") {\n            var _input$grow, _input$flexBasis, _input$grow2;\n\n            if (input.mask === undefined) return React.createElement(TextField, {\n              key: \"input-\" + ind1,\n              size: \"small\",\n              style: _objectSpread(_objectSpread({}, classes.m5), {}, {\n                flexGrow: (_input$grow = input.grow) != null ? _input$grow : 0,\n                flexBasis: (_input$flexBasis = input.flexBasis) != null ? _input$flexBasis : '30%'\n              }),\n              id: input.column,\n              label: input.label,\n              onChange: function onChange(e) {\n                var _input$handle, _form$json2;\n\n                return onChangeInputs(e, {\n                  handle: (_input$handle = input.handle) != null ? _input$handle : undefined,\n                  json: (_form$json2 = form.json) != null ? _form$json2 : undefined\n                });\n              },\n              onBlur: function onBlur(e) {\n                var _input$handle2, _form$json3;\n\n                return onChangeInputs(e, {\n                  handle: (_input$handle2 = input.handle) != null ? _input$handle2 : undefined,\n                  json: (_form$json3 = form.json) != null ? _form$json3 : undefined\n                });\n              },\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 65\n              }\n            });else return React.createElement(FormControl, {\n              key: \"input-\" + ind1,\n              style: _objectSpread(_objectSpread({}, classes.m5), {}, {\n                flexGrow: (_input$grow2 = input.grow) != null ? _input$grow2 : 0\n              }),\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 65\n              }\n            }, React.createElement(InputLabel, {\n              htmlFor: input.column,\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 69\n              }\n            }, input.label), React.createElement(Input, {\n              size: \"small\",\n              onChange: function onChange(e) {\n                var _input$handle3, _form$json4, _input$validate;\n\n                return onChangeInputs(e, {\n                  handle: (_input$handle3 = input.handle) != null ? _input$handle3 : undefined,\n                  json: (_form$json4 = form.json) != null ? _form$json4 : undefined,\n                  validate: (_input$validate = input.validate) != null ? _input$validate : undefined\n                });\n              },\n              onBlur: function onBlur(e) {\n                var _input$handle4, _form$json5, _input$validate2;\n\n                return onChangeInputs(e, {\n                  handle: (_input$handle4 = input.handle) != null ? _input$handle4 : undefined,\n                  json: (_form$json5 = form.json) != null ? _form$json5 : undefined,\n                  validate: (_input$validate2 = input.validate) != null ? _input$validate2 : undefined\n                });\n              },\n              name: input.column,\n              id: input.column,\n              inputProps: {\n                mask: input.mask\n              },\n              inputComponent: TextMaskCustom,\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 69\n              }\n            }));\n          } else if (input.type == \"date\") {\n            var _input$grow3;\n\n            return React.createElement(DateInput, {\n              key: \"input-\" + ind1,\n              id: input.column,\n              style: _objectSpread(_objectSpread({}, classes.m5), {}, {\n                flexGrow: (_input$grow3 = input.grow) != null ? _input$grow3 : 0\n              }),\n              onBlur: function onBlur(e) {\n                var _input$handle5, _form$json6;\n\n                return onChangeInputs(e, {\n                  handle: (_input$handle5 = input.handle) != null ? _input$handle5 : undefined,\n                  json: (_form$json6 = form.json) != null ? _form$json6 : undefined\n                });\n              },\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 64\n              }\n            });\n          } else if (input.type == \"select\") {\n            var _input$grow4;\n\n            return React.createElement(SelectInput, {\n              key: \"input-\" + ind1,\n              id: input.column,\n              label: input.label,\n              name: input.column,\n              values: input.values,\n              style: _objectSpread(_objectSpread({}, classes.m5), {}, {\n                flexGrow: (_input$grow4 = input.grow) != null ? _input$grow4 : 0\n              }),\n              onChange: function onChange(e) {\n                var _input$handle6, _form$json7;\n\n                return onChangeInputs(e, {\n                  handle: (_input$handle6 = input.handle) != null ? _input$handle6 : undefined,\n                  json: (_form$json7 = form.json) != null ? _form$json7 : undefined\n                });\n              },\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 65\n              }\n            });\n          } else if (input.type == \"file\") {\n            var _input$grow5;\n\n            return React.createElement(FormControl, {\n              key: \"input-\" + ind1,\n              style: _objectSpread(_objectSpread({}, classes.m5), {}, {\n                flexGrow: (_input$grow5 = input.grow) != null ? _input$grow5 : 0\n              }),\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 57\n              }\n            }, React.createElement(Button, {\n              variant: \"contained\",\n              component: \"label\",\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 61\n              }\n            }, \"Enviar Arquivo \", React.createElement(\"input\", {\n              type: \"file\",\n              hidden: true,\n              onChange: function onChange(e) {\n                var _input$handle7, _form$json8, _input$validate3;\n\n                return onChangeInputs(e, {\n                  handle: (_input$handle7 = input.handle) != null ? _input$handle7 : undefined,\n                  json: (_form$json8 = form.json) != null ? _form$json8 : undefined,\n                  validate: (_input$validate3 = input.validate) != null ? _input$validate3 : undefined\n                });\n              },\n              onBlur: function onBlur(e) {\n                var _input$handle8, _form$json9, _input$validate4;\n\n                return onChangeInputs(e, {\n                  handle: (_input$handle8 = input.handle) != null ? _input$handle8 : undefined,\n                  json: (_form$json9 = form.json) != null ? _form$json9 : undefined,\n                  validate: (_input$validate4 = input.validate) != null ? _input$validate4 : undefined\n                });\n              },\n              name: input.column,\n              id: input.column,\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 80\n              }\n            })));\n          }\n        }))), React.createElement(CardActionArea, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 37\n          }\n        }, React.createElement(CardActions, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 41\n          }\n        }))));\n      }), React.createElement(Button, {\n        size: \"small\",\n        style: {\n          margin: 5\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          _this3.props.request(inputValues);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 17\n        }\n      }, \" Salvar\"), React.createElement(Button, {\n        size: \"small\",\n        style: {\n          margin: 5\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 17\n        }\n      }, \" Cancelar\"));\n    }\n  }]);\n\n  return LForms;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setProducts: setProducts,\n    setSnackbar: setSnackbar,\n    setDialog: setDialog,\n    setCart: setCart\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LForms);","map":{"version":3,"sources":["C:/Users/Maou/Documents/Projetos/CLIENTES/RNF/client/src/components/Forms/index.js"],"names":["React","Component","Fragment","useState","useRef","connect","bindActionCreators","DataGrid","RowsProp","ColDef","setDialog","setProducts","setCart","setSnackbar","DEFAULT_LOCALE_TEXT","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","TextField","Input","InputLabel","MenuItem","FormHelperText","FormControl","Select","AppBar","HomeIcon","IconButton","IndeterminateCheckBoxIcon","SearchIcon","ReorderIcon","ptBR","Grid","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","PropTypes","MaskedInput","validaCpf","idNumbers","inputValues","onChangeInputs","e","params","value","target","id","name","includes","replace","validate","undefined","length","console","log","open","message","toJSON","split","handle","request","json","onClearFilter","document","getElementById","querySelectorAll","forEach","item","index","selectedIndex","useStyles","theme","root","margin","spacing","TextMaskCustom","props","inputRef","other","ref","inputElement","mask","DateInput","Date","setValue","handleChange","err","onChange","flexGrow","marginTop","label","SelectInput","values","column","style","map","val","ind","LForms","state","data","filter","classes","m5","maxWidth","marginBottom","media","height","forms","form","ifjson","setState","title","alignItems","flexFlow","justifyContent","display","fields","input","ind1","type","grow","flexBasis","mapStateToProps","store","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,EAA+CC,MAA/C,QAA6D,OAA7D;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AAEA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,MAA7B,QAA2C,wBAA3C;AAEA,SAASC,SAAT,EAAoBC,WAApB;AACA,SAASC,OAAT;AACA,SAASC,WAAT;AACA,SAASC,mBAAT;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AAGA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,yBAAP,MAAsC,0CAAtC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AAEA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SACIC,uBADJ,EAEIC,kBAFJ,EAGIC,kBAHJ,QAIO,sBAJP;AAMA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AAIA,SAASC,SAAT;AAIA,IAAMC,SAAS,GAAG,CACd,KADc,EACP,MADO,EACC,KADD,CAAlB;AAIA,IAAIC,WAAW,GAAG,EAAlB;;AACA,SAAeC,cAAf,CAA8BC,CAA9B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiCC,UAAAA,MAAjC,2DAA0C,EAA1C;AACQC,UAAAA,KADR,GACgBF,CAAC,CAACG,MAAF,CAASD,KADzB;AAEQE,UAAAA,EAFR,mBAEaJ,CAAC,CAACG,MAAF,CAASC,EAFtB,2BAE4BJ,CAAC,CAACG,MAAF,CAASE,IAFrC;;AAII,cAAIR,SAAS,CAACS,QAAV,CAAmBN,CAAC,CAACG,MAAF,CAASC,EAA5B,CAAJ,EAAqC;AACjCF,YAAAA,KAAK,GAAGA,KAAK,CAACK,OAAN,CAAc,SAAd,EAAyB,EAAzB,CAAR;AACH;;AAED,cAAIN,MAAM,CAACO,QAAP,KAAoBC,SAAxB,EAAmC;AAC/B,gBAAIP,KAAK,CAACQ,MAAN,IAAgB,EAAhB,IAAsBT,MAAM,CAACO,QAAP,CAAgBN,KAAhB,KAA0B,IAApD,EAA0D;AACtDS,cAAAA,OAAO,CAACC,GAAR,CAAYX,MAAM,CAACO,QAAP,CAAgBN,KAAhB,CAAZ;AACAS,cAAAA,OAAO,CAACC,GAAR,gBAAwBV,KAAxB;AACH,aAHD,MAGO;AACHrC,cAAAA,WAAW,CAAC;AAAEgD,gBAAAA,IAAI,EAAE,IAAR;AAAcC,gBAAAA,OAAO,uBAAqBV,EAArB;AAArB,eAAD,CAAX;AACH;AAGJ;;AAjBL,gBAmBQF,KAAK,CAACQ,MAAN,IAAgB,CAAhB,IAAqBR,KAAK,IAAI,OAnBtC;AAAA;AAAA;AAAA;;AAoBQJ,UAAAA,WAAW,CAACM,EAAD,CAAX,GAAkB,EAAlB;AApBR;AAAA;;AAAA;AAsBQ,cAAIA,EAAE,IAAI,YAAV,EAAwB;AACpBF,YAAAA,KAAK,QAAMA,KAAK,CAACa,MAAN,GAAeC,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAAX;AACH;;AAED,cAAInB,SAAS,CAACS,QAAV,CAAmBF,EAAnB,CAAJ,EAA4B;AACxBF,YAAAA,KAAK,GAAGA,KAAK,CAACK,OAAN,CAAc,SAAd,EAAyB,EAAzB,CAAR;AACH;;AA5BT,gBA6BYN,MAAM,CAACgB,MAAP,KAAkBR,SA7B9B;AAAA;AAAA;AAAA;;AAAA;AAAA,2CA8BgCR,MAAM,CAACgB,MAAP,CAAcf,KAAd,CA9BhC;;AAAA;AA8BgBgB,UAAAA,OA9BhB;;AAAA;AAkCQ,cAAIjB,MAAM,CAACkB,IAAP,KAAgBV,SAApB,EAA+B;AAC3BX,YAAAA,WAAW,CAACM,EAAD,CAAX,GAAkBF,KAAlB;AAEH,WAHD,MAGO;AACHJ,YAAAA,WAAW,CAACG,MAAM,CAACkB,IAAR,CAAX,CAAyBf,EAAzB,IAA+BF,KAA/B;AAEH;;AAxCT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA6CA,SAASkB,aAAT,GAAyB;AACrBtB,EAAAA,WAAW,GAAG,EAAd;AACAuB,EAAAA,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,gBAAvC,CAAwD,OAAxD,EAAiEC,OAAjE,CAAyE,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACtFf,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEc,MAAAA,KAAK,EAALA,KAAF;AAASD,MAAAA,IAAI,EAAJA;AAAT,KAAZ;AACAA,IAAAA,IAAI,CAACvB,KAAL,GAAa,EAAb;AACH,GAHD;AAKAmB,EAAAA,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,gBAAvC,CAAwD,QAAxD,EAAkEC,OAAlE,CAA0E,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACvFf,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEc,MAAAA,KAAK,EAALA,KAAF;AAASD,MAAAA,IAAI,EAAJA,IAAT;AAAeE,MAAAA,aAAa,EAAEF,IAAI,CAACE;AAAnC,KAAZ;AACAF,IAAAA,IAAI,CAACvB,KAAL,GAAa,OAAb;AACH,GAHD;AAIH;;AAGD,IAAM0B,SAAS,GAAG7D,UAAU,CAAC,UAAC8D,KAAD;AAAA,SAAY;AACrCC,IAAAA,IAAI,EAAE;AACF,eAAS;AACLC,QAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADH;AADP;AAD+B,GAAZ;AAAA,CAAD,CAA5B;;AAQA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA,MACnBC,QADmB,GACID,KADJ,CACnBC,QADmB;AAAA,MACNC,KADM,4BACIF,KADJ;;AAG3B,SACI,oBAAC,WAAD,eACQE,KADR;AAEI,IAAA,GAAG,EAAE,aAACC,IAAD,EAAS;AACVF,MAAAA,QAAQ,CAACE,IAAG,GAAGA,IAAG,CAACC,YAAP,GAAsB,IAA1B,CAAR;AACH,KAJL;AAMI,IAAA,IAAI,EAAEJ,KAAK,CAACK,IANhB;AAOI,IAAA,eAAe,EAAE,QAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAYH;;AAID,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACN,KAAD,EAAW;AAAA;;AAAA,kBACC/E,QAAQ,CAAC,IAAIsF,IAAJ,CAAS,YAAT,CAAD,CADT;AAAA;AAAA,MAClBvC,KADkB;AAAA,MACXwC,QADW;;AAEzB,WAASC,YAAT,CAAsBzC,KAAtB,EAA6B;AACzB,QAAI;AACAJ,MAAAA,WAAW,CAACoC,KAAK,CAAC9B,EAAP,CAAX,QAA2BF,KAAK,CAACa,MAAN,GAAeC,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAA3B;AACH,KAFD,CAEE,OAAO4B,GAAP,EAAY;AACVjC,MAAAA,OAAO,CAACC,GAAR,CAAYgC,GAAZ;AACH;;AACDV,IAAAA,KAAK,CAACW,QAAN,CAAe3C,KAAf;AACAwC,IAAAA,QAAQ,CAACxC,KAAD,CAAR;AACH;;AACD,SAAQ,oBAAC,uBAAD;AAAyB,IAAA,KAAK,EAAEZ,YAAhC;AAA8C,IAAA,MAAM,EAAEF,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC,cAAd;AAA6B,IAAA,KAAK,EAAE;AAAE0D,MAAAA,QAAQ,EAAE,CAAZ;AAAeC,MAAAA,SAAS,EAAE;AAA1B,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,kBAAD;AACI,IAAA,MAAM,EAAC,QADX;AAEI,IAAA,EAAE,EAAEb,KAAK,CAAC9B,EAFd;AAGI,IAAA,KAAK,kBAAE8B,KAAK,CAACc,KAAR,2BAAiB,MAH1B;AAII,IAAA,MAAM,EAAC,YAJX;AAKI,IAAA,KAAK,EAAE9C,KALX;AAMI,IAAA,QAAQ,EAAEyC,YANd;AAOI,IAAA,MAAM,EAAEA,YAPZ;AAQI,IAAA,mBAAmB,EAAE;AACjB,oBAAc;AADG,KARzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADI,CAAR;AAgBH,CA3BD;;AA8BA,IAAMM,WAAW,GAAG,SAAdA,WAAc,CAACf,KAAD,EAAW;AAAA,mBACD/E,QAAQ,CAAC+E,KAAK,CAACgB,MAAN,CAAa,CAAb,CAAD,CADP;AAAA;AAAA,MACpBhD,KADoB;AAAA,MACbwC,QADa;;AAE3B,WAASC,YAAT,CAAsB3C,CAAtB,EAAyB;AACrBkC,IAAAA,KAAK,CAACW,QAAN,CAAe7C,CAAf;AACA0C,IAAAA,QAAQ,CAAC1C,CAAC,CAACG,MAAF,CAASD,KAAV,CAAR;AACH;;AACD,SACI,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAEgC,KAAK,CAACiB,MAAvB;AAA+B,IAAA,KAAK,kCAAOjB,KAAK,CAACkB,KAAb;AAAoBL,MAAAA,SAAS,EAAE;AAA/B,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAEb,KAAK,CAACiB,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BjB,KAAK,CAACc,KAArC,CADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AACI,IAAA,OAAO,EAAEd,KAAK,CAAC9B,EADnB;AAEI,IAAA,EAAE,EAAE8B,KAAK,CAAC9B,EAFd;AAGI,IAAA,IAAI,EAAE8B,KAAK,CAAC7B,IAHhB;AAII,IAAA,KAAK,EAAEH,KAJX;AAKI,IAAA,QAAQ,EAAEyC,YALd;AAMI,IAAA,MAAM,EAAEA,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASQT,KAAK,CAACgB,MAAN,CAAaG,GAAb,CAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC3B,WAAO,oBAAC,QAAD;AAAU,MAAA,GAAG,aAAWA,GAAxB;AAA+B,MAAA,KAAK,EAAED,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4CA,GAA5C,CAAP;AACH,GAFD,CATR,CAFJ,CADJ;AAmBH,CAzBD;;IA0BME,M;;;;;;;;;;;;;;;WACFC,K,GAAQ;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,MAAM,EAAE,CAAC,MAAD;AAFJ,K;;;;;;WAIR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAIA,kBAAS;AAAA;;AACL,UAAMC,OAAO,GAAG;AACZC,QAAAA,EAAE,EAAE;AACA9B,UAAAA,MAAM,EAAE,CADR;AAEAgB,UAAAA,SAAS,EAAE;AAFX,SADQ;AAOZjB,QAAAA,IAAI,EAAE;AACFgC,UAAAA,QAAQ,EAAE,GADR;AAEFC,UAAAA,YAAY,EAAE;AAFZ,SAPM;AAWZC,QAAAA,KAAK,EAAE;AACHC,UAAAA,MAAM,EAAE;AADL;AAXK,OAAhB;AAgBA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,KAAK/B,KAAL,CAAWgC,KAAX,CAAiBb,GAAjB,CAAqB,UAACc,IAAD,EAAOZ,GAAP,EAAe;AAAA;;AAChC,YAAIa,MAAM,GAAG,EAAb;AACA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,SAAS,EAAER,OAAO,CAAC9B,IAAzB;AAA+B,UAAA,KAAK,EAAE;AAAEiC,YAAAA,YAAY,EAAE;AAAhB,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,UAAD;AAAY,UAAA,OAAO,EAAE,mBAAM;AACvB,gBAAIJ,MAAM,GAAG,MAAI,CAACF,KAAL,CAAWE,MAAxB;AACAA,YAAAA,MAAM,CAACJ,GAAD,CAAN,GAAc,MAAI,CAACE,KAAL,CAAWE,MAAX,CAAkBJ,GAAlB,KAA0B,MAA1B,GAAmC,MAAnC,GAA4C,MAA1D;;AACA,YAAA,MAAI,CAACc,QAAL,iCAAmB,MAAI,CAACZ,KAAxB;AAA+BE,cAAAA,MAAM,EAANA;AAA/B;AACH,WAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKI,oBAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALJ,OAKmCQ,IAAI,CAACG,KALxC,CADJ,EASI;AAAK,UAAA,GAAG,aAAWf,GAAnB;AAA0B,UAAA,EAAE,8BAAeY,IAAI,CAAC/D,EAApB,uBAA0B,GAA1B,CAA5B;AAA6D,UAAA,KAAK,EAAE;AAChEmE,YAAAA,UAAU,EAAE,QADoD;AAEhEC,YAAAA,QAAQ,oBAAEL,IAAI,CAACK,QAAP,6BAAmB,UAFqC;AAGhEC,YAAAA,cAAc,EAAE,OAHgD;AAIhEC,YAAAA,OAAO,2BAAE,MAAI,CAACjB,KAAL,CAAWE,MAAX,CAAkBJ,GAAlB,CAAF,oCAA4B;AAJ6B,WAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAQQY,IAAI,CAACQ,MAAL,CAAYtB,GAAZ,CAAgB,UAACuB,KAAD,EAAQC,IAAR,EAAiB;AAAA;;AAC7BT,UAAAA,MAAM,CAACQ,KAAK,CAACzB,MAAP,CAAN,mBAAuByB,KAAK,CAAC1E,KAA7B,2BAAsC,EAAtC;AACAJ,UAAAA,WAAW,eAACqE,IAAI,CAAChD,IAAN,yBAAcyD,KAAK,CAACzB,MAApB,CAAX,GAAyCgB,IAAI,CAAChD,IAAL,IAAaV,SAAb,oBAAyBmE,KAAK,CAAC1E,KAA/B,4BAAwC,EAAxC,GAA6CkE,MAAtF;;AACA,cAAIQ,KAAK,CAACE,IAAN,IAAc,MAAlB,EAA0B;AAAA;;AACtB,gBAAIF,KAAK,CAACrC,IAAN,KAAe9B,SAAnB,EACI,OACI,oBAAC,SAAD;AAAW,cAAA,GAAG,aAAWoE,IAAzB;AAAiC,cAAA,IAAI,EAAC,OAAtC;AAA8C,cAAA,KAAK,kCAAOjB,OAAO,CAACC,EAAf;AAAmBf,gBAAAA,QAAQ,iBAAE8B,KAAK,CAACG,IAAR,0BAAgB,CAA3C;AAA8CC,gBAAAA,SAAS,sBAAEJ,KAAK,CAACI,SAAR,+BAAqB;AAA5E,gBAAnD;AACI,cAAA,EAAE,EAAEJ,KAAK,CAACzB,MADd;AACsB,cAAA,KAAK,EAAEyB,KAAK,CAAC5B,KADnC;AAEI,cAAA,QAAQ,EAAE,kBAAChD,CAAD;AAAA;;AAAA,uBAAOD,cAAc,CAACC,CAAD,EAAI;AAAEiB,kBAAAA,MAAM,mBAAE2D,KAAK,CAAC3D,MAAR,4BAAkBR,SAA1B;AAAqCU,kBAAAA,IAAI,iBAAEgD,IAAI,CAAChD,IAAP,0BAAeV;AAAxD,iBAAJ,CAArB;AAAA,eAFd;AAGI,cAAA,MAAM,EAAE,gBAACT,CAAD;AAAA;;AAAA,uBAAOD,cAAc,CAACC,CAAD,EAAI;AAAEiB,kBAAAA,MAAM,oBAAE2D,KAAK,CAAC3D,MAAR,6BAAkBR,SAA1B;AAAqCU,kBAAAA,IAAI,iBAAEgD,IAAI,CAAChD,IAAP,0BAAeV;AAAxD,iBAAJ,CAArB;AAAA,eAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADJ,KASI,OACI,oBAAC,WAAD;AAAa,cAAA,GAAG,aAAWoE,IAA3B;AAAmC,cAAA,KAAK,kCAAOjB,OAAO,CAACC,EAAf;AAAmBf,gBAAAA,QAAQ,kBAAE8B,KAAK,CAACG,IAAR,2BAAgB;AAA3C,gBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI,oBAAC,UAAD;AAAY,cAAA,OAAO,EAAEH,KAAK,CAACzB,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAoCyB,KAAK,CAAC5B,KAA1C,CADJ,EAEI,oBAAC,KAAD;AACI,cAAA,IAAI,EAAC,OADT;AAGI,cAAA,QAAQ,EAAE,kBAAChD,CAAD;AAAA;;AAAA,uBAAOD,cAAc,CAACC,CAAD,EAAI;AAAEiB,kBAAAA,MAAM,oBAAE2D,KAAK,CAAC3D,MAAR,6BAAkBR,SAA1B;AAAqCU,kBAAAA,IAAI,iBAAEgD,IAAI,CAAChD,IAAP,0BAAeV,SAAxD;AAAmED,kBAAAA,QAAQ,qBAAEoE,KAAK,CAACpE,QAAR,8BAAoBC;AAA/F,iBAAJ,CAArB;AAAA,eAHd;AAII,cAAA,MAAM,EAAE,gBAACT,CAAD;AAAA;;AAAA,uBAAOD,cAAc,CAACC,CAAD,EAAI;AAAEiB,kBAAAA,MAAM,oBAAE2D,KAAK,CAAC3D,MAAR,6BAAkBR,SAA1B;AAAqCU,kBAAAA,IAAI,iBAAEgD,IAAI,CAAChD,IAAP,0BAAeV,SAAxD;AAAmED,kBAAAA,QAAQ,sBAAEoE,KAAK,CAACpE,QAAR,+BAAoBC;AAA/F,iBAAJ,CAArB;AAAA,eAJZ;AAKI,cAAA,IAAI,EAAEmE,KAAK,CAACzB,MALhB;AAMI,cAAA,EAAE,EAAEyB,KAAK,CAACzB,MANd;AAOI,cAAA,UAAU,EAAE;AACRZ,gBAAAA,IAAI,EAAEqC,KAAK,CAACrC;AADJ,eAPhB;AAWI,cAAA,cAAc,EAAEN,cAXpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CADJ;AAkBP,WA5BD,MA4BO,IAAI2C,KAAK,CAACE,IAAN,IAAc,MAAlB,EAA0B;AAAA;;AAC7B,mBAAO,oBAAC,SAAD;AAAW,cAAA,GAAG,aAAWD,IAAzB;AAAiC,cAAA,EAAE,EAAED,KAAK,CAACzB,MAA3C;AAAmD,cAAA,KAAK,kCAAOS,OAAO,CAACC,EAAf;AAAmBf,gBAAAA,QAAQ,kBAAE8B,KAAK,CAACG,IAAR,2BAAgB;AAA3C,gBAAxD;AAAwG,cAAA,MAAM,EAAE,gBAAC/E,CAAD;AAAA;;AAAA,uBAAOD,cAAc,CAACC,CAAD,EAAI;AAAEiB,kBAAAA,MAAM,oBAAE2D,KAAK,CAAC3D,MAAR,6BAAkBR,SAA1B;AAAqCU,kBAAAA,IAAI,iBAAEgD,IAAI,CAAChD,IAAP,0BAAeV;AAAxD,iBAAJ,CAArB;AAAA,eAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,WAFM,MAEA,IAAImE,KAAK,CAACE,IAAN,IAAc,QAAlB,EAA4B;AAAA;;AAC/B,mBAAQ,oBAAC,WAAD;AAAa,cAAA,GAAG,aAAWD,IAA3B;AAAmC,cAAA,EAAE,EAAED,KAAK,CAACzB,MAA7C;AAAqD,cAAA,KAAK,EAAEyB,KAAK,CAAC5B,KAAlE;AAAyE,cAAA,IAAI,EAAE4B,KAAK,CAACzB,MAArF;AAA6F,cAAA,MAAM,EAAEyB,KAAK,CAAC1B,MAA3G;AAAmH,cAAA,KAAK,kCAAOU,OAAO,CAACC,EAAf;AAAmBf,gBAAAA,QAAQ,kBAAE8B,KAAK,CAACG,IAAR,2BAAgB;AAA3C,gBAAxH;AAAwK,cAAA,QAAQ,EAAE,kBAAC/E,CAAD;AAAA;;AAAA,uBAAOD,cAAc,CAACC,CAAD,EAAI;AAAEiB,kBAAAA,MAAM,oBAAE2D,KAAK,CAAC3D,MAAR,6BAAkBR,SAA1B;AAAqCU,kBAAAA,IAAI,iBAAEgD,IAAI,CAAChD,IAAP,0BAAeV;AAAxD,iBAAJ,CAArB;AAAA,eAAlL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AACH,WAFM,MAEA,IAAImE,KAAK,CAACE,IAAN,IAAc,MAAlB,EAA0B;AAAA;;AAC7B,mBACA,oBAAC,WAAD;AAAa,cAAA,GAAG,aAAWD,IAA3B;AAAmC,cAAA,KAAK,kCAAOjB,OAAO,CAACC,EAAf;AAAmBf,gBAAAA,QAAQ,kBAAE8B,KAAK,CAACG,IAAR,2BAAgB;AAA3C,gBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI,oBAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,WAAhB;AAA4B,cAAA,SAAS,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCACmB;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,MAAM,MAAzB;AACf,cAAA,QAAQ,EAAE,kBAAC/E,CAAD;AAAA;;AAAA,uBAAOD,cAAc,CAACC,CAAD,EAAI;AAAEiB,kBAAAA,MAAM,oBAAE2D,KAAK,CAAC3D,MAAR,6BAAkBR,SAA1B;AAAqCU,kBAAAA,IAAI,iBAAEgD,IAAI,CAAChD,IAAP,0BAAeV,SAAxD;AAAmED,kBAAAA,QAAQ,sBAAEoE,KAAK,CAACpE,QAAR,+BAAoBC;AAA/F,iBAAJ,CAArB;AAAA,eADK;AAEf,cAAA,MAAM,EAAE,gBAACT,CAAD;AAAA;;AAAA,uBAAOD,cAAc,CAACC,CAAD,EAAI;AAAEiB,kBAAAA,MAAM,oBAAE2D,KAAK,CAAC3D,MAAR,6BAAkBR,SAA1B;AAAqCU,kBAAAA,IAAI,iBAAEgD,IAAI,CAAChD,IAAP,0BAAeV,SAAxD;AAAmED,kBAAAA,QAAQ,sBAAEoE,KAAK,CAACpE,QAAR,+BAAoBC;AAA/F,iBAAJ,CAArB;AAAA,eAFO;AAGf,cAAA,IAAI,EAAEmE,KAAK,CAACzB,MAHG;AAIf,cAAA,EAAE,EAAEyB,KAAK,CAACzB,MAJK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADnB,CADJ,CADA;AAYH;AACJ,SAjDD,CARR,CATJ,CADJ,EAuEI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAvEJ,CADJ,CADJ;AAgFH,OAlFD,CAFR,EAsFI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,KAAK,EAAE;AAAEpB,UAAAA,MAAM,EAAE;AAAV,SAA5B;AAA2C,QAAA,OAAO,EAAC,WAAnD;AAA+D,QAAA,KAAK,EAAC,SAArE;AAA+E,QAAA,OAAO,EAAE,mBAAM;AAAE,UAAA,MAAI,CAACG,KAAL,CAAWhB,OAAX,CAAmBpB,WAAnB;AAAiC,SAAjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAtFJ,EAuFI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,KAAK,EAAE;AAAEiC,UAAAA,MAAM,EAAE;AAAV,SAA5B;AAA2C,QAAA,OAAO,EAAC,WAAnD;AAA+D,QAAA,KAAK,EAAC,SAArE;AAA+E,QAAA,OAAO,EAAE,mBAAM,CAAG,CAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAvFJ,CADJ;AA4FH;;;;EAtHgB9E,S;;AAwHrB,IAAMgI,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK,EAAL;AAAA,CAA7B;;AAGA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAC/B9H,kBAAkB,CAAC;AAAEK,IAAAA,WAAW,EAAXA,WAAF;AAAeE,IAAAA,WAAW,EAAXA,WAAf;AAA4BH,IAAAA,SAAS,EAATA,SAA5B;AAAuCE,IAAAA,OAAO,EAAPA;AAAvC,GAAD,EAAmDwH,QAAnD,CADa;AAAA,CAAnC;;AAGA,eAAe/H,OAAO,CAAC4H,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C3B,MAA7C,CAAf","sourcesContent":["import React, { Component, Fragment, useState, useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\n//\r\nimport { DataGrid, RowsProp, ColDef } from '@material-ui/data-grid';\r\n//\r\nimport { setDialog, setProducts } from '../../actions/productActions'\r\nimport { setCart } from '../../actions/cartAction'\r\nimport { setSnackbar } from '../../actions/appActions'\r\nimport { DEFAULT_LOCALE_TEXT } from '../../providers/langs/datagrid'\r\n//const classes = useStyles();\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n//\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\n\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ReorderIcon from '@material-ui/icons/Reorder';\r\n\r\nimport ptBR from \"date-fns/locale/pt-BR\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport MaskedInput from 'react-text-mask';\r\n\r\n// VALIDATORS\r\n\r\nimport { validaCpf } from '../../providers/commonMethods'\r\n//\r\n\r\n//const [valus, setValues] = useState(new Date('2021-02-13'));\r\nconst idNumbers = [\r\n    'cpf', 'cnpj', 'cep'\r\n];\r\n\r\nlet inputValues = {};\r\nasync function onChangeInputs(e, params = {}) {\r\n    let value = e.target.value;\r\n    let id = e.target.id ?? e.target.name;\r\n\r\n    if (idNumbers.includes(e.target.id)) {\r\n        value = value.replace(/[^\\d]+/g, '');\r\n    }\r\n\r\n    if (params.validate !== undefined) {\r\n        if (value.length == 11 && params.validate(value) == true) {\r\n            console.log(params.validate(value));\r\n            console.log(`o valor \"${value}\" é um  CPF`)\r\n        } else {\r\n            setSnackbar({ open: true, message: ` valor do campo ${id} inválido ` })\r\n        }\r\n\r\n        //value = request[id] ?? '';\r\n    }\r\n\r\n    if (value.length == 0 || value == 'Todos') {\r\n        inputValues[id] = '';\r\n    } else {\r\n        if (id == 'created_at') {\r\n            value = `${value.toJSON().split('T')[0]}`\r\n        }\r\n\r\n        if (idNumbers.includes(id)) {\r\n            value = value.replace(/[^\\d]+/g, '');\r\n        }\r\n        if (params.handle !== undefined) {\r\n            let request = await params.handle(value)\r\n            //value = request[id] ?? '';\r\n        }\r\n\r\n        if (params.json === undefined) {\r\n            inputValues[id] = value\r\n            //console.log(params.json);\r\n        } else {\r\n            inputValues[params.json][id] = value;\r\n\r\n        }\r\n        //console.log(inputValues)\r\n    }\r\n}\r\n\r\nfunction onClearFilter() {\r\n    inputValues = {};\r\n    document.getElementById('filter-form').querySelectorAll('input').forEach((item, index) => {\r\n        console.log({ index, item })\r\n        item.value = '';\r\n    });\r\n\r\n    document.getElementById('filter-form').querySelectorAll('select').forEach((item, index) => {\r\n        console.log({ index, item, selectedIndex: item.selectedIndex })\r\n        item.value = \"Todos\";\r\n    });\r\n}\r\n// MASKED INPUTS \r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\n\r\nfunction TextMaskCustom(props) {\r\n    const { inputRef, ...other } = props;\r\n\r\n    return (\r\n        <MaskedInput\r\n            {...other}\r\n            ref={(ref) => {\r\n                inputRef(ref ? ref.inputElement : null);\r\n            }}\r\n            //value={props.value}\r\n            mask={props.mask}\r\n            placeholderChar={'\\u2000'}\r\n\r\n        />\r\n    );\r\n}\r\n\r\n\r\n//\r\nconst DateInput = (props) => {\r\n    const [value, setValue] = useState(new Date('2021-02-13'));\r\n    function handleChange(value) {\r\n        try {\r\n            inputValues[props.id] = `${value.toJSON().split('T')[0]}`\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n        props.onChange(value);\r\n        setValue(value);\r\n    }\r\n    return (<MuiPickersUtilsProvider utils={DateFnsUtils} locale={ptBR}>\r\n        <Grid justify=\"space-around\" style={{ flexGrow: 0, marginTop: 18 }}>\r\n            <KeyboardDatePicker\r\n                margin=\"normal\"\r\n                id={props.id}\r\n                label={props.label ?? 'Data'}\r\n                format=\"dd/MM/yyyy\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                onBlur={handleChange}\r\n                KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                }}\r\n            />\r\n        </Grid>\r\n    </MuiPickersUtilsProvider>)\r\n}\r\n//\r\n\r\nconst SelectInput = (props) => {\r\n    const [value, setValue] = useState(props.values[0]);\r\n    function handleChange(e) {\r\n        props.onChange(e)\r\n        setValue(e.target.value);\r\n    }\r\n    return (\r\n        <FormControl id={props.column} style={{ ...props.style, marginTop: '25px' }}>\r\n            <InputLabel id={props.column}>{props.label}</InputLabel>\r\n            <Select size=\"small\"\r\n                labelId={props.id}\r\n                id={props.id}\r\n                name={props.name}\r\n                value={value}\r\n                onChange={handleChange}\r\n                onBlur={handleChange}\r\n            >\r\n                {\r\n                    props.values.map((val, ind) => {\r\n                        return <MenuItem key={`input-${ind}`} value={val}>{val}</MenuItem>\r\n                    })\r\n                }\r\n\r\n            </Select>\r\n        </FormControl>)\r\n}\r\nclass LForms extends Component {\r\n    state = {\r\n        data: [],\r\n        filter: ['flex']\r\n    }\r\n    async componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const classes = {\r\n            m5: {\r\n                margin: 5,\r\n                marginTop: 25,\r\n                //flexBasis: '30%'\r\n\r\n            },\r\n            root: {\r\n                maxWidth: 345,\r\n                marginBottom: 25\r\n            },\r\n            media: {\r\n                height: 140,\r\n            },\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    this.props.forms.map((form, ind) => {\r\n                        let ifjson = {};\r\n                        return (\r\n                            <div>\r\n                                <Card className={classes.root} style={{ marginBottom: 15 }}>\r\n                                    <CardContent>\r\n                                        <Typography onClick={() => {\r\n                                            let filter = this.state.filter;\r\n                                            filter[ind] = this.state.filter[ind] == 'flex' ? 'none' : 'flex'\r\n                                            this.setState({ ...this.state, filter })\r\n                                        }}>\r\n                                            <IndeterminateCheckBoxIcon /> {form.title}\r\n                                        </Typography>\r\n\r\n                                        <div key={`block-${ind}`} id={`data-form-${form.id ?? '1'}`} style={{\r\n                                            alignItems: 'center',\r\n                                            flexFlow: form.flexFlow ?? 'row wrap',\r\n                                            justifyContent: 'start',\r\n                                            display: this.state.filter[ind] ?? 'flex',\r\n                                        }}>\r\n                                            {\r\n\r\n                                                form.fields.map((input, ind1) => {\r\n                                                    ifjson[input.column] = input.value ?? '';\r\n                                                    inputValues[form.json ?? input.column] = form.json == undefined ? input.value ?? '' : ifjson;\r\n                                                    if (input.type == \"text\") {\r\n                                                        if (input.mask === undefined)\r\n                                                            return (\r\n                                                                <TextField key={`input-${ind1}`} size=\"small\" style={{ ...classes.m5, flexGrow: input.grow ?? 0, flexBasis: input.flexBasis ?? '30%' }}\r\n                                                                    id={input.column} label={input.label}\r\n                                                                    onChange={(e) => onChangeInputs(e, { handle: input.handle ?? undefined, json: form.json ?? undefined })}\r\n                                                                    onBlur={(e) => onChangeInputs(e, { handle: input.handle ?? undefined, json: form.json ?? undefined })}\r\n                                                                />\r\n                                                            )\r\n                                                        else\r\n                                                            return (\r\n                                                                <FormControl key={`input-${ind1}`} style={{ ...classes.m5, flexGrow: input.grow ?? 0 }} >\r\n                                                                    <InputLabel htmlFor={input.column}>{input.label}</InputLabel>\r\n                                                                    <Input\r\n                                                                        size=\"small\"\r\n                                                                        //value={inputValues[input.column]}\r\n                                                                        onChange={(e) => onChangeInputs(e, { handle: input.handle ?? undefined, json: form.json ?? undefined, validate: input.validate ?? undefined })}\r\n                                                                        onBlur={(e) => onChangeInputs(e, { handle: input.handle ?? undefined, json: form.json ?? undefined, validate: input.validate ?? undefined })}\r\n                                                                        name={input.column}\r\n                                                                        id={input.column}\r\n                                                                        inputProps={{\r\n                                                                            mask: input.mask,\r\n                                                                            //value: inputValues[input.column]\r\n                                                                        }}\r\n                                                                        inputComponent={TextMaskCustom}\r\n                                                                    />\r\n                                                                </FormControl>)\r\n\r\n                                                    } else if (input.type == \"date\") {\r\n                                                        return <DateInput key={`input-${ind1}`} id={input.column} style={{ ...classes.m5, flexGrow: input.grow ?? 0 }} onBlur={(e) => onChangeInputs(e, { handle: input.handle ?? undefined, json: form.json ?? undefined })} />\r\n                                                    } else if (input.type == \"select\") {\r\n                                                        return (<SelectInput key={`input-${ind1}`} id={input.column} label={input.label} name={input.column} values={input.values} style={{ ...classes.m5, flexGrow: input.grow ?? 0 }} onChange={(e) => onChangeInputs(e, { handle: input.handle ?? undefined, json: form.json ?? undefined })} />)\r\n                                                    } else if (input.type == \"file\") {\r\n                                                        return (\r\n                                                        <FormControl key={`input-${ind1}`} style={{ ...classes.m5, flexGrow: input.grow ?? 0 }} >\r\n                                                            <Button variant=\"contained\" component=\"label\">  \r\n                                                                Enviar Arquivo <input type=\"file\" hidden\r\n                                                                onChange={(e) => onChangeInputs(e, { handle: input.handle ?? undefined, json: form.json ?? undefined, validate: input.validate ?? undefined })}\r\n                                                                onBlur={(e) => onChangeInputs(e, { handle: input.handle ?? undefined, json: form.json ?? undefined, validate: input.validate ?? undefined })}\r\n                                                                name={input.column}\r\n                                                                id={input.column}\r\n                                                                />\r\n                                                            </Button>\r\n                                                        </FormControl>\r\n                                                        )\r\n                                                    }\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    </CardContent>\r\n                                    <CardActionArea>\r\n                                        <CardActions>\r\n                                        </CardActions>\r\n                                    </CardActionArea>\r\n                                </Card>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                <Button size=\"small\" style={{ margin: 5 }} variant=\"contained\" color=\"primary\" onClick={() => { this.props.request(inputValues) }}> Salvar</Button>\r\n                <Button size=\"small\" style={{ margin: 5 }} variant=\"contained\" color=\"primary\" onClick={() => { }} > Cancelar</Button>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = store => ({\r\n\r\n});\r\nconst mapDispatchToProps = dispatch =>\r\n    bindActionCreators({ setProducts, setSnackbar, setDialog, setCart }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LForms)\r\n"]},"metadata":{},"sourceType":"module"}