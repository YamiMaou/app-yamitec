{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Maou\\\\Documents\\\\Projetos\\\\CLIENTES\\\\RNF\\\\Completo\\\\client\\\\src\\\\pages\\\\Providers\\\\create\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, Fragment, useState, useRef, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Paper from '@material-ui/core/Paper';\nimport HomeIcon from '@material-ui/icons/Home';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport LForms from \"../../../components/Forms\";\nimport { setSnackbar } from \"../../../actions/appActions\";\nimport { postApiProviders, getApiProviders, getApiProviderTypes } from \"../../../providers/api\";\nimport { validaEmail, validaCnpj, isFutureData } from \"../../../providers/commonMethods\";\nimport { InputCep, InputCnpj, InputPhone } from \"../../../providers/masks\";\nimport { Redirect } from 'react-router-dom';\nimport { withSnackbar } from 'notistack';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nvar SelectInput = function SelectInput(props) {\n  var _props$value;\n\n  var _useState = useState((_props$value = props.value) != null ? _props$value : \"Selecione\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  function handleChange(e) {\n    var _e$target = e.target,\n        value = _e$target.value,\n        id = _e$target.id;\n\n    if (props.validate !== undefined) {\n      if (props.validate(value)) {\n        setError(false);\n      } else {\n        setError(true);\n      }\n    }\n\n    props.onChange(e);\n    console.log(e.target.value);\n    setValue(e.target.value);\n  }\n\n  return React.createElement(FormControl, {\n    id: props.column,\n    style: _objectSpread(_objectSpread({}, props.style), {}, {\n      marginTop: '25px'\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, React.createElement(InputLabel, {\n    id: props.column,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, props.label), React.createElement(Select, {\n    size: \"small\",\n    labelId: props.id,\n    id: props.id,\n    name: props.name,\n    value: value,\n    error: error,\n    placeholder: \"Selecione\",\n    onChange: handleChange,\n    onBlur: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, React.createElement(MenuItem, {\n    key: \"input-00\",\n    value: \"Selecione\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Selecione\"), props.json ? props.values.map(function (val, ind) {\n    return React.createElement(MenuItem, {\n      key: \"input-\" + ind,\n      value: val.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 32\n      }\n    }, val[props.valueLabel]);\n  }) : props.values.map(function (val, ind) {\n    return React.createElement(MenuItem, {\n      key: \"input-\" + ind,\n      value: val,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 32\n      }\n    }, val);\n  })));\n};\n\nvar TypeEmpresaInput = function TypeEmpresaInput(props) {\n  var _props$helperText, _props$value2, _props$helperText2;\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      value = _useState6[0],\n      setValue = _useState6[1];\n\n  var _useState7 = useState(1),\n      _useState8 = _slicedToArray(_useState7, 2),\n      empresa = _useState8[0],\n      setEmpresa = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      error = _useState10[0],\n      setError = _useState10[1];\n\n  function handleChange(e) {\n    var _props$onChange;\n\n    var _e$target2 = e.target,\n        value = _e$target2.value,\n        id = _e$target2.id;\n    (_props$onChange = props.onChange(e)) != null ? _props$onChange : undefined;\n    console.log(e.target.value);\n    setValue(e.target.value);\n  }\n\n  return React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, React.createElement(SelectInput, {\n    valueLabel: \"value\",\n    json: true,\n    value: value,\n    helperText: (_props$helperText = props.helperText) != null ? _props$helperText : \"\",\n    key: \"input-\" + 15000,\n    id: \"type\",\n    label: \"Empresa\",\n    name: \"type\",\n    values: [{\n      id: 1,\n      value: 'Matriz'\n    }, {\n      id: 2,\n      value: 'Filial'\n    }],\n    style: {\n      flexBasis: window.innerWidth < 768 ? '100%' : props.flexBasis\n    },\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), value == 2 && React.createElement(SelectInput, {\n    valueLabel: props.valueLabel,\n    json: props.json,\n    value: (_props$value2 = props.value) != null ? _props$value2 : undefined,\n    helperText: (_props$helperText2 = props.helperText) != null ? _props$helperText2 : \"\",\n    key: \"input-\" + 15001,\n    id: props.column,\n    label: props.label,\n    name: props.column,\n    values: props.values,\n    style: {\n      flexBasis: window.innerWidth < 768 ? '100%' : props.flexBasis\n    },\n    onChange: function onChange(e) {\n      var _props$onChange2;\n\n      return (_props$onChange2 = props.onChange(e)) != null ? _props$onChange2 : undefined;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar CreateProviders = function (_Component) {\n  _inherits(CreateProviders, _Component);\n\n  var _super = _createSuper(CreateProviders);\n\n  function CreateProviders() {\n    var _this2;\n\n    _classCallCheck(this, CreateProviders);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.state = {\n      data: [],\n      providertypes: [],\n      states: []\n    };\n    return _this2;\n  }\n\n  _createClass(CreateProviders, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var data, providertypes;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getApiProviders({\n                type: \"Matriz\",\n                active: 1\n              }));\n\n            case 2:\n              data = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(getApiProviderTypes());\n\n            case 5:\n              providertypes = _context.sent;\n              this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n                data: data.data,\n                providertypes: providertypes.data\n              }));\n              localStorage.setItem(\"sessionTime\", 900);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var closeSnack = function closeSnack(event, reason) {\n        if (reason === 'clickaway') {\n          return;\n        }\n\n        _this3.props.setSnackbar({\n          open: false,\n          message: \"\"\n        });\n      };\n\n      var request = function request(data) {\n        var response, _response$data, errors, messages;\n\n        return _regeneratorRuntime.async(function request$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this3.props.setSnackbar({\n                  open: true,\n                  message: \"Validando Dados, Aguarde ...\"\n                });\n\n                _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                  loading: true\n                }));\n\n                _context2.next = 4;\n                return _regeneratorRuntime.awrap(postApiProviders(data));\n\n              case 4:\n                response = _context2.sent;\n\n                if (response.data.success) {\n                  _this3.props.setSnackbar({\n                    open: true,\n                    message: response.data.message\n                  });\n\n                  _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                    loading: false\n                  }));\n                } else {\n                  console.log(response);\n                  errors = (_response$data = response.data) != null ? _response$data : undefined;\n                  messages = '';\n\n                  if (errors !== undefined && errors.error !== undefined && errors.error.response && errors.error.response.data !== undefined && errors.error.response.data.errors !== undefined) {\n                    Object.keys(errors.error.response.data.errors).map(function (err) {\n                      console.log(err);\n                      var field = err == \"file\" ? \"Anexo\" : err;\n                      messages += \"O \" + field.toUpperCase() + \" \" + errors.error.response.data.errors[err][0] + \" \\n\";\n                    });\n                  } else {\n                    messages = 'Houve um problema em sua requisição!';\n                  }\n\n                  _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                    loading: false\n                  }));\n\n                  _this3.props.setSnackbar({\n                    open: true,\n                    message: messages\n                  });\n                }\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      };\n\n      var validateFields = function validateFields(fields, values) {\n        var campo = undefined;\n        fields.reverse().map(function (v, k) {\n          v.fields.reverse().map(function (v1, k1) {\n            var value = values[v1.column];\n\n            if (v1.validate !== undefined) {\n              if (v1.validate.number !== undefined) {\n                if (/^[-]?\\d+$/.test(value) == false) campo = {\n                  id: v1.column,\n                  message: \"O Campo \" + v1.label + \" \\xE9 somente n\\xFAmeros \"\n                };\n              }\n\n              if (v1.validate.decimal !== undefined) {\n                if (/^\\s*-?(\\d+(\\.\\d{1,2})?|\\.\\d{1,2})\\s*$/.test(value) == false) campo = {\n                  id: v1.column,\n                  message: \"O Campo \" + v1.label + \" \\xE9 somente n\\xFAmeros e ponto \"\n                };\n              }\n\n              if (v1.validate.max !== undefined) {\n                if (value.length > v1.validate.max) campo = {\n                  id: v1.column,\n                  message: \"O Campo \" + v1.label + \", tamanho m\\xE1ximo de \" + v1.validate.max + \" caracteres ex\\xEAdido\"\n                };\n              }\n\n              if (v1.validate.min !== undefined) {\n                if (value.length < v1.validate.min) campo = {\n                  id: v1.column,\n                  message: \"O Campo \" + v1.label + \", tamanho minimo de \" + v1.validate.min + \" caracteres.\"\n                };\n              }\n\n              if (v1.validate.required !== undefined) {\n                if (value == \"Selecione\") {\n                  campo = {\n                    id: v1.column,\n                    message: \"O Campo \" + v1.label + \" \\xE9 inv\\xE1lido \"\n                  };\n                }\n\n                if (value.length == 0) campo = {\n                  id: v1.column,\n                  message: \"O Campo \" + v1.label + \" \\xE9 obrigat\\xF3rio\"\n                };\n              }\n            }\n\n            if (v1.validateHandler !== undefined) {\n              if (v1.validateHandler(value) == false) campo = {\n                id: v1.column,\n                message: \"O Campo \" + v1.label + \"  \\xE9 inv\\xE1lido \"\n              };\n            }\n          });\n        });\n        campo !== undefined ? _this3.props.setSnackbar({\n          open: true,\n          message: campo.message\n        }) : '';\n        return campo === undefined ? true : false;\n      };\n\n      var flexBasis = '22%';\n      var forms = [{\n        title: 'Dados Básicos',\n        fields: [{\n          column: 'active',\n          label: 'Ativo',\n          type: 'checkbox',\n          value: 1,\n          disabled: true,\n          flexBasis: \"100%\"\n        }, {\n          column: 'providertype_id',\n          label: 'Tipo Fornecedor',\n          type: 'select',\n          json: true,\n          valueLabel: \"name\",\n          values: this.state.providertypes,\n          validate: {\n            required: true\n          },\n          flexBasis: flexBasis\n        }, {\n          column: 'matriz_id',\n          label: 'Matriz',\n          type: 'custom',\n          json: true,\n          valueLabel: \"fantasy_name\",\n          values: this.state.data,\n          flexBasis: flexBasis,\n          component: TypeEmpresaInput\n        }, {\n          column: 'cnpj',\n          label: 'CNPJ',\n          type: 'text',\n          mask: InputCnpj,\n          validate: {\n            min: 11,\n            number: true,\n            required: true\n          },\n          validateHandler: validaCnpj,\n          flexBasis: '33%',\n          helperText: \"o valor digitado é inválido\"\n        }, {\n          column: 'company_name',\n          label: 'Razão Social',\n          type: 'text',\n          validate: {\n            max: 50,\n            required: true\n          },\n          flexBasis: flexBasis\n        }, {\n          column: 'fantasy_name',\n          label: 'Nome Fantasia',\n          type: 'text',\n          validate: {\n            max: 50,\n            required: true\n          },\n          flexBasis: '33%'\n        }, {\n          column: 'anexo',\n          label: 'Documento',\n          type: 'file',\n          flexBasis: flexBasis\n        }, {\n          column: 'logo',\n          label: 'Logo marca',\n          type: 'file',\n          validate: {\n            required: true\n          },\n          flexBasis: flexBasis\n        }]\n      }, {\n        id: 'addr',\n        title: 'Endereço',\n        fields: [{\n          column: 'addr_clone',\n          label: 'Clonar Matriz',\n          type: 'checkbox',\n          flexBasis: \"100%\"\n        }, {\n          column: 'zipcode',\n          label: 'CEP',\n          type: 'text',\n          mask: InputCep,\n          validate: {\n            max: 9,\n            required: true\n          },\n          flexBasis: '9%'\n        }, {\n          column: 'street',\n          label: 'Endereço',\n          validate: {\n            max: 100,\n            required: true\n          },\n          type: 'text',\n          flexBasis: flexBasis\n        }, {\n          column: 'additional',\n          label: 'Complemento',\n          type: 'text',\n          flexBasis: flexBasis\n        }, {\n          column: 'uf',\n          label: 'Estado',\n          type: 'select',\n          validate: {\n            required: true\n          },\n          values: [\"Acre\", \"Alagoas\", \"Amazonas\", \"Amapá\", \"Bahia\", \"Ceará\", \"Brasília\", \"Espírito Santo\", \"Goiás\", \"Maranhão\", \"Minas Gerais\", \"Mato Grosso do Sul\", \"Mato Grosso\", \"Pará\", \"Paraíba\", \"Pernambuco\", \"Piauí\", \"Paraná\", \"Rio de Janeiro\", \"Rio Grande do Norte\", \"Rondônia\", \"Roraima\", \"Rio Grande do Sul\", \"Santa Catarina\", \"Sergipe\", \"São Paulo\", \"Tocantins\"],\n          flexBasis: flexBasis,\n          style: {\n            minWidth: \"192px\"\n          }\n        }, {\n          column: 'city',\n          label: 'Cidade',\n          type: 'text',\n          validate: {\n            max: 100,\n            required: true\n          },\n          flexBasis: flexBasis\n        }]\n      }, {\n        title: 'Contato',\n        fields: [{\n          column: 'contact_clone',\n          label: 'Clonar Matriz',\n          type: 'checkbox',\n          flexBasis: \"100%\"\n        }, {\n          column: 'phone1',\n          label: 'Contato',\n          type: 'text',\n          mask: InputPhone,\n          validate: {\n            max: 15,\n            required: true\n          },\n          flexBasis: '20%'\n        }, {\n          column: 'phone2',\n          label: 'Contato alternativo',\n          type: 'text',\n          mask: InputPhone,\n          validate: {\n            max: 15\n          },\n          flexBasis: '20%'\n        }, {\n          column: 'email',\n          label: 'E-mail',\n          type: 'email',\n          validate: {\n            max: 100\n          },\n          validateHandler: validaEmail,\n          flexBasis: '20%'\n        }, {\n          column: 'site',\n          label: 'Site',\n          type: 'text',\n          validate: {\n            max: 100\n          },\n          flexBasis: '20%'\n        }]\n      }, {\n        title: 'Redes Sociais',\n        fields: [{\n          column: 'linkedin',\n          label: 'Usuário do LinkedIn',\n          type: 'text',\n          validate: {\n            max: 100,\n            required: true\n          },\n          flexBasis: '20%'\n        }, {\n          column: 'facebook',\n          label: 'Usuário do Facebook',\n          type: 'text',\n          validate: {\n            max: 100,\n            required: true\n          },\n          flexBasis: '20%'\n        }, {\n          column: 'instagram',\n          label: 'Usuário do Instagram',\n          type: 'text',\n          validate: {\n            max: 100,\n            required: true\n          },\n          flexBasis: '20%'\n        }]\n      }, {\n        title: 'Contrato Atual',\n        fields: [{\n          column: 'contract_clone',\n          label: 'Clonar Matriz',\n          type: 'checkbox',\n          flexBasis: \"100%\"\n        }, {\n          column: 'accession_date',\n          label: 'Data de Adesão - Início',\n          type: 'date',\n          validate: {\n            required: true\n          },\n          flexBasis: '20%'\n        }, {\n          column: 'end_date',\n          label: 'Data de Adesão - Fim',\n          type: 'date',\n          validate: {\n            required: true\n          },\n          flexBasis: '20%'\n        }, {\n          column: 'rate',\n          label: 'Taxa de Adesão',\n          type: 'number',\n          validate: {\n            decimal: true,\n            required: true\n          },\n          flexBasis: '20%'\n        }]\n      }];\n      return React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }\n      }, React.createElement(AppBar, {\n        position: \"static\",\n        style: {\n          padding: 10,\n          marginTop: 10,\n          marginBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 17\n        }\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }\n      }, React.createElement(HomeIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 25\n        }\n      }), \"  \", React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 39\n        }\n      }, \"Cadastro / Fornecedores\"))), React.createElement(LForms, {\n        forms: forms,\n        request: request,\n        validate: function validate(values) {\n          return validateFields(forms, values);\n        },\n        loading: this.state.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return CreateProviders;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    session: store.authReducer.data,\n    snackbar: store.appReducer.snackbar\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setSnackbar: setSnackbar\n  }, dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CreateProviders));","map":{"version":3,"sources":["C:/Users/Maou/Documents/Projetos/CLIENTES/RNF/Completo/client/src/pages/Providers/create/index.js"],"names":["React","Component","Fragment","useState","useRef","useEffect","connect","bindActionCreators","withRouter","AppBar","Paper","HomeIcon","Typography","Snackbar","LForms","setSnackbar","postApiProviders","getApiProviders","getApiProviderTypes","validaEmail","validaCnpj","isFutureData","InputCep","InputCnpj","InputPhone","Redirect","withSnackbar","MenuItem","FormHelperText","FormControl","FormControlLabel","Select","InputLabel","SelectInput","props","value","setValue","error","setError","handleChange","e","target","id","validate","undefined","onChange","console","log","column","style","marginTop","label","name","json","values","map","val","ind","valueLabel","TypeEmpresaInput","empresa","setEmpresa","helperText","flexBasis","window","innerWidth","CreateProviders","state","data","providertypes","states","type","active","setState","localStorage","setItem","closeSnack","event","reason","open","message","request","loading","response","success","errors","messages","Object","keys","err","field","toUpperCase","validateFields","fields","campo","reverse","v","k","v1","k1","number","test","decimal","max","length","min","required","validateHandler","forms","title","disabled","component","mask","minWidth","padding","marginBottom","mapStateToProps","store","session","authReducer","snackbar","appReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment, useState, useRef, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport LForms from '../../../components/Forms';\r\n//\r\nimport { setSnackbar } from '../../../actions/appActions'\r\nimport { postApiProviders, getApiProviders, getApiProviderTypes } from '../../../providers/api'\r\nimport { validaEmail, validaCnpj, isFutureData } from '../../../providers/commonMethods'\r\n\r\nimport { InputCep, InputCnpj, InputPhone } from '../../../providers/masks'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { withSnackbar  } from 'notistack';\r\nimport { TextInput } from 'react-native';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nconst SelectInput = (props) => {\r\n    const [value, setValue] = useState(props.value ?? \"Selecione\");\r\n    const [error, setError] = useState(false);\r\n    function handleChange(e) {\r\n        const { value, id } = e.target;\r\n        if (props.validate !== undefined) {\r\n            if (props.validate(value)) {\r\n                setError(false);\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }\r\n        props.onChange(e)\r\n        console.log(e.target.value)\r\n        setValue(e.target.value);\r\n    }\r\n    return (\r\n        <FormControl id={props.column} style={{ ...props.style, marginTop: '25px' }}>\r\n            <InputLabel id={props.column}>{props.label}</InputLabel>\r\n            <Select size=\"small\"\r\n                labelId={props.id}\r\n                id={props.id}\r\n                name={props.name}\r\n                value={value}\r\n                error={error}\r\n                placeholder=\"Selecione\"\r\n                //helperText={props.error ? props.helperText ?? \"conteúdo inválido\" : \"\"}\r\n                onChange={handleChange}\r\n                onBlur={handleChange}\r\n            >\r\n                <MenuItem key={`input-00`} value=\"Selecione\">Selecione</MenuItem>\r\n                {props.json ? (\r\n                    props.values.map((val, ind) => {\r\n                        return <MenuItem key={`input-${ind}`} value={val.id}>{val[props.valueLabel]}</MenuItem>\r\n                    })\r\n                ) : (\r\n                    props.values.map((val, ind) => {\r\n                        return <MenuItem key={`input-${ind}`} value={val}>{val}</MenuItem>\r\n                    })\r\n                )\r\n                }\r\n\r\n            </Select>\r\n        </FormControl>)\r\n}\r\nconst TypeEmpresaInput = (props) => {\r\n    const [value, setValue] = useState(1);\r\n    const [empresa, setEmpresa] = useState(1);\r\n    const [error, setError] = useState(false);\r\n    function handleChange(e) {\r\n        const { value, id } = e.target;\r\n        props.onChange(e) ?? undefined;\r\n        console.log(e.target.value)\r\n        setValue(e.target.value);\r\n    }\r\n    return (<div>\r\n        <SelectInput valueLabel=\"value\" json={true} value={value} helperText={props.helperText ?? \"\"} key={`input-${15000}`} id={\"type\"} label={\"Empresa\"} name={\"type\"} values={[{id:1, value: 'Matriz'},{id:2, value: 'Filial'} ]} style={{flexBasis: window.innerWidth < 768 ? '100%' : props.flexBasis }} onChange={(e) => handleChange(e)} />\r\n        {value == 2 &&\r\n        <SelectInput valueLabel={props.valueLabel} json={props.json} value={props.value ?? undefined} helperText={props.helperText ?? \"\"} key={`input-${15001}`} id={props.column} label={props.label} name={props.column} values={props.values} style={{flexBasis: window.innerWidth < 768 ? '100%' : props.flexBasis }} onChange={(e) => props.onChange(e) ?? undefined} />\r\n    }</div>)\r\n}\r\n\r\nclass CreateProviders extends Component {\r\n    \r\n    state = {\r\n        data: [],\r\n        providertypes: [],\r\n        states: []\r\n    }\r\n    async componentDidMount() {\r\n        const data = await getApiProviders({type: \"Matriz\", active: 1});\r\n        const providertypes = await getApiProviderTypes();\r\n        this.setState({...this.state, data: data.data, providertypes: providertypes.data});\r\n        localStorage.setItem(\"sessionTime\", 900);\r\n\r\n    }\r\n\r\n    render() {\r\n        //console.log(this.state.data)\r\n         // to use snackbar Provider\r\n        const closeSnack = (event, reason) => {\r\n            if (reason === 'clickaway') {\r\n                return;\r\n            }\r\n            this.props.setSnackbar({ open: false, message: \"\" });\r\n        };\r\n        \r\n        const request = async (data) => {\r\n            this.props.setSnackbar({ open: true, message: \"Validando Dados, Aguarde ...\", });\r\n            this.setState({ ...this.state, loading: true });\r\n\r\n            let response = await postApiProviders(data);\r\n            //console.log(response);\r\n            if (response.data.success) {\r\n                //this.props.enqueueSnackbar( response.data.message, { variant: 'success' });\r\n                this.props.setSnackbar({ open: true, message: response.data.message });\r\n                this.setState({ ...this.state, loading: false });\r\n                //this.props.history.goBack();\r\n            } else {\r\n                console.log(response)\r\n                let errors = response.data ?? undefined;\r\n\r\n                //let { errors } = response.data.error.response.data ?? {error: undefined}\r\n                let messages = '';\r\n                if(errors !== undefined && errors.error !== undefined && errors.error.response && errors.error.response.data !== undefined && errors.error.response.data.errors !== undefined){\r\n                    Object.keys(errors.error.response.data.errors).map(err => {\r\n                        console.log(err);\r\n                        let field = err == \"file\" ? \"Anexo\" : err\r\n                        messages += `O ${field.toUpperCase()} ${errors.error.response.data.errors[err][0]} \\n`;\r\n                    })\r\n                } else{\r\n                    messages = 'Houve um problema em sua requisição!'\r\n                }\r\n                //response.data.error.response.data.errors\r\n                //this.props.enqueueSnackbar( message, { variant: 'error' });\r\n                this.setState({ ...this.state, loading: false });\r\n                this.props.setSnackbar({ open: true, message: messages});\r\n            }\r\n\r\n        }\r\n        const validateFields = (fields, values) => {\r\n            //console.log(fields);\r\n            let campo = undefined;\r\n            fields.reverse().map((v,k) => {\r\n                v.fields.reverse().map((v1,k1)=>{\r\n                        let value = values[v1.column];\r\n                        if (v1.validate !== undefined) {\r\n                            if (v1.validate.number !== undefined) {\r\n                                if (/^[-]?\\d+$/.test(value) == false)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label} é somente números ` }\r\n                            }\r\n                            \r\n                            if(v1.validate.decimal !== undefined){\r\n                                if (/^\\s*-?(\\d+(\\.\\d{1,2})?|\\.\\d{1,2})\\s*$/.test(value) == false)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label} é somente números e ponto ` }\r\n                            }\r\n\r\n                            if (v1.validate.max !== undefined) {\r\n                                if (value.length > v1.validate.max)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label}, tamanho máximo de ${v1.validate.max} caracteres exêdido` };\r\n                            }\r\n\r\n                            if (v1.validate.min !== undefined) {\r\n                                if (value.length < v1.validate.min)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label}, tamanho minimo de ${v1.validate.min} caracteres.` };\r\n                            }\r\n\r\n                            if (v1.validate.required !== undefined) {\r\n                                if(value == \"Selecione\"){\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label} é inválido ` }\r\n                                }\r\n                                if (value.length == 0)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label} é obrigatório` };\r\n                            }\r\n                        }\r\n                        \r\n                        if(v1.validateHandler !== undefined){\r\n                            if (v1.validateHandler(value) == false)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label}  é inválido ` }\r\n                        }\r\n                    })\r\n                })\r\n                //console.log(campo)\r\n                campo !== undefined ? this.props.setSnackbar({ open: true, message: campo.message}) : '';\r\n\r\n                return campo === undefined ? true : false\r\n        }\r\n        const flexBasis = '22%';\r\n        const forms = [\r\n            {\r\n                title: 'Dados Básicos',\r\n                fields: [\r\n                    { column: 'active', label: 'Ativo', type: 'checkbox',  value: 1, disabled: true, flexBasis : \"100%\" },\r\n                    {\r\n                        column: 'providertype_id', label: 'Tipo Fornecedor', type: 'select',\r\n                        json: true, \r\n                        valueLabel: \"name\",\r\n                        values: this.state.providertypes,//[{id: 1, value: \"Farmácia\"},{id: 2, value: \"Loja\"}],\r\n                        validate: {required: true },\r\n                        //value: \"Coordenador de usuários\",\r\n                        flexBasis\r\n                    },\r\n                    {\r\n                        column: 'matriz_id', \r\n                        label: 'Matriz', \r\n                        type: 'custom',\r\n                        json: true, \r\n                        valueLabel: \"fantasy_name\",\r\n                        values: this.state.data,//[{id: 1, value: \"Farmácia\"},{id: 2, value: \"Loja\"}],\r\n                        flexBasis,\r\n                        component: TypeEmpresaInput},\r\n                    { column: 'cnpj', label: 'CNPJ', type: 'text', mask: InputCnpj, validate: {min: 11, number: true, required: true},validateHandler: validaCnpj, flexBasis: '33%', helperText: \"o valor digitado é inválido\" },\r\n                    { column: 'company_name', label: 'Razão Social', type: 'text', validate: {max: 50, required: true}, flexBasis },\r\n                    { column: 'fantasy_name', label: 'Nome Fantasia', type: 'text', validate: {max: 50, required: true}, flexBasis:'33%' },\r\n                    { column: 'anexo', label: 'Documento', type: 'file', flexBasis },\r\n                    { column: 'logo', label: 'Logo marca', type: 'file', validate: {required: true}, flexBasis },\r\n                    //\r\n                    //{ column: 'created_at', label: 'Data', type: 'date' },\r\n                ]\r\n            },\r\n            {\r\n                id: 'addr',\r\n                title: 'Endereço',\r\n                //flexFlow: 'row no-wrap',\r\n                //json: \"address\",\r\n                fields: [\r\n                    { column: 'addr_clone', label: 'Clonar Matriz', type: 'checkbox', flexBasis : \"100%\" },\r\n                    \r\n                    {\r\n                        column: 'zipcode', label: 'CEP', type: 'text', mask: InputCep, validate: {max: 9, required: true}, flexBasis: '9%',\r\n                        //handle: getAddress \r\n                    },\r\n                    { column: 'street', label: 'Endereço', validate: {max: 100, required: true}, type: 'text', flexBasis },\r\n                    { column: 'additional', label: 'Complemento', type: 'text', flexBasis },\r\n                    {\r\n                        column: 'uf', label: 'Estado', type: 'select',\r\n                        validate: {required: true },\r\n                        values: [\"Acre\", \"Alagoas\", \"Amazonas\", \"Amapá\", \"Bahia\", \"Ceará\", \"Brasília\", \"Espírito Santo\", \"Goiás\", \"Maranhão\", \"Minas Gerais\", \"Mato Grosso do Sul\", \"Mato Grosso\", \"Pará\", \"Paraíba\", \"Pernambuco\", \"Piauí\", \"Paraná\", \"Rio de Janeiro\", \"Rio Grande do Norte\", \"Rondônia\", \"Roraima\", \"Rio Grande do Sul\", \"Santa Catarina\", \"Sergipe\", \"São Paulo\", \"Tocantins\"],\r\n                        flexBasis, style:{minWidth: \"192px\"}\r\n                    },\r\n                    { column: 'city', label: 'Cidade', type: 'text', validate: {max: 100, required: true}, flexBasis },\r\n                ]\r\n            },\r\n            {\r\n                title: 'Contato',\r\n                //json: 'contact',\r\n                fields: [\r\n                    { column: 'contact_clone', label: 'Clonar Matriz', type: 'checkbox', flexBasis : \"100%\" },\r\n                    { column: 'phone1', label: 'Contato', type: 'text', mask: InputPhone, validate: {max: 15, required: true}, flexBasis: '20%' },\r\n                    { column: 'phone2', label: 'Contato alternativo', type: 'text', mask: InputPhone, validate: {max: 15}, flexBasis: '20%' },\r\n                    { column: 'email', label: 'E-mail', type: 'email', validate: {max: 100}, validateHandler: validaEmail, flexBasis: '20%' },\r\n                    { column: 'site', label: 'Site', type: 'text', validate: {max: 100}, flexBasis: '20%' },\r\n                ]\r\n            },\r\n            {\r\n                title: 'Redes Sociais',\r\n                //json: 'contact',\r\n                fields: [\r\n                    { column: 'linkedin', label: 'Usuário do LinkedIn', type: 'text', validate: {max: 100, required: true}, flexBasis: '20%' },\r\n                    { column: 'facebook', label: 'Usuário do Facebook', type: 'text', validate: {max: 100, required: true}, flexBasis: '20%' },\r\n                    { column: 'instagram', label: 'Usuário do Instagram', type: 'text', validate: {max: 100, required: true}, flexBasis: '20%' },\r\n                ]\r\n            },\r\n            {\r\n                title: 'Contrato Atual',\r\n                //json: 'contact',\r\n                fields: [\r\n                    { column: 'contract_clone', label: 'Clonar Matriz', type: 'checkbox', flexBasis : \"100%\" },\r\n                    { column: 'accession_date', label: 'Data de Adesão - Início', type: 'date', validate: {required: true}, flexBasis: '20%' },\r\n                    { column: 'end_date', label: 'Data de Adesão - Fim', type: 'date', validate: {required: true}, flexBasis: '20%' },\r\n                    { column: 'rate', label: 'Taxa de Adesão', type: 'number', validate: {decimal: true, required: true}, flexBasis: '20%' },\r\n                ]\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <Fragment>\r\n                <AppBar position=\"static\" style={{ padding: 10, marginTop: 10, marginBottom: 10 }}>\r\n                    <Typography variant=\"h6\">\r\n                        <HomeIcon />  <span>Cadastro / Fornecedores</span>\r\n                    </Typography>\r\n                </AppBar>\r\n                <LForms forms={forms}\r\n                    request={request} \r\n                    validate={(values) => { return validateFields(forms,values)}}\r\n                    loading={this.state.loading}\r\n                />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = store => ({\r\n    session: store.authReducer.data,\r\n    snackbar: store.appReducer.snackbar\r\n});\r\nconst mapDispatchToProps = dispatch =>\r\n    bindActionCreators({ setSnackbar }, dispatch);\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CreateProviders))\r\n"]},"metadata":{},"sourceType":"module"}