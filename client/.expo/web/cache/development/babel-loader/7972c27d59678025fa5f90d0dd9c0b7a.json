{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Maou\\\\Documents\\\\Projetos\\\\CLIENTES\\\\RNF\\\\client\\\\src\\\\pages\\\\Contributors\\\\create\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport HomeIcon from '@material-ui/icons/Home';\nimport BlockIcon from '@material-ui/icons/Block';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Typography from '@material-ui/core/Typography';\nimport LForms from \"../../../components/Forms\";\nimport { setDialog, setProducts } from \"../../../actions/productActions\";\nimport { setCart } from \"../../../actions/cartAction\";\nimport { setSnackbar } from \"../../../actions/appActions\";\nimport { postApiContributors } from \"../../../providers/api\";\nimport { InputCep, InputCpf, InputPhone } from \"../../../providers/masks\";\n\nvar CreateContributors = function (_Component) {\n  _inherits(CreateContributors, _Component);\n\n  var _super = _createSuper(CreateContributors);\n\n  function CreateContributors() {\n    var _this;\n\n    _classCallCheck(this, CreateContributors);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      contributors: []\n    };\n    return _this;\n  }\n\n  _createClass(CreateContributors, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var authData = JSON.parse(localStorage.getItem(\"user\"));\n      var classes = {\n        root: {\n          maxWidth: 345,\n          height: window.innerHeight - 150\n        },\n        media: {\n          height: 140\n        }\n      };\n      var flexBasis = '30%';\n      var forms = [{\n        title: 'Dados Básicos',\n        fields: [{\n          column: 'cpf',\n          label: 'Cpf',\n          type: 'text',\n          mask: InputCpf,\n          flexBasis: flexBasis\n        }, {\n          column: 'name',\n          label: 'Nome',\n          type: 'text',\n          flexBasis: flexBasis\n        }, {\n          column: 'function',\n          label: 'Função',\n          type: 'select',\n          values: [\"Todos\", \"Coordenador de usuários\", \"Coordenador de parceiros\", \"Gerente\", \"Operador de marketing\"],\n          value: \"Todos\",\n          flexBasis: flexBasis\n        }, {\n          column: 'active',\n          label: 'Situação',\n          type: 'select',\n          values: [\"Todos\", \"Ativo\", \"Inativo\"],\n          value: \"Todos\",\n          flexBasis: flexBasis\n        }]\n      }, {\n        title: 'Endereço',\n        fields: [{\n          column: 'cep',\n          label: 'CEP',\n          type: 'text',\n          mask: InputCep,\n          flexBasis: '20%'\n        }, {\n          column: 'street',\n          label: 'Endereço',\n          type: 'text',\n          flexBasis: flexBasis\n        }, {\n          column: 'complement',\n          label: 'Complemento',\n          type: 'text',\n          flexBasis: '20%'\n        }, {\n          column: 'state',\n          label: 'Endereço',\n          type: 'select',\n          values: [\"São Paulo\", \"Coordenador de usuários\", \"Coordenador de parceiros\", \"Gerente\", \"Operador de marketing\"],\n          value: \"São Paulo\",\n          flexBasis: flexBasis\n        }, {\n          column: 'city',\n          label: 'Cidade',\n          type: 'text',\n          flexBasis: flexBasis\n        }]\n      }, {\n        title: 'Contato',\n        fields: [{\n          column: 'contact1',\n          label: 'Contato 01',\n          type: 'text',\n          mask: InputPhone,\n          flexBasis: flexBasis\n        }, {\n          column: 'contact2',\n          label: 'Contato 02',\n          type: 'text',\n          mask: InputPhone,\n          flexBasis: flexBasis\n        }, {\n          column: 'email',\n          label: 'e-mail',\n          type: 'text',\n          flexBasis: flexBasis\n        }]\n      }, {\n        title: 'Redes Sociais',\n        fields: [{\n          column: 'linkedin',\n          label: 'LinkedIn',\n          type: 'text',\n          flexBasis: flexBasis\n        }, {\n          column: 'facebook',\n          label: 'Facebook',\n          type: 'text',\n          flexBasis: flexBasis\n        }, {\n          column: 'instagram',\n          label: 'instagram',\n          type: 'text',\n          flexBasis: flexBasis\n        }]\n      }];\n      return React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }, React.createElement(AppBar, {\n        position: \"static\",\n        style: {\n          padding: 10,\n          marginTop: 10,\n          marginBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }\n      }, React.createElement(HomeIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 23\n        }\n      }), \"  \", React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 37\n        }\n      }, \"Cadastro / Colaboradores\"))), React.createElement(LForms, {\n        forms: forms,\n        pageRequest: postApiContributors,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }));\n    }\n  }]);\n\n  return CreateContributors;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    session: store.authReducer.data,\n    products: store.productReducer.products\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setProducts: setProducts,\n    setSnackbar: setSnackbar,\n    setDialog: setDialog,\n    setCart: setCart\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateContributors);","map":{"version":3,"sources":["C:/Users/Maou/Documents/Projetos/CLIENTES/RNF/client/src/pages/Contributors/create/index.js"],"names":["React","Component","Fragment","connect","bindActionCreators","makeStyles","AppBar","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","HomeIcon","BlockIcon","EditIcon","Typography","LForms","setDialog","setProducts","setCart","setSnackbar","postApiContributors","InputCep","InputCpf","InputPhone","CreateContributors","state","contributors","authData","JSON","parse","localStorage","getItem","classes","root","maxWidth","height","window","innerHeight","media","flexBasis","forms","title","fields","column","label","type","mask","values","value","padding","marginTop","marginBottom","mapStateToProps","store","session","authReducer","data","products","productReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\n//\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LForms from '../../../components/Forms';\r\n//\r\nimport { setDialog, setProducts } from '../../../actions/productActions'\r\nimport { setCart } from '../../../actions/cartAction'\r\nimport { setSnackbar } from '../../../actions/appActions'\r\nimport { postApiContributors } from '../../../providers/api'\r\n\r\nimport {InputCep, InputCpf, InputPhone} from '../../../providers/masks'\r\n//const classes = useStyles();\r\nclass CreateContributors extends Component {\r\n    state = {\r\n        contributors: [],\r\n    }\r\n    /*async setPage(params = {page: 1} ){\r\n        const contributors = await getApiContributors(params);\r\n        this.setState({...this.state, contributors }) \r\n    } */\r\n    async componentDidMount() {\r\n        //  this.setPage();\r\n    }\r\n\r\n    render() {\r\n        const authData = JSON.parse(localStorage.getItem(\"user\"));\r\n        const classes = {\r\n            root: {\r\n                maxWidth: 345,\r\n                height: window.innerHeight -150\r\n            },\r\n            media: {\r\n                height: 140,\r\n            },\r\n        }\r\n        const flexBasis = '30%';\r\n        const forms = [\r\n            {\r\n                title: 'Dados Básicos', fields : [\r\n                { column: 'cpf', label: 'Cpf', type: 'text', \r\n                mask: InputCpf, \r\n                flexBasis },\r\n                { column: 'name', label: 'Nome', type: 'text', flexBasis },\r\n                {\r\n                    column: 'function', label: 'Função', type: 'select',\r\n                    values: [\r\n                        \"Todos\",\r\n                        \"Coordenador de usuários\",\r\n                        \"Coordenador de parceiros\",\r\n                        \"Gerente\",\r\n                        \"Operador de marketing\"\r\n                    ],\r\n                    value: \"Todos\",\r\n                    flexBasis\r\n                },\r\n                { column: 'active', label: 'Situação', type: 'select', values: [\"Todos\", \"Ativo\", \"Inativo\"], value: \"Todos\", flexBasis },\r\n                //{ column: 'created_at', label: 'Data', type: 'date' },\r\n            ]},\r\n            {\r\n                title: 'Endereço', \r\n                fields : [\r\n                    { column: 'cep', label: 'CEP', type: 'text',  mask: InputCep, flexBasis: '20%' },\r\n                    { column: 'street', label: 'Endereço', type: 'text', flexBasis },\r\n                    { column: 'complement', label: 'Complemento', type: 'text', flexBasis: '20%' },\r\n                    { \r\n                        column: 'state', label: 'Endereço',  type: 'select',\r\n                        values: [\r\n                            \"São Paulo\",\r\n                            \"Coordenador de usuários\",\r\n                            \"Coordenador de parceiros\",\r\n                            \"Gerente\",\r\n                            \"Operador de marketing\"\r\n                        ],\r\n                        value: \"São Paulo\", flexBasis \r\n                    },\r\n                    { column: 'city', label: 'Cidade', type: 'text', flexBasis },\r\n                ]\r\n            },\r\n            {\r\n                title: 'Contato', \r\n                fields : [\r\n                    { column: 'contact1', label: 'Contato 01', type: 'text',  mask: InputPhone, flexBasis },\r\n                    { column: 'contact2', label: 'Contato 02', type: 'text',  mask: InputPhone, flexBasis },\r\n                    { column: 'email', label: 'e-mail', type: 'text', flexBasis },\r\n                ]\r\n            },\r\n            {\r\n                title: 'Redes Sociais', \r\n                fields : [\r\n                    { column: 'linkedin', label: 'LinkedIn', type: 'text', flexBasis },\r\n                    { column: 'facebook', label: 'Facebook', type: 'text', flexBasis },\r\n                    { column: 'instagram', label: 'instagram', type: 'text', flexBasis },\r\n                ]\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <Fragment>\r\n                <AppBar position=\"static\" style={{ padding: 10, marginTop: 10, marginBottom: 10}}>\r\n                    <Typography variant=\"h6\">\r\n                      <HomeIcon />  <span>Cadastro / Colaboradores</span>\r\n                    </Typography>\r\n                </AppBar>\r\n                    <LForms forms={forms} pageRequest={postApiContributors} />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = store => ({\r\n    session: store.authReducer.data,\r\n    products: store.productReducer.products\r\n});\r\nconst mapDispatchToProps = dispatch =>\r\n    bindActionCreators({ setProducts, setSnackbar, setDialog, setCart }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateContributors)\r\n"]},"metadata":{},"sourceType":"module"}