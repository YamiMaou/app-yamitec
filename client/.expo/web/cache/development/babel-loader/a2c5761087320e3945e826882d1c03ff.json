{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\Maou\\\\Documents\\\\Projetos\\\\CLIENTES\\\\RNF\\\\Completo\\\\client\\\\src\\\\pages\\\\Login\\\\recovery.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { putResetPassword, postAuth, JWT_Decode } from \"../../providers/api\";\nimport { setDialog as authDialog, setAuth } from \"../../actions/authAction\";\nimport { setLoading, setSnackbar } from \"../../actions/appActions\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Slide from '@material-ui/core/Slide';\nimport { withRouter } from 'react-router-dom';\nimport logo from \"../../../assets/logo.png\";\nimport InputMask from 'react-input-mask';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      maxWidth: 350,\n      display: 'flex',\n      flexDirection: 'column',\n      margin: 'auto'\n    },\n    appBar: {\n      position: 'relative'\n    },\n    title: {\n      marginLeft: theme.spacing(2),\n      flex: 1\n    },\n    media: {\n      height: 140\n    }\n  };\n});\nvar Transition = React.forwardRef(function Transition(props, ref) {\n  return React.createElement(Slide, _extends({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }\n  }));\n});\n\nfunction ResetPassword(props) {\n  var _resetpwd$message;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loginError = _React$useState2[0],\n      setLoginerror = _React$useState2[1];\n\n  var _React$useState3 = React.useState({\n    success: false,\n    message: ''\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      resetError = _React$useState4[0],\n      setReseterror = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      loading = _React$useState6[0],\n      setloading = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      resetpwd = _React$useState8[0],\n      setResetpwd = _React$useState8[1];\n\n  var _React$useState9 = React.useState({}),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      dados = _React$useState10[0],\n      setDados = _React$useState10[1];\n\n  var classes = useStyles();\n\n  function onChange(e) {\n    var dt = dados;\n    dt[e.target.id] = e.target.value;\n    setDados(dt);\n  }\n\n  function onSubmitReset(e) {\n    var data;\n    return _regeneratorRuntime.async(function onSubmitReset$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            setloading(true);\n            dados.token = props.match.params.token;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(putResetPassword(dados));\n\n          case 5:\n            data = _context.sent;\n\n            if (data !== undefined) {\n              if (data.data.success) {\n                setLoginerror(false);\n                setloading(false);\n                props.setSnackbar({\n                  open: true,\n                  message: \"Senha atualizada, faça já o seu login\"\n                });\n                setTimeout(function () {\n                  window.location.href = \"/\";\n                }, 2000);\n              } else {\n                setLoginerror(true);\n                setloading(false);\n              }\n\n              setReseterror({\n                success: true,\n                message: data.data.message\n              });\n            }\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, React.createElement(\"img\", {\n    src: logo,\n    style: {\n      display: 'flex',\n      margin: 'auto'\n    },\n    height: \"150\",\n    width: \"150\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), React.createElement(\"form\", {\n    id: \"loginform\",\n    onSubmit: onSubmitReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, React.createElement(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, React.createElement(TextField, {\n    className: classes.TextField,\n    error: resetpwd.success,\n    helperText: (_resetpwd$message = resetpwd.message) != null ? _resetpwd$message : \"\",\n    type: \"text\",\n    fullWidth: true,\n    id: \"email\",\n    type: \"text\",\n    label: \"E-Mail\",\n    variant: \"outlined\",\n    onChange: onChange,\n    onBlur: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  })), React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 23\n    }\n  }), React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, React.createElement(TextField, {\n    className: classes.TextField,\n    error: resetpwd.success,\n    type: \"text\",\n    fullWidth: true,\n    id: \"password\",\n    type: \"password\",\n    label: \"Nova senha\",\n    variant: \"outlined\",\n    onChange: onChange,\n    onBlur: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  })), React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }), React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, React.createElement(TextField, {\n    className: classes.TextField,\n    error: resetpwd.success,\n    type: \"text\",\n    fullWidth: true,\n    id: \"password_confirmation\",\n    type: \"password\",\n    label: \"Confirmar nova senha\",\n    variant: \"outlined\",\n    onChange: onChange,\n    onBlur: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }))), React.createElement(CardActions, {\n    style: {\n      flexDirection: 'column'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, !loading ? React.createElement(Button, {\n    variant: \"contained\",\n    size: \"large\",\n    fullWidth: true,\n    color: \"primary\",\n    disableElevation: true,\n    type: \"submit\",\n    form: \"loginform\",\n    style: {\n      background: 'linear-gradient(45deg, #025ea2 30%, #0086e8 90%)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"Recuperar\") : React.createElement(CircularProgress, {\n    style: {\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  })))));\n}\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    aDialog: store.authReducer.authDialog,\n    data: store.authReducer.data,\n    loading: store.appReducer.loading\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setSnackbar: setSnackbar,\n    setLoading: setLoading,\n    authDialog: authDialog,\n    setAuth: setAuth,\n    JWT_Decode: JWT_Decode\n  }, dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ResetPassword));","map":{"version":3,"sources":["C:/Users/Maou/Documents/Projetos/CLIENTES/RNF/Completo/client/src/pages/Login/recovery.js"],"names":["React","connect","bindActionCreators","putResetPassword","postAuth","JWT_Decode","setDialog","authDialog","setAuth","setLoading","setSnackbar","makeStyles","Button","CircularProgress","TextField","Card","CardActions","CardContent","Slide","withRouter","logo","InputMask","useStyles","theme","root","maxWidth","display","flexDirection","margin","appBar","position","title","marginLeft","spacing","flex","media","height","Transition","forwardRef","props","ref","ResetPassword","useState","loginError","setLoginerror","success","message","resetError","setReseterror","loading","setloading","resetpwd","setResetpwd","dados","setDados","classes","onChange","e","dt","target","id","value","onSubmitReset","preventDefault","token","match","params","data","undefined","open","setTimeout","window","location","href","background","mapStateToProps","store","aDialog","authReducer","appReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\nimport { putResetPassword,postAuth, JWT_Decode } from '../../providers/api'\r\nimport {setDialog as authDialog, setAuth} from '../../actions/authAction'\r\nimport {setLoading, setSnackbar } from '../../actions/appActions'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport logo from '../../../assets/logo.png'\r\n\r\nimport InputMask from 'react-input-mask';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 350,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto'\r\n  },\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction ResetPassword(props) {\r\n  const [loginError, setLoginerror] = React.useState(false);\r\n  const [resetError, setReseterror] = React.useState({success: false, message: ''});\r\n  const [loading, setloading] = React.useState(false);\r\n  const [resetpwd, setResetpwd] = React.useState(false);\r\n  const [dados, setDados] = React.useState({});\r\n\r\n  const classes = useStyles();\r\n  function onChange(e) {\r\n    let dt = dados;\r\n    dt[e.target.id] = e.target.value\r\n    setDados(dt);\r\n  }\r\n  async function onSubmitReset(e) {\r\n    e.preventDefault();\r\n    setloading(true);\r\n    dados.token = props.match.params.token;\r\n    let data = await putResetPassword(dados);\r\n    if(data !== undefined) {\r\n      if(data.data.success){\r\n        setLoginerror(false);\r\n        setloading(false);\r\n        props.setSnackbar({open: true, message: \"Senha atualizada, faça já o seu login\"})\r\n        setTimeout(() => {window.location.href=\"/\"}, 2000)\r\n      }else{\r\n        setLoginerror(true)\r\n        setloading(false);\r\n      }\r\n      setReseterror({success: true, message: data.data.message})\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <img src={logo} style={{display: 'flex', margin: 'auto'}} height=\"150\" width=\"150\" />\r\n      <form id=\"loginform\" onSubmit={onSubmitReset}>\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n            <div>\r\n                <TextField\r\n                  className={classes.TextField}\r\n                  error={resetpwd.success}\r\n                  helperText={resetpwd.message ?? \"\"}\r\n                  type=\"text\"\r\n                  fullWidth id=\"email\" type=\"text\" label=\"E-Mail\" variant=\"outlined\" \r\n                  onChange={onChange}\r\n                  onBlur={onChange}\r\n                   />\r\n                </div><br />\r\n                <div>\r\n                <TextField\r\n                  className={classes.TextField}\r\n                  error={resetpwd.success}\r\n                  //helperText={ loginError ? \"E-mail ou senha inválidos.\" : \"\"}\r\n                  type=\"text\"\r\n                  fullWidth id=\"password\" type=\"password\" label=\"Nova senha\" variant=\"outlined\" \r\n                  onChange={onChange}\r\n                  onBlur={onChange} \r\n                  />\r\n                </div>\r\n              <br />\r\n                <div>\r\n                <TextField\r\n                  className={classes.TextField}\r\n                  error={resetpwd.success}\r\n                  //helperText={ loginError ? \"E-mail ou senha inválidos.\" : \"\"}\r\n                  type=\"text\"\r\n                  fullWidth id=\"password_confirmation\" type=\"password\" label=\"Confirmar nova senha\" variant=\"outlined\" \r\n                  onChange={onChange}\r\n                  onBlur={onChange} \r\n                  />\r\n                </div>\r\n            </CardContent>\r\n          <CardActions style={{flexDirection: 'column'}}>\r\n            {!loading ? (\r\n            <Button variant=\"contained\" size=\"large\" fullWidth color=\"primary\" disableElevation type=\"submit\" form=\"loginform\"\r\n            style={{\r\n              background: 'linear-gradient(45deg, #025ea2 30%, #0086e8 90%)',\r\n            }}>\r\n              Recuperar \r\n            </Button>\r\n            ) : (\r\n            <CircularProgress style={{margin: 'auto'}} />\r\n            )}\r\n          </CardActions>\r\n        </Card>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = store => ({\r\n  aDialog: store.authReducer.authDialog,\r\n  data: store.authReducer.data,\r\n  loading: store.appReducer.loading\r\n});\r\nconst mapDispatchToProps = dispatch =>\r\nbindActionCreators({ setSnackbar, setLoading, authDialog, setAuth,JWT_Decode }, dispatch);\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ResetPassword))\r\n"]},"metadata":{},"sourceType":"module"}