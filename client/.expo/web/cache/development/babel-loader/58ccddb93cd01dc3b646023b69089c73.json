{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Maou\\\\Documents\\\\Projetos\\\\CLIENTES\\\\RNF\\\\client\\\\src\\\\components\\\\List\\\\datagrid.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { DataGrid, RowsProp, ColDef } from '@material-ui/data-grid';\nimport { setDialog, setProducts } from \"../../actions/productActions\";\nimport { setCart } from \"../../actions/cartAction\";\nimport { setSnackbar } from \"../../actions/appActions\";\nimport { DEFAULT_LOCALE_TEXT } from \"../../providers/langs/datagrid\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nvar LDataGrid = function (_Component) {\n  _inherits(LDataGrid, _Component);\n\n  var _super = _createSuper(LDataGrid);\n\n  function LDataGrid() {\n    var _this;\n\n    _classCallCheck(this, LDataGrid);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(LDataGrid, [{\n    key: \"setPage\",\n    value: function setPage() {\n      var params,\n          data,\n          _args = arguments;\n      return _regeneratorRuntime.async(function setPage$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              params = _args.length > 0 && _args[0] !== undefined ? _args[0] : {\n                page: 1\n              };\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(this.props.pageRequest(params));\n\n            case 3:\n              data = _context.sent;\n              this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n                data: data\n              }));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.setPage();\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state$data$data,\n          _this$state$data$tota,\n          _this2 = this;\n\n      var classes = {\n        root: {\n          maxWidth: 345\n        },\n        media: {\n          height: 140\n        }\n      };\n      return React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, React.createElement(Card, {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, React.createElement(TextField, {\n        id: \"standard-basic\",\n        label: \"Standard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      })), React.createElement(CardActionArea, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }), React.createElement(CardActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      })), React.createElement(\"div\", {\n        style: {\n          height: window.innerHeight - 250,\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, React.createElement(DataGrid, {\n        rows: (_this$state$data$data = this.state.data.data) != null ? _this$state$data$data : [],\n        columns: this.props.columns,\n        disableClickEventBubbling: true,\n        localeText: DEFAULT_LOCALE_TEXT,\n        paginationMode: \"server\",\n        rowCount: (_this$state$data$tota = this.state.data.total) != null ? _this$state$data$tota : 0,\n        pageSize: 10,\n        rowsPerPageOptions: [10, 20, 50],\n        pagination: true,\n        onPageChange: function onPageChange(params) {\n          console.log(params);\n\n          _this2.setPage({\n            page: params.page,\n            pageSize: params.pageSize\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return LDataGrid;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setProducts: setProducts,\n    setSnackbar: setSnackbar,\n    setDialog: setDialog,\n    setCart: setCart\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LDataGrid);","map":{"version":3,"sources":["C:/Users/Maou/Documents/Projetos/CLIENTES/RNF/client/src/components/List/datagrid.js"],"names":["React","Component","Fragment","connect","bindActionCreators","DataGrid","RowsProp","ColDef","setDialog","setProducts","setCart","setSnackbar","DEFAULT_LOCALE_TEXT","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","TextField","LDataGrid","state","data","params","page","props","pageRequest","setState","setPage","classes","root","maxWidth","media","height","window","innerHeight","width","columns","total","console","log","pageSize","mapStateToProps","store","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\n//\r\nimport { DataGrid, RowsProp, ColDef } from '@material-ui/data-grid';\r\n//\r\nimport { setDialog, setProducts } from '../../actions/productActions'\r\nimport { setCart } from '../../actions/cartAction'\r\nimport { setSnackbar } from '../../actions/appActions'\r\nimport { DEFAULT_LOCALE_TEXT } from '../../providers/langs/datagrid'\r\n//const classes = useStyles();\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n//\r\nimport TextField from '@material-ui/core/TextField';\r\n//\r\n\r\nclass LDataGrid extends Component {\r\n    state = {\r\n        data: [],\r\n    }\r\n    async setPage(params = { page: 1 }) {\r\n        const data = await this.props.pageRequest(params);\r\n        this.setState({ ...this.state, data })\r\n    }\r\n    async componentDidMount() {\r\n        this.setPage();\r\n    }\r\n\r\n    render() {\r\n        const classes = {\r\n            root: {\r\n                maxWidth: 345,\r\n            },\r\n            media: {\r\n                height: 140,\r\n            },\r\n        }\r\n        return (\r\n            <div>\r\n                <Card className={classes.root}>\r\n                    <CardContent>\r\n                    <TextField id=\"standard-basic\" label=\"Standard\" />\r\n                    </CardContent>\r\n                    <CardActionArea>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n\r\n                    </CardActions>\r\n                </Card>\r\n\r\n                <div style={{ height: window.innerHeight - 250, width: '100%' }}>\r\n                    <DataGrid rows={this.state.data.data ?? []} columns={this.props.columns}\r\n                        disableClickEventBubbling\r\n                        localeText={DEFAULT_LOCALE_TEXT}\r\n                        paginationMode=\"server\"\r\n                        rowCount={this.state.data.total ?? 0}\r\n                        pageSize={10} rowsPerPageOptions={[10, 20, 50]} pagination\r\n                        onPageChange={(params) => {\r\n                            console.log(params);\r\n                            this.setPage({ page: params.page, pageSize: params.pageSize });\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = store => ({\r\n\r\n});\r\nconst mapDispatchToProps = dispatch =>\r\n    bindActionCreators({ setProducts, setSnackbar, setDialog, setCart }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LDataGrid)\r\n"]},"metadata":{},"sourceType":"module"}