{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport HomeIcon from '@material-ui/icons/Home';\nimport BlockIcon from '@material-ui/icons/Block';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Typography from '@material-ui/core/Typography';\nimport LForms from \"../../../components/Forms\";\nimport { setDialog, setProducts } from \"../../../actions/productActions\";\nimport { setCart } from \"../../../actions/cartAction\";\nimport { setSnackbar } from \"../../../actions/appActions\";\nimport { postApiContributors, getAddressByCepla } from \"../../../providers/api\";\nimport { validaCpf } from \"../../../providers/commonMethods\";\nimport { InputCep, InputCpf, InputPhone } from \"../../../providers/masks\";\n\nvar CreateContributors = function (_Component) {\n  _inherits(CreateContributors, _Component);\n\n  var _super = _createSuper(CreateContributors);\n\n  function CreateContributors() {\n    var _this;\n\n    _classCallCheck(this, CreateContributors);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      contributors: [],\n      states: []\n    };\n    return _this;\n  }\n\n  _createClass(CreateContributors, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var states;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              states = [];\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var authData = JSON.parse(localStorage.getItem(\"user\"));\n\n      var getAddress = function getAddress(cep) {\n        var addr;\n        return _regeneratorRuntime.async(function getAddress$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _regeneratorRuntime.awrap(getAddressByCepla(cep));\n\n              case 2:\n                addr = _context2.sent;\n                console.log(addr);\n                if (addr !== undefined) document.getElementById('data-form-addr').querySelectorAll('input').forEach(function (item, index) {\n                  var _item$name;\n\n                  var id = (_item$name = item.name) != null ? _item$name : item.id;\n                  console.log(id);\n\n                  if (id == \"address\") {\n                    item.value = addr.data.logradouro;\n                  } else if (id == \"state\") {\n                    item.value = addr.data.uf;\n                  } else if (id == \"city\") {\n                    item.value = addr.data.cidade;\n                  }\n\n                  console.log({\n                    index: index,\n                    item: item\n                  });\n                });\n                if (addr !== undefined) document.getElementById('data-form-addr').querySelectorAll('select').forEach(function (item, index) {\n                  var _item$name2;\n\n                  var id = (_item$name2 = item.name) != null ? _item$name2 : item.id;\n\n                  if (id == \"state\") {\n                    item.value = addr.data.state;\n                  }\n                });\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      };\n\n      var classes = {\n        root: {\n          maxWidth: 345,\n          height: window.innerHeight - 150\n        },\n        media: {\n          height: 140\n        }\n      };\n      var flexBasis = '30%';\n      var forms = [{\n        title: 'Dados Básicos',\n        fields: [{\n          column: 'cpf',\n          label: 'Cpf',\n          type: 'text',\n          mask: InputCpf,\n          validate: validaCpf,\n          flexBasis: '20%'\n        }, {\n          column: 'name',\n          label: 'Nome',\n          type: 'text',\n          flexBasis: flexBasis\n        }, {\n          column: 'function',\n          label: 'Função',\n          type: 'select',\n          values: [\"Coordenador de usuários\", \"Coordenador de parceiros\", \"Gerente\", \"Operador de marketing\"],\n          value: \"Coordenador de usuários\",\n          flexBasis: flexBasis\n        }, {\n          column: 'active',\n          label: 'Situação',\n          type: 'select',\n          values: [\"Ativo\", \"Inativo\"],\n          value: \"Ativo\",\n          flexBasis: flexBasis\n        }]\n      }, {\n        id: 'addr',\n        title: 'Endereço',\n        flexFlow: 'row no-wrap',\n        json: \"address\",\n        fields: [{\n          column: 'cep',\n          label: 'CEP',\n          type: 'text',\n          mask: InputCep,\n          flexBasis: '20%'\n        }, {\n          column: 'street',\n          label: 'Endereço',\n          type: 'text',\n          flexBasis: flexBasis\n        }, {\n          column: 'complement',\n          label: 'Complemento',\n          type: 'text',\n          flexBasis: '20%'\n        }, {\n          column: 'state',\n          label: 'Endereço',\n          type: 'select',\n          values: [\"Acre\", \"Alagoas\", \"Amazonas\", \"Amapá\", \"Bahia\", \"Ceará\", \"Brasília\", \"Espírito Santo\", \"Goiás\", \"Maranhão\", \"Minas Gerais\", \"Mato Grosso do Sul\", \"Mato Grosso\", \"Pará\", \"Paraíba\", \"Pernambuco\", \"Piauí\", \"Paraná\", \"Rio de Janeiro\", \"Rio Grande do Norte\", \"Rondônia\", \"Roraima\", \"Rio Grande do Sul\", \"Santa Catarina\", \"Sergipe\", \"São Paulo\", \"Tocantins\"],\n          value: \"São Paulo\",\n          flexBasis: flexBasis\n        }, {\n          column: 'city',\n          label: 'Cidade',\n          type: 'text',\n          flexBasis: flexBasis\n        }]\n      }, {\n        title: 'Contato',\n        json: 'social',\n        fields: [{\n          column: 'contact1',\n          label: 'Contato',\n          type: 'text',\n          mask: InputPhone,\n          flexBasis: '33%'\n        }, {\n          column: 'contact2',\n          label: 'Contato',\n          type: 'text',\n          mask: InputPhone,\n          flexBasis: '33%'\n        }, {\n          column: 'email',\n          label: 'E-mail',\n          type: 'text',\n          flexBasis: '33%'\n        }]\n      }, {\n        json: 'social',\n        title: 'Redes Sociais',\n        fields: [{\n          column: 'linkedin',\n          label: 'LinkedIn',\n          type: 'text',\n          flexBasis: flexBasis\n        }, {\n          column: 'facebook',\n          label: 'Facebook',\n          type: 'text',\n          flexBasis: flexBasis\n        }, {\n          column: 'instagram',\n          label: 'Instagram',\n          type: 'text',\n          flexBasis: flexBasis\n        }]\n      }];\n      return React.createElement(Fragment, null, React.createElement(AppBar, {\n        position: \"static\",\n        style: {\n          padding: 10,\n          marginTop: 10,\n          marginBottom: 10\n        }\n      }, React.createElement(Typography, {\n        variant: \"h6\"\n      }, React.createElement(HomeIcon, null), \"  \", React.createElement(\"span\", null, \"Cadastro / Colaboradores\"))), React.createElement(LForms, {\n        forms: forms,\n        request: function request(data) {\n          data.address = JSON.stringify(data.address);\n          data.social = JSON.stringify(data.social);\n          postApiContributors(data);\n        }\n      }));\n    }\n  }]);\n\n  return CreateContributors;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    session: store.authReducer.data,\n    products: store.productReducer.products\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setProducts: setProducts,\n    setSnackbar: setSnackbar,\n    setDialog: setDialog,\n    setCart: setCart\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateContributors);","map":{"version":3,"sources":["C:/Users/Maou/Documents/Projetos/CLIENTES/RNF/client/src/pages/Contributors/create/index.js"],"names":["React","Component","Fragment","connect","bindActionCreators","makeStyles","AppBar","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","HomeIcon","BlockIcon","EditIcon","Typography","LForms","setDialog","setProducts","setCart","setSnackbar","postApiContributors","getAddressByCepla","validaCpf","InputCep","InputCpf","InputPhone","CreateContributors","state","contributors","states","authData","JSON","parse","localStorage","getItem","getAddress","cep","addr","console","log","undefined","document","getElementById","querySelectorAll","forEach","item","index","id","name","value","data","logradouro","uf","cidade","classes","root","maxWidth","height","window","innerHeight","media","flexBasis","forms","title","fields","column","label","type","mask","validate","values","flexFlow","json","padding","marginTop","marginBottom","address","stringify","social","mapStateToProps","store","session","authReducer","products","productReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\n//\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LForms from '../../../components/Forms';\r\n//\r\nimport { setDialog, setProducts } from '../../../actions/productActions'\r\nimport { setCart } from '../../../actions/cartAction'\r\nimport { setSnackbar } from '../../../actions/appActions'\r\nimport { postApiContributors, getAddressByCepla } from '../../../providers/api'\r\nimport {validaCpf} from '../../../providers/commonMethods'\r\n\r\nimport {InputCep, InputCpf, InputPhone} from '../../../providers/masks'\r\n//const classes = useStyles();\r\nclass CreateContributors extends Component {\r\n    state = {\r\n        contributors: [],\r\n        states: []\r\n    }\r\n    /*async setPage(params = {page: 1} ){\r\n        const contributors = await getApiContributors(params);\r\n        this.setState({...this.state, contributors }) \r\n    } */\r\n    async componentDidMount() {\r\n        let states = [];\r\n        \r\n    }\r\n\r\n    render() {\r\n        const authData = JSON.parse(localStorage.getItem(\"user\"));\r\n        const getAddress = async (cep) => {\r\n            let addr = await getAddressByCepla(cep);\r\n            console.log(addr);\r\n            if(addr !== undefined) \r\n                document.getElementById('data-form-addr').querySelectorAll('input').forEach((item, index) => {\r\n                    let id = item.name ?? item.id;\r\n                    console.log(id);\r\n                    if(id == \"address\")\r\n                    {\r\n                        item.value = addr.data.logradouro\r\n                    }else if(id == \"state\")\r\n                    {\r\n                        item.value = addr.data.uf\r\n                    }else if(id == \"city\")\r\n                    {\r\n                        item.value = addr.data.cidade\r\n                    }\r\n                    console.log({ index, item })\r\n                    //item.value = '';\r\n                });\r\n                if(addr !== undefined) \r\n                document.getElementById('data-form-addr').querySelectorAll('select').forEach((item, index) => {\r\n                    let id = item.name ?? item.id;\r\n                    if(id == \"state\")\r\n                    {\r\n                        item.value = addr.data.state\r\n                    }\r\n                });\r\n\r\n        }\r\n        const classes = {\r\n            root: {\r\n                maxWidth: 345,\r\n                height: window.innerHeight -150\r\n            },\r\n            media: {\r\n                height: 140,\r\n            },\r\n        }\r\n        const flexBasis = '30%';\r\n        const forms = [\r\n            {\r\n                title: 'Dados Básicos', fields : [\r\n                { column: 'cpf', label: 'Cpf', type: 'text', mask: InputCpf, validate: validaCpf, flexBasis: '20%' },\r\n                { column: 'name', label: 'Nome', type: 'text', flexBasis },\r\n                {\r\n                    column: 'function', label: 'Função', type: 'select',\r\n                    values: [\r\n                        \"Coordenador de usuários\",\r\n                        \"Coordenador de parceiros\",\r\n                        \"Gerente\",\r\n                        \"Operador de marketing\"\r\n                    ],\r\n                    value: \"Coordenador de usuários\",\r\n                    flexBasis\r\n                },\r\n                { column: 'active', label: 'Situação', type: 'select', values: [ \"Ativo\", \"Inativo\"], value: \"Ativo\", flexBasis },\r\n                //{ column: 'created_at', label: 'Data', type: 'date' },\r\n            ]},\r\n            {\r\n                id: 'addr',\r\n                title: 'Endereço', \r\n                flexFlow : 'row no-wrap',\r\n                json: \"address\",\r\n                fields : [\r\n                    { column: 'cep', label: 'CEP', type: 'text',  mask: InputCep, flexBasis: '20%', \r\n                    //handle: getAddress \r\n                    },\r\n                    { column: 'street', label: 'Endereço', type: 'text', flexBasis },\r\n                    { column: 'complement', label: 'Complemento', type: 'text', flexBasis: '20%' },\r\n                    { \r\n                        column: 'state', label: 'Endereço',  type: 'select',\r\n                        values: [\"Acre\",\"Alagoas\",\"Amazonas\",\"Amapá\",\"Bahia\",\"Ceará\",\"Brasília\",\"Espírito Santo\",\"Goiás\",\"Maranhão\",\"Minas Gerais\",\"Mato Grosso do Sul\",\"Mato Grosso\",\"Pará\",\"Paraíba\",\"Pernambuco\",\"Piauí\",\"Paraná\",\"Rio de Janeiro\",\"Rio Grande do Norte\",\"Rondônia\",\"Roraima\",\"Rio Grande do Sul\",\"Santa Catarina\",\"Sergipe\",\"São Paulo\",\"Tocantins\"],\r\n                        value: \"São Paulo\", flexBasis \r\n                    },\r\n                    { column: 'city', label: 'Cidade', type: 'text', flexBasis },\r\n                ]\r\n            },\r\n            {\r\n                title: 'Contato', \r\n                json: 'social',\r\n                fields : [\r\n                    { column: 'contact1', label: 'Contato', type: 'text',  mask: InputPhone, flexBasis: '33%' },\r\n                    { column: 'contact2', label: 'Contato', type: 'text',  mask: InputPhone, flexBasis: '33%' },\r\n                    { column: 'email', label: 'E-mail', type: 'text', flexBasis: '33%' },\r\n                ]\r\n            },\r\n            {\r\n                json: 'social',\r\n                title: 'Redes Sociais', \r\n                fields : [\r\n                    { column: 'linkedin', label: 'LinkedIn', type: 'text', flexBasis },\r\n                    { column: 'facebook', label: 'Facebook', type: 'text', flexBasis },\r\n                    { column: 'instagram', label: 'Instagram', type: 'text', flexBasis },\r\n                ]\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <Fragment>\r\n                <AppBar position=\"static\" style={{ padding: 10, marginTop: 10, marginBottom: 10}}>\r\n                    <Typography variant=\"h6\">\r\n                      <HomeIcon />  <span>Cadastro / Colaboradores</span>\r\n                    </Typography>\r\n                </AppBar>\r\n                    <LForms forms={forms} \r\n                    request={(data) => {\r\n                        data.address = JSON.stringify(data.address)\r\n                        data.social = JSON.stringify(data.social)\r\n                        postApiContributors(data)\r\n                    }} />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = store => ({\r\n    session: store.authReducer.data,\r\n    products: store.productReducer.products\r\n});\r\nconst mapDispatchToProps = dispatch =>\r\n    bindActionCreators({ setProducts, setSnackbar, setDialog, setCart }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateContributors)\r\n"]},"metadata":{},"sourceType":"module"}