{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport LDataGrid from \"../../components/List/datagrid\";\nimport { setDialog, setProducts } from \"../../actions/productActions\";\nimport { setCart } from \"../../actions/cartAction\";\nimport { setSnackbar } from \"../../actions/appActions\";\nimport { getApiContributors } from \"../../providers/api\";\n\nvar Contributors = function (_Component) {\n  _inherits(Contributors, _Component);\n\n  var _super = _createSuper(Contributors);\n\n  function Contributors() {\n    var _this;\n\n    _classCallCheck(this, Contributors);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      contributors: []\n    };\n    return _this;\n  }\n\n  _createClass(Contributors, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state$contribut;\n\n      var authData = JSON.parse(localStorage.getItem(\"user\"));\n      var classes = {\n        root: {\n          maxWidth: 345,\n          height: window.innerHeight - 150\n        },\n        media: {\n          height: 140\n        }\n      };\n      var rows = (_this$state$contribut = this.state.contributors.data) != null ? _this$state$contribut : [];\n      var columns = [{\n        field: 'id',\n        headerName: 'Id',\n        width: 100\n      }, {\n        field: 'cpf',\n        headerName: 'Nome',\n        width: 150\n      }, {\n        field: 'name',\n        headerName: 'Nome',\n        width: 150\n      }, {\n        field: 'function',\n        headerName: 'Função',\n        width: 150\n      }, {\n        field: 'active',\n        headerName: 'Situação',\n        width: 100,\n        valueFormatter: function valueFormatter(params) {\n          return params.value === 1 ? \"Ativo\" : \"Inativo\";\n        }\n      }, {\n        field: 'acoes',\n        headerName: 'Ações',\n        width: 100,\n        renderCell: function renderCell(params) {\n          return React.createElement(\"strong\", null, React.createElement(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            size: \"small\",\n            style: {\n              marginLeft: 16\n            }\n          }, \"A\\xE7\\xC3O\"));\n        }\n      }];\n      var filter = [{\n        column: 'id',\n        label: 'Id',\n        type: 'text',\n        grow: 0\n      }, {\n        column: 'cpf',\n        label: 'Cpf',\n        type: 'text',\n        mask: [/[0-9]/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/],\n        grow: 0\n      }, {\n        column: 'name',\n        label: 'Nome',\n        type: 'text',\n        width: 350\n      }, {\n        column: 'function',\n        label: 'Função',\n        type: 'select',\n        values: [\"Todos\", \"Coordenador de usuários\", \"Coordenador de parceiros\", \"Gerente\", \"Operador de marketing\"],\n        value: \"Todos\"\n      }, {\n        column: 'active',\n        label: 'Situação',\n        type: 'select',\n        values: [\"Todos\", \"Ativo\", \"Inativo\"],\n        value: \"Todos\"\n      }, {\n        column: 'created_at',\n        label: 'Data',\n        type: 'date'\n      }];\n      return React.createElement(Fragment, null, React.createElement(Typography, {\n        variant: \"h4\"\n      }, \"Colaboradores\"), React.createElement(Card, {\n        className: classes.root\n      }, React.createElement(CardContent, null, React.createElement(LDataGrid, {\n        rows: rows,\n        columns: columns,\n        filterInputs: filter,\n        pageRequest: getApiContributors\n      })), React.createElement(CardActionArea, null), React.createElement(CardActions, null)));\n    }\n  }]);\n\n  return Contributors;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    session: store.authReducer.data,\n    products: store.productReducer.products\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setProducts: setProducts,\n    setSnackbar: setSnackbar,\n    setDialog: setDialog,\n    setCart: setCart\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contributors);","map":{"version":3,"sources":["C:/Users/Maou/Documents/Projetos/CLIENTES/RNF/client/src/pages/Contributors/index.js"],"names":["React","Component","Fragment","connect","bindActionCreators","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","LDataGrid","setDialog","setProducts","setCart","setSnackbar","getApiContributors","Contributors","state","contributors","authData","JSON","parse","localStorage","getItem","classes","root","maxWidth","height","window","innerHeight","media","rows","data","columns","field","headerName","width","valueFormatter","params","value","renderCell","marginLeft","filter","column","label","type","grow","mask","values","mapStateToProps","store","session","authReducer","products","productReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\n//\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LDataGrid from '../../components/List/datagrid';\r\n//\r\nimport { setDialog, setProducts } from '../../actions/productActions'\r\nimport { setCart } from '../../actions/cartAction'\r\nimport { setSnackbar } from '../../actions/appActions'\r\nimport { getApiContributors } from '../../providers/api'\r\n//const classes = useStyles();\r\nclass Contributors extends Component {\r\n    state = {\r\n        contributors: [],\r\n    }\r\n    /*async setPage(params = {page: 1} ){\r\n        const contributors = await getApiContributors(params);\r\n        this.setState({...this.state, contributors }) \r\n    } */\r\n    async componentDidMount() {\r\n        //  this.setPage();\r\n    }\r\n\r\n    render() {\r\n        const authData = JSON.parse(localStorage.getItem(\"user\"));\r\n        const classes = {\r\n            root: {\r\n                maxWidth: 345,\r\n                height: window.innerHeight -150\r\n            },\r\n            media: {\r\n                height: 140,\r\n            },\r\n        }\r\n        const rows = this.state.contributors.data ?? [];\r\n        const columns = [\r\n            { field: 'id', headerName: 'Id', width: 100 },\r\n            { field: 'cpf', headerName: 'Nome', width: 150 },\r\n            { field: 'name', headerName: 'Nome', width: 150 },\r\n            { field: 'function', headerName: 'Função', width: 150 },\r\n            {\r\n                field: 'active',\r\n                headerName: 'Situação',\r\n                width: 100,\r\n                valueFormatter: (params: ValueFormatterParams) => {\r\n                    return params.value === 1 ? \"Ativo\" : \"Inativo\"\r\n                }\r\n            },{\r\n                field: 'acoes',\r\n                headerName: 'Ações',\r\n                width: 100,\r\n                renderCell: (params: ValueFormatterParams) => (\r\n                    <strong>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        style={{ marginLeft: 16 }}\r\n                      >\r\n                        AçÃO\r\n                      </Button>\r\n                    </strong>\r\n                  ),\r\n            },\r\n        ];\r\n        const filter = [\r\n            { column: 'id', label: 'Id', type: 'text', grow: 0 },\r\n            { column: 'cpf', label: 'Cpf', type: 'text', \r\n            mask: [/[0-9]/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/,'-',/\\d/, /\\d/], \r\n            grow: 0 },\r\n            { column: 'name', label: 'Nome', type: 'text', width: 350 },\r\n            {\r\n                column: 'function', label: 'Função', type: 'select',\r\n                values: [\r\n                    \"Todos\",\r\n                    \"Coordenador de usuários\",\r\n                    \"Coordenador de parceiros\",\r\n                    \"Gerente\",\r\n                    \"Operador de marketing\"\r\n                ],\r\n                value: \"Todos\"\r\n            },\r\n            { column: 'active', label: 'Situação', type: 'select', values: [\"Todos\", \"Ativo\", \"Inativo\"], value: \"Todos\" },\r\n            { column: 'created_at', label: 'Data', type: 'date' },\r\n        ]\r\n\r\n        return (\r\n            <Fragment>\r\n                <Typography variant=\"h4\">\r\n                    Colaboradores\r\n                    </Typography>\r\n                <Card className={classes.root}>\r\n                    <CardContent>\r\n                        <LDataGrid rows={rows} columns={columns} filterInputs={filter} pageRequest={getApiContributors} />\r\n                    </CardContent>\r\n                    <CardActionArea>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n\r\n                    </CardActions>\r\n                </Card>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = store => ({\r\n    session: store.authReducer.data,\r\n    products: store.productReducer.products\r\n});\r\nconst mapDispatchToProps = dispatch =>\r\n    bindActionCreators({ setProducts, setSnackbar, setDialog, setCart }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contributors)\r\n"]},"metadata":{},"sourceType":"module"}