{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Maou\\\\Documents\\\\Projetos\\\\CLIENTES\\\\RNF\\\\Completo\\\\client\\\\src\\\\pages\\\\Reports\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport HomeIcon from '@material-ui/icons/Home';\nimport BlockIcon from '@material-ui/icons/Block';\nimport EditIcon from '@material-ui/icons/Edit';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport LDataGrid from \"../../components/List/datagrid\";\nimport LCardGrid from \"../../components/List/cardgrid\";\nimport { setSnackbar } from \"../../actions/appActions\";\nimport { deleteApiBonus, getApiBonus, getApiReportFile, getApiReportFileS, putApiBonus } from \"../../providers/api\";\nimport { InputCpf, stringCpf } from \"../../providers/masks\";\nimport { CircularProgress, IconButton, Toolbar } from '@material-ui/core';\nimport { Add, DeleteForeverOutlined } from '@material-ui/icons';\nimport { Link, withRouter } from 'react-router-dom';\nimport { DataGrid, RowsProp, ColDef, CheckCircleIcon } from '@material-ui/data-grid';\nvar module_id = 10;\n\nvar Reports = function (_Component) {\n  _inherits(Reports, _Component);\n\n  var _super = _createSuper(Reports);\n\n  function Reports() {\n    var _this;\n\n    _classCallCheck(this, Reports);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      session: JSON.parse(localStorage.getItem(\"user\")),\n      data: [],\n      pageRequest: {},\n      blockDialog: {\n        open: false,\n        id: undefined,\n        active: 0,\n        handle: undefined\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Reports, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var session = JSON.parse(localStorage.getItem(\"user\"));\n\n      if (session == null) {\n        window.location.href = '/login';\n        return;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var flexBasis = '25%';\n      var filter = [{\n        column: 'from',\n        label: 'De',\n        type: 'date',\n        flexBasis: flexBasis,\n        grow: 0\n      }, {\n        column: 'to',\n        label: 'Até',\n        type: 'date',\n        flexBasis: flexBasis,\n        grow: 0\n      }, {\n        column: 'from_launch',\n        label: 'Lançado De',\n        type: 'date',\n        flexBasis: flexBasis,\n        grow: 0\n      }, {\n        column: 'to_launch',\n        label: 'Lançado Até',\n        type: 'text',\n        flexBasis: flexBasis,\n        grow: 0\n      }, {\n        column: 'cnpj',\n        label: 'CNPJ',\n        type: 'date',\n        flexBasis: flexBasis,\n        grow: 0\n      }, {\n        column: 'company_name',\n        label: 'Razão Social',\n        type: 'text',\n        flexBasis: flexBasis\n      }, {\n        column: 'type_rel',\n        label: 'Tipo',\n        type: 'select',\n        flexBasis: window.innerWidth > 720 ? '14%' : '100%',\n        grow: 0,\n        values: ['Fornecedor', 'Vendas']\n      }];\n      var filter_ranking = [{\n        column: 'from',\n        label: 'De',\n        type: 'date',\n        flexBasis: flexBasis,\n        grow: 0\n      }, {\n        column: 'to',\n        label: 'Até',\n        type: 'date',\n        flexBasis: flexBasis,\n        grow: 0\n      }, {\n        column: 'type_rank',\n        label: 'Tipo',\n        type: 'select',\n        flexBasis: window.innerWidth > 720 ? '14%' : '100%',\n        grow: 0,\n        values: ['Cliente', 'Fornecedor']\n      }];\n      return React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, React.createElement(AppBar, {\n        position: \"static\",\n        style: {\n          padding: 10,\n          marginTop: 10,\n          marginBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, React.createElement(Toolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        style: {\n          flexGrow: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }\n      }, React.createElement(HomeIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }\n      }), \"  \", React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 43\n        }\n      }, \"Relat\\xF3rios\")))), React.createElement(Typography, {\n        variant: \"h6\",\n        style: {\n          flexGrow: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }, \"Fornecedores\")), React.createElement(LDataGrid, {\n        hideList: true,\n        rows: [],\n        columns: [],\n        filterInputs: filter,\n        pageRequest: function pageRequest(params) {\n          var type = {\n            'Fornecedor': 'reports/provider',\n            'Vendas': 'reports/sales'\n          };\n          return getApiReportFileS(type[params.type_rel], 'xlsx', params);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }), React.createElement(Typography, {\n        variant: \"h6\",\n        style: {\n          flexGrow: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }, React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      }, \"Ranking\")), React.createElement(LDataGrid, {\n        hideList: true,\n        rows: [],\n        columns: [],\n        filterInputs: filter_ranking,\n        pageRequest: function pageRequest(params) {\n          var type = {\n            'Cliente': 'reports/client-ranking',\n            'Fornecedor': 'reports/provider-ranking'\n          };\n          return getApiReportFileS(type[params.type_rel], 'xlsx', params);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Reports;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    session: store.authReducer.data\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setSnackbar: setSnackbar\n  }, dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Reports));","map":{"version":3,"sources":["C:/Users/Maou/Documents/Projetos/CLIENTES/RNF/Completo/client/src/pages/Reports/index.js"],"names":["React","Component","Fragment","connect","bindActionCreators","AppBar","Button","HomeIcon","BlockIcon","EditIcon","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Typography","LDataGrid","LCardGrid","setSnackbar","deleteApiBonus","getApiBonus","getApiReportFile","getApiReportFileS","putApiBonus","InputCpf","stringCpf","CircularProgress","IconButton","Toolbar","Add","DeleteForeverOutlined","Link","withRouter","DataGrid","RowsProp","ColDef","CheckCircleIcon","module_id","Reports","state","session","JSON","parse","localStorage","getItem","data","pageRequest","blockDialog","open","id","undefined","active","handle","window","location","href","flexBasis","filter","column","label","type","grow","innerWidth","values","filter_ranking","padding","marginTop","marginBottom","flexGrow","params","type_rel","mapStateToProps","store","authReducer","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAGA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP;AACA,OAAOC,SAAP;AAEA,SAASC,WAAT;AACA,SAASC,cAAT,EAAyBC,WAAzB,EAAsCC,gBAAtC,EAAwDC,iBAAxD,EAA2EC,WAA3E;AAEA,SAAQC,QAAR,EAAkBC,SAAlB;AACA,SAASC,gBAAT,EAA2BC,UAA3B,EAAuCC,OAAvC,QAAsD,mBAAtD;AACA,SAASC,GAAT,EAAcC,qBAAd,QAA2C,oBAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,MAA7B,EAAqCC,eAArC,QAA4D,wBAA5D;AAGA,IAAMC,SAAS,GAAG,EAAlB;;IAEMC,O;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,OAAO,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CADL;AAEJC,MAAAA,IAAI,EAAE,EAFF;AAGJC,MAAAA,WAAW,EAAE,EAHT;AAIJC,MAAAA,WAAW,EAAE;AAACC,QAAAA,IAAI,EAAE,KAAP;AAAcC,QAAAA,EAAE,EAAEC,SAAlB;AAA4BC,QAAAA,MAAM,EAAE,CAApC;AAAuCC,QAAAA,MAAM,EAAEF;AAA/C;AAJT,K;;;;;;WAQR,6BAAoB;AAChB,UAAMV,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAhB;;AACA,UAAGJ,OAAO,IAAI,IAAd,EAAmB;AACfa,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACA;AACH;AACJ;;;WAED,kBAAS;AACL,UAAMC,SAAS,GAAG,KAAlB;AACA,UAAMC,MAAM,GAAG,CACX;AAAEC,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,KAAK,EAAE,IAAzB;AAA+BC,QAAAA,IAAI,EAAE,MAArC;AAA6CJ,QAAAA,SAAS,EAATA,SAA7C;AAAwDK,QAAAA,IAAI,EAAE;AAA9D,OADW,EAEX;AAAEH,QAAAA,MAAM,EAAE,IAAV;AAAgBC,QAAAA,KAAK,EAAE,KAAvB;AAA8BC,QAAAA,IAAI,EAAE,MAApC;AAA4CJ,QAAAA,SAAS,EAATA,SAA5C;AAAuDK,QAAAA,IAAI,EAAE;AAA7D,OAFW,EAGX;AAAEH,QAAAA,MAAM,EAAE,aAAV;AAAyBC,QAAAA,KAAK,EAAE,YAAhC;AAA8CC,QAAAA,IAAI,EAAE,MAApD;AAA4DJ,QAAAA,SAAS,EAATA,SAA5D;AAAuEK,QAAAA,IAAI,EAAE;AAA7E,OAHW,EAIX;AAAEH,QAAAA,MAAM,EAAE,WAAV;AAAuBC,QAAAA,KAAK,EAAE,aAA9B;AAA6CC,QAAAA,IAAI,EAAE,MAAnD;AAA2DJ,QAAAA,SAAS,EAATA,SAA3D;AAAsEK,QAAAA,IAAI,EAAE;AAA5E,OAJW,EAKX;AAAEH,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,KAAK,EAAE,MAAzB;AAAiCC,QAAAA,IAAI,EAAE,MAAvC;AAA+CJ,QAAAA,SAAS,EAATA,SAA/C;AAA0DK,QAAAA,IAAI,EAAE;AAAhE,OALW,EAMX;AAAEH,QAAAA,MAAM,EAAE,cAAV;AAA0BC,QAAAA,KAAK,EAAE,cAAjC;AAAiDC,QAAAA,IAAI,EAAE,MAAvD;AAA+DJ,QAAAA,SAAS,EAATA;AAA/D,OANW,EAOX;AACIE,QAAAA,MAAM,EAAE,UADZ;AACwBC,QAAAA,KAAK,EAAE,MAD/B;AACuCC,QAAAA,IAAI,EAAE,QAD7C;AACuDJ,QAAAA,SAAS,EAAGH,MAAM,CAACS,UAAP,GAAoB,GAApB,GAA0B,KAA1B,GAAkC,MADrG;AAC6GD,QAAAA,IAAI,EAAE,CADnH;AAEIE,QAAAA,MAAM,EAAE,CAAC,YAAD,EAAe,QAAf;AAFZ,OAPW,CAAf;AAcA,UAAMC,cAAc,GAAG,CACnB;AAAEN,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,KAAK,EAAE,IAAzB;AAA+BC,QAAAA,IAAI,EAAE,MAArC;AAA6CJ,QAAAA,SAAS,EAATA,SAA7C;AAAwDK,QAAAA,IAAI,EAAE;AAA9D,OADmB,EAEnB;AAAEH,QAAAA,MAAM,EAAE,IAAV;AAAgBC,QAAAA,KAAK,EAAE,KAAvB;AAA8BC,QAAAA,IAAI,EAAE,MAApC;AAA4CJ,QAAAA,SAAS,EAATA,SAA5C;AAAuDK,QAAAA,IAAI,EAAE;AAA7D,OAFmB,EAGnB;AACIH,QAAAA,MAAM,EAAE,WADZ;AACyBC,QAAAA,KAAK,EAAE,MADhC;AACwCC,QAAAA,IAAI,EAAE,QAD9C;AACwDJ,QAAAA,SAAS,EAAGH,MAAM,CAACS,UAAP,GAAoB,GAApB,GAA0B,KAA1B,GAAkC,MADtG;AAC8GD,QAAAA,IAAI,EAAE,CADpH;AAEIE,QAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,YAAZ;AAFZ,OAHmB,CAAvB;AAUA,aACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAC,QAAjB;AAA0B,QAAA,KAAK,EAAE;AAAEE,UAAAA,OAAO,EAAE,EAAX;AAAeC,UAAAA,SAAS,EAAE,EAA1B;AAA8BC,UAAAA,YAAY,EAAE;AAA5C,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,QACkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADlB,CADJ,CADJ,CADJ,EAQI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,KAAK,EAAE;AAACA,UAAAA,QAAQ,EAAE;AAAX,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CARJ,EAWI,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAE,IAArB;AAA2B,QAAA,IAAI,EAAE,EAAjC;AAAqC,QAAA,OAAO,EAAE,EAA9C;AAAkD,QAAA,YAAY,EAAEX,MAAhE;AACI,QAAA,WAAW,EACP,qBAACY,MAAD,EAAY;AACR,cAAIT,IAAI,GAAG;AACP,0BAAc,kBADP;AAEP,sBAAU;AAFH,WAAX;AAIA,iBAAOtC,iBAAiB,CAACsC,IAAI,CAACS,MAAM,CAACC,QAAR,CAAL,EAAuB,MAAvB,EAA8BD,MAA9B,CAAxB;AACP,SARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXJ,EAqBI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,KAAK,EAAE;AAACD,UAAAA,QAAQ,EAAE;AAAX,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CArBJ,EAwBI,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAE,IAArB;AAA2B,QAAA,IAAI,EAAE,EAAjC;AAAqC,QAAA,OAAO,EAAE,EAA9C;AAAkD,QAAA,YAAY,EAAEJ,cAAhE;AACI,QAAA,WAAW,EACP,qBAACK,MAAD,EAAY;AACR,cAAIT,IAAI,GAAG;AACP,uBAAW,wBADJ;AAEP,0BAAc;AAFP,WAAX;AAIA,iBAAOtC,iBAAiB,CAACsC,IAAI,CAACS,MAAM,CAACC,QAAR,CAAL,EAAuB,MAAvB,EAA8BD,MAA9B,CAAxB;AACP,SARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAxBJ,CADJ;AAqCH;;;;EAhFiBrE,S;;AAkFtB,IAAMuE,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BhC,IAAAA,OAAO,EAAEgC,KAAK,CAACC,WAAN,CAAkB5B;AADG,GAAL;AAAA,CAA7B;;AAGA,IAAM6B,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAC/BxE,kBAAkB,CAAC;AAAEe,IAAAA,WAAW,EAAXA;AAAF,GAAD,EAAiByD,QAAjB,CADa;AAAA,CAAnC;;AAGA,eAAe3C,UAAU,CAAC9B,OAAO,CAACqE,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CpC,OAA7C,CAAD,CAAzB","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\n//\r\nimport AppBar from '@material-ui/core/AppBar';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n//\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n//\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LDataGrid from '../../components/List/datagrid';\r\nimport LCardGrid from '../../components/List/cardgrid';\r\n//\r\nimport { setSnackbar } from '../../actions/appActions'\r\nimport { deleteApiBonus, getApiBonus, getApiReportFile, getApiReportFileS, putApiBonus } from '../../providers/api'\r\n\r\nimport {InputCpf, stringCpf} from '../../providers/masks'\r\nimport { CircularProgress, IconButton, Toolbar } from '@material-ui/core';\r\nimport { Add, DeleteForeverOutlined } from '@material-ui/icons';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { DataGrid, RowsProp, ColDef, CheckCircleIcon } from '@material-ui/data-grid';\r\n\r\n// MODULE ID\r\nconst module_id = 10\r\n\r\nclass Reports extends Component {\r\n    state = {\r\n        session: JSON.parse(localStorage.getItem(\"user\")),\r\n        data: [],\r\n        pageRequest: {},\r\n        blockDialog: {open: false, id: undefined,active: 0, handle: undefined},\r\n       \r\n    }\r\n    \r\n    componentDidMount() {\r\n        const session = JSON.parse(localStorage.getItem(\"user\"));\r\n        if(session == null){\r\n            window.location.href = '/login';\r\n            return;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const flexBasis = '25%';\r\n        const filter = [\r\n            { column: 'from', label: 'De', type: 'date', flexBasis, grow: 0 },\r\n            { column: 'to', label: 'Até', type: 'date', flexBasis, grow: 0 },\r\n            { column: 'from_launch', label: 'Lançado De', type: 'date', flexBasis, grow: 0 },\r\n            { column: 'to_launch', label: 'Lançado Até', type: 'text', flexBasis, grow: 0 },\r\n            { column: 'cnpj', label: 'CNPJ', type: 'date', flexBasis, grow: 0 },\r\n            { column: 'company_name', label: 'Razão Social', type: 'text', flexBasis },\r\n            { \r\n                column: 'type_rel', label: 'Tipo', type: 'select', flexBasis : window.innerWidth > 720 ? '14%' : '100%', grow: 0 ,\r\n                values: ['Fornecedor', 'Vendas']\r\n            },\r\n            //{ column: 'created_at', label: 'Data', type: 'date' },\r\n        ]\r\n\r\n        const filter_ranking = [\r\n            { column: 'from', label: 'De', type: 'date', flexBasis, grow: 0 },\r\n            { column: 'to', label: 'Até', type: 'date', flexBasis, grow: 0 },\r\n            { \r\n                column: 'type_rank', label: 'Tipo', type: 'select', flexBasis : window.innerWidth > 720 ? '14%' : '100%', grow: 0 ,\r\n                values: ['Cliente', 'Fornecedor']\r\n            },\r\n            //{ column: 'created_at', label: 'Data', type: 'date' },\r\n        ]\r\n\r\n        return (\r\n            <Fragment>\r\n                <AppBar position=\"static\" style={{ padding: 10, marginTop: 10, marginBottom: 10}}>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" style={{flexGrow: 1}}>\r\n                            <HomeIcon />  <span>Relatórios</span>\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Typography variant=\"h6\" style={{flexGrow: 1}}>\r\n                    <span>Fornecedores</span>\r\n                </Typography>\r\n                <LDataGrid hideList={true} rows={[]} columns={[]} filterInputs={filter} \r\n                    pageRequest={\r\n                        (params) => {\r\n                            let type = {\r\n                                'Fornecedor': 'reports/provider',\r\n                                'Vendas': 'reports/sales'\r\n                            }\r\n                            return getApiReportFileS(type[params.type_rel],'xlsx',params)\r\n                    }} />\r\n\r\n                <Typography variant=\"h6\" style={{flexGrow: 1}}>\r\n                    <span>Ranking</span>\r\n                </Typography>\r\n                <LDataGrid hideList={true} rows={[]} columns={[]} filterInputs={filter_ranking} \r\n                    pageRequest={\r\n                        (params) => {\r\n                            let type = {\r\n                                'Cliente': 'reports/client-ranking',\r\n                                'Fornecedor': 'reports/provider-ranking'\r\n                            }\r\n                            return getApiReportFileS(type[params.type_rel],'xlsx',params)\r\n                    }} />\r\n                    \r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = store => ({\r\n    session: store.authReducer.data,\r\n});\r\nconst mapDispatchToProps = dispatch =>\r\n    bindActionCreators({ setSnackbar}, dispatch);\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Reports))\r\n"]},"metadata":{},"sourceType":"module"}