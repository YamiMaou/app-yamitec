{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Maou\\\\Documents\\\\Projetos\\\\CLIENTES\\\\RNF\\\\Completo\\\\client\\\\src\\\\pages\\\\Managers\\\\create\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, Fragment, useState, useRef, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Paper from '@material-ui/core/Paper';\nimport HomeIcon from '@material-ui/icons/Home';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport AddIcon from '@material-ui/icons/Add';\nimport { DataGrid, RowsProp, ColDef } from '@material-ui/data-grid';\nimport { DEFAULT_LOCALE_TEXT } from \"../../../providers/langs/datagrid\";\nimport LForms from \"../../../components/Forms\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { setSnackbar } from \"../../../actions/appActions\";\nimport { postApiManagers, getApiProviders, getApiDownloadFile } from \"../../../providers/api\";\nimport { validaEmail, validaCpf, isFutureData } from \"../../../providers/commonMethods\";\nimport { InputCep, InputCpf, InputPhone, stringCnpj } from \"../../../providers/masks\";\nimport { Redirect } from 'react-router-dom';\nimport { withSnackbar } from 'notistack';\n\nvar SelectInput = function SelectInput(props) {\n  var _props$value;\n\n  var _useState = useState((_props$value = props.value) != null ? _props$value : \"Selecione\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  function handleChange(e) {\n    var _e$target = e.target,\n        value = _e$target.value,\n        id = _e$target.id;\n\n    if (props.validate !== undefined) {\n      if (props.validate(value)) {\n        setError(false);\n      } else {\n        setError(true);\n      }\n    }\n\n    props.onChange(e);\n    console.log(e.target.value);\n    setValue(e.target.value);\n  }\n\n  return React.createElement(FormControl, {\n    id: props.column,\n    style: _objectSpread(_objectSpread({}, props.style), {}, {\n      marginTop: '25px'\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, React.createElement(InputLabel, {\n    id: props.column,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, props.label), React.createElement(Select, {\n    size: \"small\",\n    labelId: props.id,\n    id: props.id,\n    name: props.name,\n    value: value,\n    error: error,\n    placeholder: \"Selecione\",\n    onChange: handleChange,\n    onBlur: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, React.createElement(MenuItem, {\n    key: \"input-00\",\n    value: \"Selecione\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Selecione\"), props.json ? props.values.map(function (val, ind) {\n    return React.createElement(MenuItem, {\n      key: \"input-\" + ind,\n      value: val.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 32\n      }\n    }, val[props.valueLabel]);\n  }) : props.values.map(function (val, ind) {\n    return React.createElement(MenuItem, {\n      key: \"input-\" + ind,\n      value: val,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 32\n      }\n    }, val);\n  })));\n};\n\nvar CreateManagers = function (_Component) {\n  _inherits(CreateManagers, _Component);\n\n  var _super = _createSuper(CreateManagers);\n\n  function CreateManagers() {\n    var _this2;\n\n    _classCallCheck(this, CreateManagers);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.state = {\n      managers: [],\n      providers: [],\n      provider: undefined,\n      provManagers: [],\n      states: []\n    };\n    return _this2;\n  }\n\n  _createClass(CreateManagers, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var providers;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              localStorage.setItem(\"sessionTime\", 900);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(getApiProviders());\n\n            case 3:\n              providers = _context.sent;\n              this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n                providers: providers.data\n              }));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"setProviders\",\n    value: function setProviders() {\n      var provManagers, prov;\n      return _regeneratorRuntime.async(function setProviders$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              provManagers = this.state.provManagers;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(getApiProviders({}, this.state.provider));\n\n            case 3:\n              prov = _context2.sent;\n              provManagers.push(prov);\n              console.log(provManagers);\n              this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n                provManagers: provManagers\n              }));\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var closeSnack = function closeSnack(event, reason) {\n        if (reason === 'clickaway') {\n          return;\n        }\n\n        _this3.props.setSnackbar({\n          open: false,\n          message: \"\"\n        });\n      };\n\n      var request = function request(data) {\n        var response, _response$data, errors, messages;\n\n        return _regeneratorRuntime.async(function request$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _this3.props.setSnackbar({\n                  open: true,\n                  message: \"Validando Dados, Aguarde ...\"\n                });\n\n                _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                  loading: true\n                }));\n\n                _context3.next = 4;\n                return _regeneratorRuntime.awrap(postApiManagers(data));\n\n              case 4:\n                response = _context3.sent;\n\n                if (response.data.success) {\n                  _this3.props.setSnackbar({\n                    open: true,\n                    message: response.data.message\n                  });\n\n                  _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                    loading: false\n                  }));\n\n                  _this3.props.history.goBack();\n                } else {\n                  console.log(response);\n                  errors = (_response$data = response.data) != null ? _response$data : undefined;\n                  messages = '';\n\n                  if (errors !== undefined && errors.error !== undefined && errors.error.response && errors.error.response.data !== undefined && errors.error.response.data.errors !== undefined) {\n                    Object.keys(errors.error.response.data.errors).map(function (err) {\n                      console.log(err);\n                      var field = err == \"file\" ? \"Anexo\" : err;\n                      messages += \"O \" + field.toUpperCase() + \" \" + errors.error.response.data.errors[err][0] + \" \\n\";\n                    });\n                  } else {\n                    messages = 'Houve um problema em sua requisição!';\n                  }\n\n                  _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                    loading: false\n                  }));\n\n                  _this3.props.setSnackbar({\n                    open: true,\n                    message: messages\n                  });\n                }\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      };\n\n      var validateFields = function validateFields(fields, values) {\n        var campo = undefined;\n        fields.reverse().map(function (v, k) {\n          v.fields.reverse().map(function (v1, k1) {\n            var value = values[v1.column];\n\n            if (v1.validate !== undefined) {\n              if (v1.validate.number !== undefined) {\n                if (/^[-]?\\d+$/.test(value) == false) campo = {\n                  id: v1.column,\n                  message: \"O Campo \" + v1.label + \" \\xE9 somente n\\xFAmeros \"\n                };\n              }\n\n              if (v1.validate.max !== undefined) {\n                if (value.length > v1.validate.max) campo = {\n                  id: v1.column,\n                  message: \"O Campo \" + v1.label + \", tamanho m\\xE1ximo de \" + v1.validate.max + \" caracteres ex\\xEAdido\"\n                };\n              }\n\n              if (v1.validate.min !== undefined) {\n                if (value.length < v1.validate.min) campo = {\n                  id: v1.column,\n                  message: \"O Campo \" + v1.label + \", tamanho minimo de \" + v1.validate.min + \" caracteres.\"\n                };\n              }\n\n              if (v1.validate.required !== undefined) {\n                if (value.length == 0) campo = {\n                  id: v1.column,\n                  message: \"O Campo \" + v1.label + \" \\xE9 obrigat\\xF3rio\"\n                };\n              }\n            }\n\n            if (value == \"Selecione\") {\n              campo = {\n                id: v1.column,\n                message: \"O Campo \" + v1.label + \" \\xE9 inv\\xE1lido \"\n              };\n            }\n\n            if (v1.validateHandler !== undefined) {\n              if (v1.validateHandler(value) == false) campo = {\n                id: v1.column,\n                message: \"O Campo \" + v1.label + \"  \\xE9 inv\\xE1lido \"\n              };\n            }\n          });\n        });\n        campo !== undefined ? _this3.props.setSnackbar({\n          open: true,\n          message: campo.message\n        }) : '';\n        return campo === undefined ? true : false;\n      };\n\n      var flexBasis = '22%';\n      var forms = [{\n        title: 'Dados Básicos',\n        fields: [{\n          column: 'active',\n          label: 'Ativo',\n          type: 'checkbox',\n          value: 1,\n          disabled: true,\n          flexBasis: \"100%\"\n        }, {\n          column: 'cpf',\n          label: 'CPF',\n          type: 'text',\n          mask: InputCpf,\n          validate: {\n            min: 11,\n            number: true,\n            required: true\n          },\n          validateHandler: validaCpf,\n          flexBasis: '12%',\n          helperText: \"o valor digitado é inválido\"\n        }, {\n          column: 'name',\n          label: 'Nome',\n          type: 'text',\n          validate: {\n            max: 50,\n            required: true\n          },\n          flexBasis: flexBasis\n        }, {\n          column: 'function',\n          label: 'Função',\n          type: 'text',\n          validate: {\n            required: true\n          },\n          flexBasis: flexBasis,\n          style: {\n            width: '220px'\n          }\n        }]\n      }, {\n        title: 'Contato',\n        fields: [{\n          column: 'phone1',\n          label: 'Contato',\n          type: 'text',\n          mask: InputPhone,\n          validate: {\n            max: 15,\n            required: true\n          },\n          flexBasis: '20%'\n        }, {\n          column: 'phone2',\n          label: 'Contato alternativo',\n          type: 'text',\n          mask: InputPhone,\n          validate: {\n            max: 15\n          },\n          flexBasis: '20%'\n        }, {\n          column: 'email',\n          label: 'E-mail',\n          type: 'email',\n          validate: {\n            max: 100\n          },\n          validateHandler: validaEmail,\n          flexBasis: '20%'\n        }]\n      }, {\n        title: 'Redes Sociais',\n        fields: [{\n          column: 'linkedin',\n          label: 'Usuário do LinkedIn',\n          type: 'text',\n          validate: {\n            max: 100,\n            required: true\n          },\n          flexBasis: '20%'\n        }, {\n          column: 'facebook',\n          label: 'Usuário do Facebook',\n          type: 'text',\n          validate: {\n            max: 100,\n            required: true\n          },\n          flexBasis: '20%'\n        }, {\n          column: 'instagram',\n          label: 'Usuário do Instagram',\n          type: 'text',\n          validate: {\n            max: 100,\n            required: true\n          },\n          flexBasis: '20%'\n        }]\n      }];\n      var rows = this.state.provManagers;\n      var columns = [{\n        field: 'company_name',\n        headerName: 'Farmácia',\n        flex: 1.2,\n        valueFormatter: function valueFormatter(params) {\n          var _params$row$cnpj;\n\n          return params.value + \" - \" + stringCnpj((_params$row$cnpj = params.row.cnpj) != null ? _params$row$cnpj : '00000000000000');\n        }\n      }, {\n        field: 'phone1',\n        headerName: 'Telefone',\n        flex: 0.7,\n        valueFormatter: function valueFormatter(params) {\n          return params.row.contacts ? params.row.contacts.phone1 : '-';\n        }\n      }, {\n        field: 'email',\n        headerName: 'E-mail',\n        flex: 0.7,\n        valueFormatter: function valueFormatter(params) {\n          return params.row.contacts ? params.row.contacts.email : '';\n        }\n      }, {\n        field: 'function',\n        headerName: 'Função',\n        flex: 0.7\n      }, {\n        field: 'id',\n        headerName: 'Ações',\n        flex: 1,\n        renderCell: function renderCell(params, row) {\n          return React.createElement(\"div\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 25\n            }\n          }, React.createElement(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            size: \"small\",\n            onClick: function _callee(e) {\n              var provManagers, index;\n              return _regeneratorRuntime.async(function _callee$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      try {\n                        provManagers = _this3.state.provManagers;\n                        index = provManagers.findIndex(function (x) {\n                          return x.id == params.row.id;\n                        });\n                        console.log(index);\n                        provManagers.splice(index, 1);\n\n                        _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n                          provManagers: provManagers\n                        }));\n\n                        console.log(_this3.state.provManagers);\n                      } catch (err) {\n                        console.log(err);\n                      }\n\n                      ;\n\n                    case 2:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            },\n            style: {\n              marginLeft: 16\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }\n          }, React.createElement(DeleteForeverIcon, {\n            fontSize: \"small\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 33\n            }\n          })));\n        }\n      }];\n      return React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }\n      }, React.createElement(AppBar, {\n        position: \"static\",\n        style: {\n          padding: 10,\n          marginTop: 10,\n          marginBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 17\n        }\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }\n      }, React.createElement(HomeIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 25\n        }\n      }), \"  \", React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 39\n        }\n      }, \"Cadastro / Respons\\xE1vel\"))), React.createElement(LForms, {\n        forms: forms,\n        request: request,\n        validate: function validate(values) {\n          return validateFields(forms, values);\n        },\n        loading: this.state.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 17\n        }\n      }, React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 25\n        }\n      }, React.createElement(Card, {\n        style: {\n          marginBottom: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 29\n        }\n      }, React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 33\n        }\n      }, React.createElement(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 37\n        }\n      }, React.createElement(IndeterminateCheckBoxIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 41\n        }\n      }), \" Fornecedores\"), React.createElement(\"div\", {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'start',\n          display: 'flex'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 37\n        }\n      }, React.createElement(SelectInput, {\n        valueLabel: \"value\",\n        json: true,\n        valueLabel: 'company_name',\n        key: \"input-\" + 15019,\n        id: \"manager\",\n        label: \"Farmácia/Grupo\",\n        name: \"manager\",\n        values: this.state.providers,\n        style: {\n          flexBasis: window.innerWidth < 768 ? '75%' : '75%',\n          marginBottom: 15\n        },\n        onChange: function onChange(e) {\n          _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n            provider: e.target.value\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 41\n        }\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        disableElevation: true,\n        onClick: function onClick() {\n          _this3.setProviders();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 45\n        }\n      }, React.createElement(AddIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 48\n        }\n      }))), React.createElement(\"div\", {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'start',\n          height: 350\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 37\n        }\n      }, rows.length == 0 ? '' : React.createElement(DataGrid, {\n        sx: {\n          '& .MuiDataGrid-root': {\n            '& .MuiDataGrid-viewport': {\n              maxWidth: '600px'\n            }\n          }\n        },\n        rows: rows,\n        columns: columns,\n        spacing: 0,\n        stickyHeader: true,\n        disableClickEventBubbling: true,\n        disableColumnMenu: true,\n        localeText: DEFAULT_LOCALE_TEXT,\n        pageSize: 10,\n        rowsPerPageOptions: [10],\n        pagination: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 41\n        }\n      })))))));\n    }\n  }]);\n\n  return CreateManagers;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    session: store.authReducer.data,\n    snackbar: store.appReducer.snackbar\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setSnackbar: setSnackbar\n  }, dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CreateManagers));","map":{"version":3,"sources":["C:/Users/Maou/Documents/Projetos/CLIENTES/RNF/Completo/client/src/pages/Managers/create/index.js"],"names":["React","Component","Fragment","useState","useRef","useEffect","connect","bindActionCreators","withRouter","AppBar","Paper","HomeIcon","DeleteForeverIcon","Typography","Snackbar","AddIcon","DataGrid","RowsProp","ColDef","DEFAULT_LOCALE_TEXT","LForms","MenuItem","FormHelperText","FormControl","FormControlLabel","Select","InputLabel","IndeterminateCheckBoxIcon","Button","Card","CardContent","setSnackbar","postApiManagers","getApiProviders","getApiDownloadFile","validaEmail","validaCpf","isFutureData","InputCep","InputCpf","InputPhone","stringCnpj","Redirect","withSnackbar","SelectInput","props","value","setValue","error","setError","handleChange","e","target","id","validate","undefined","onChange","console","log","column","style","marginTop","label","name","json","values","map","val","ind","valueLabel","CreateManagers","state","managers","providers","provider","provManagers","states","localStorage","setItem","setState","data","prov","push","closeSnack","event","reason","open","message","request","loading","response","success","history","goBack","errors","messages","Object","keys","err","field","toUpperCase","validateFields","fields","campo","reverse","v","k","v1","k1","number","test","max","length","min","required","validateHandler","flexBasis","forms","title","type","disabled","mask","helperText","width","rows","columns","headerName","flex","valueFormatter","params","row","cnpj","contacts","phone1","email","renderCell","index","findIndex","x","splice","marginLeft","padding","marginBottom","alignItems","justifyContent","display","window","innerWidth","setProviders","height","maxWidth","mapStateToProps","store","session","authReducer","snackbar","appReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment, useState, useRef, useEffect   } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { DataGrid, RowsProp, ColDef} from '@material-ui/data-grid';\r\nimport { DEFAULT_LOCALE_TEXT } from '../../../providers/langs/datagrid';\r\nimport LForms from '../../../components/Forms';\r\n//\r\n\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n//\r\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n//\r\nimport { setSnackbar } from '../../../actions/appActions'\r\nimport { postApiManagers, getApiProviders, getApiDownloadFile } from '../../../providers/api'\r\nimport { validaEmail, validaCpf, isFutureData } from '../../../providers/commonMethods'\r\n\r\nimport { InputCep, InputCpf, InputPhone, stringCnpj } from '../../../providers/masks'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { withSnackbar  } from 'notistack';\r\nconst SelectInput = (props) => {\r\n    const [value, setValue] = useState(props.value ?? \"Selecione\");\r\n    const [error, setError] = useState(false);\r\n    function handleChange(e) {\r\n        const { value, id } = e.target;\r\n        if (props.validate !== undefined) {\r\n            if (props.validate(value)) {\r\n                setError(false);\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }\r\n        props.onChange(e)\r\n        console.log(e.target.value)\r\n        setValue(e.target.value);\r\n    }\r\n    return (\r\n        <FormControl id={props.column} style={{ ...props.style, marginTop: '25px' }}>\r\n            <InputLabel id={props.column}>{props.label}</InputLabel>\r\n            <Select size=\"small\"\r\n                labelId={props.id}\r\n                id={props.id}\r\n                name={props.name}\r\n                value={value}\r\n                error={error}\r\n                placeholder=\"Selecione\"\r\n                //helperText={props.error ? props.helperText ?? \"conteúdo inválido\" : \"\"}\r\n                onChange={handleChange}\r\n                onBlur={handleChange}\r\n            >\r\n                <MenuItem key={`input-00`} value=\"Selecione\">Selecione</MenuItem>\r\n                {props.json ? (\r\n                    props.values.map((val, ind) => {\r\n                        return <MenuItem key={`input-${ind}`} value={val.id}>{val[props.valueLabel]}</MenuItem>\r\n                    })\r\n                ) : (\r\n                    props.values.map((val, ind) => {\r\n                        return <MenuItem key={`input-${ind}`} value={val}>{val}</MenuItem>\r\n                    })\r\n                )\r\n                }\r\n\r\n            </Select>\r\n        </FormControl>)\r\n}\r\n\r\nclass CreateManagers extends Component {\r\n    \r\n    state = {\r\n        managers: [],\r\n        providers: [],\r\n        provider: undefined,\r\n        provManagers: [],\r\n        states: []\r\n    }\r\n    async componentDidMount() {\r\n        localStorage.setItem(\"sessionTime\", 900)\r\n        const providers = await getApiProviders();\r\n        this.setState({...this.state, providers: providers.data});\r\n\r\n    }\r\n    async setProviders(){\r\n        let provManagers = this.state.provManagers;\r\n        //let provider = this.state.providers.filter(x => x.id == this.state.provider);\r\n        const prov = await getApiProviders({}, this.state.provider);\r\n        provManagers.push(prov);\r\n        console.log(provManagers);\r\n        this.setState({...this.state, provManagers});\r\n    }\r\n\r\n    render() {\r\n         // to use snackbar Provider\r\n        const closeSnack = (event, reason) => {\r\n            if (reason === 'clickaway') {\r\n                return;\r\n            }\r\n            this.props.setSnackbar({ open: false, message: \"\" });\r\n        };\r\n        \r\n        const request = async (data) => {\r\n            this.props.setSnackbar({ open: true, message: \"Validando Dados, Aguarde ...\", });\r\n            this.setState({ ...this.state, loading: true });\r\n            let response = await postApiManagers(data);\r\n            if (response.data.success) {\r\n                this.props.setSnackbar({ open: true, message: response.data.message });\r\n                this.setState({ ...this.state, loading: false });\r\n                this.props.history.goBack();\r\n            } else {\r\n                console.log(response)\r\n                let errors = response.data ?? undefined;\r\n\r\n                let messages = '';\r\n                if(errors !== undefined && errors.error !== undefined && errors.error.response && errors.error.response.data !== undefined && errors.error.response.data.errors !== undefined){\r\n                    Object.keys(errors.error.response.data.errors).map(err => {\r\n                        console.log(err);\r\n                        let field = err == \"file\" ? \"Anexo\" : err\r\n                        messages += `O ${field.toUpperCase()} ${errors.error.response.data.errors[err][0]} \\n`;\r\n                    })\r\n                } else{\r\n                    messages = 'Houve um problema em sua requisição!'\r\n                }\r\n                this.setState({ ...this.state, loading: false });\r\n                this.props.setSnackbar({ open: true, message: messages});\r\n            }\r\n\r\n        }\r\n        const validateFields = (fields, values) => {\r\n            let campo = undefined;\r\n            fields.reverse().map((v,k) => {\r\n                v.fields.reverse().map((v1,k1)=>{\r\n                        let value = values[v1.column];\r\n                        if (v1.validate !== undefined) {\r\n                            if (v1.validate.number !== undefined) {\r\n                                if (/^[-]?\\d+$/.test(value) == false)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label} é somente números ` }\r\n                            }\r\n\r\n                            if (v1.validate.max !== undefined) {\r\n                                if (value.length > v1.validate.max)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label}, tamanho máximo de ${v1.validate.max} caracteres exêdido` };\r\n                            }\r\n\r\n                            if (v1.validate.min !== undefined) {\r\n                                if (value.length < v1.validate.min)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label}, tamanho minimo de ${v1.validate.min} caracteres.` };\r\n                            }\r\n\r\n                            if (v1.validate.required !== undefined) {\r\n                                if (value.length == 0)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label} é obrigatório` };\r\n                            }\r\n                        }\r\n                        if(value == \"Selecione\"){\r\n                            campo = {id: v1.column, message: `O Campo ${v1.label} é inválido ` }\r\n                        }\r\n                        if(v1.validateHandler !== undefined){\r\n                            if (v1.validateHandler(value) == false)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label}  é inválido ` }\r\n                        }\r\n                    })\r\n                })\r\n                campo !== undefined ? this.props.setSnackbar({ open: true, message: campo.message}) : '';\r\n\r\n                return campo === undefined ? true : false\r\n        }\r\n        const flexBasis = '22%';\r\n        const forms = [\r\n            {\r\n                title: 'Dados Básicos',\r\n                fields: [\r\n                    { column: 'active', label: 'Ativo', type: 'checkbox',  value: 1, disabled: true, flexBasis : \"100%\" },\r\n                    { column: 'cpf', label: 'CPF', type: 'text', mask: InputCpf, validate: {min: 11, number: true, required: true},validateHandler: validaCpf, flexBasis: '12%', helperText: \"o valor digitado é inválido\" },\r\n                    { column: 'name', label: 'Nome', type: 'text', validate: {max: 50, required: true}, flexBasis },\r\n                    {\r\n                        column: 'function', label: 'Função', type: 'text',\r\n                        validate: {required: true },\r\n                        flexBasis, style:{width: '220px'}\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                title: 'Contato',\r\n                fields: [\r\n                    { column: 'phone1', label: 'Contato', type: 'text', mask: InputPhone, validate: {max: 15, required: true}, flexBasis: '20%' },\r\n                    { column: 'phone2', label: 'Contato alternativo', type: 'text', mask: InputPhone, validate: {max: 15}, flexBasis: '20%' },\r\n                    { column: 'email', label: 'E-mail', type: 'email', validate: {max: 100}, validateHandler: validaEmail, flexBasis: '20%' },\r\n                ]\r\n            },\r\n            {\r\n                title: 'Redes Sociais',\r\n                fields: [\r\n                    { column: 'linkedin', label: 'Usuário do LinkedIn', type: 'text', validate: {max: 100, required: true}, flexBasis: '20%' },\r\n                    { column: 'facebook', label: 'Usuário do Facebook', type: 'text', validate: {max: 100, required: true}, flexBasis: '20%' },\r\n                    { column: 'instagram', label: 'Usuário do Instagram', type: 'text', validate: {max: 100, required: true}, flexBasis: '20%' },\r\n                ]\r\n            }\r\n        ];\r\n\r\n        // Providers Grid\r\n        const rows: RowsProp = this.state.provManagers;\r\n        const columns: ColDef[] = [\r\n            {\r\n                field: 'company_name', headerName: 'Farmácia', flex: 1.2,\r\n                valueFormatter: (params: ValueFormatterParams) => {\r\n                    return params.value +\" - \"+ stringCnpj(params.row.cnpj ?? '00000000000000');\r\n                }\r\n            },\r\n           { \r\n            field: 'phone1', headerName: 'Telefone', flex: 0.7,\r\n                valueFormatter: (params: ValueFormatterParams) => {\r\n                    //let provider = this.state.providers.filter(prov => prov.id === params.row.id); \r\n                    //console.log(params.row)\r\n                    return params.row.contacts ? params.row.contacts.phone1 : '-';\r\n                }\r\n            },\r\n            { \r\n                field: 'email', headerName: 'E-mail',flex: 0.7,\r\n                valueFormatter: (params: ValueFormatterParams) => {\r\n                    //let provider = this.state.providers.filter(prov => prov.id === params.row.id); \r\n                    //console.log(provider)\r\n                    return params.row.contacts ? params.row.contacts.email : '';\r\n                }\r\n            },\r\n            { field: 'function', headerName: 'Função', flex: 0.7 }, \r\n            {\r\n                field: 'id',\r\n                headerName: 'Ações',\r\n                flex: 1,\r\n                renderCell: (params: ValueFormatterParams, row: RowIdGetter) => {\r\n                    //let view = this.state.session.permissions.find(x => x.module === module_id)\r\n                    return (\r\n                        <div>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                onClick={async (e) => {\r\n                                    try {\r\n                                        //if(this.state.provManagers.length > 1){\r\n                                            let provManagers = this.state.provManagers;\r\n                                            let index = provManagers.findIndex(x => x.id == params.row.id)\r\n                                            console.log(index);\r\n                                            provManagers.splice(index,1)\r\n                                            this.setState({...this.state, provManagers });\r\n                                            console.log(this.state.provManagers)\r\n                                        /*}else{\r\n                                            this.props.setSnackbar({ open: true, message: \"Você deve manter pelo menos 1 registro\" })\r\n                                        }*/\r\n\r\n                                        \r\n                                    } catch (err) {\r\n                                        console.log(err)\r\n                                    };\r\n\r\n                                }}\r\n                                style={{ marginLeft: 16 }}\r\n                            >\r\n                                <DeleteForeverIcon fontSize=\"small\" />\r\n                            </Button>\r\n                        </div>\r\n                    )\r\n                },\r\n            },\r\n        ]\r\n\r\n        return (\r\n            <Fragment>\r\n                <AppBar position=\"static\" style={{ padding: 10, marginTop: 10, marginBottom: 10 }}>\r\n                    <Typography variant=\"h6\">\r\n                        <HomeIcon />  <span>Cadastro / Responsável</span>\r\n                    </Typography>\r\n                </AppBar>\r\n                <LForms forms={forms}\r\n                    request={request} \r\n                    validate={(values) => { return validateFields(forms,values)}}\r\n                    loading={this.state.loading} >\r\n                        <div>\r\n                            <Card style={{ marginBottom: 15 }}>\r\n                                <CardContent>\r\n                                    <Typography>\r\n                                        <IndeterminateCheckBoxIcon /> Fornecedores\r\n                                    </Typography>\r\n                                    <div  style={{\r\n                                            alignItems: 'center',\r\n                                            justifyContent: 'start',\r\n                                            display: 'flex'\r\n                                        }}>\r\n                                        <SelectInput valueLabel=\"value\" \r\n                                            json={true} \r\n                                            valueLabel={'company_name'}\r\n                                            key={`input-${15019}`} id={\"manager\"} label={\"Farmácia/Grupo\"} name={\"manager\"} \r\n                                            values={this.state.providers} \r\n                                            style={{flexBasis: window.innerWidth < 768 ? '75%' : '75%', marginBottom: 15 }} \r\n                                            onChange={(e) => {\r\n                                                this.setState({...this.state, provider: e.target.value});\r\n                                            }} />\r\n                                            <Button variant=\"contained\" color=\"primary\" size=\"small\" disableElevation \r\n                                            onClick={() => {\r\n                                                this.setProviders();\r\n                                            }}><AddIcon /></Button>\r\n                                        </div>\r\n                                    <div style={{\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'start',\r\n                                        height: 350,\r\n                                    }}>\r\n                                        { rows.length == 0 ? ('') :  \r\n                                        <DataGrid sx={{\r\n                                            '& .MuiDataGrid-root': {\r\n                                                '& .MuiDataGrid-viewport': {\r\n                                                    maxWidth: '600px',\r\n                                                },\r\n                                            }\r\n                                        }}\r\n                                            rows={rows} columns={columns}\r\n                                            spacing={0}\r\n                                            stickyHeader\r\n                                            disableClickEventBubbling\r\n                                            disableColumnMenu={true}\r\n                                            localeText={DEFAULT_LOCALE_TEXT}\r\n                                            pageSize={10} rowsPerPageOptions={[10]} pagination\r\n                                        /> }\r\n                                    </div>\r\n                                </CardContent>\r\n                            </Card>\r\n                            \r\n                        </div>\r\n                    </LForms>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = store => ({\r\n    session: store.authReducer.data,\r\n    snackbar: store.appReducer.snackbar\r\n});\r\nconst mapDispatchToProps = dispatch =>\r\n    bindActionCreators({ setSnackbar }, dispatch);\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CreateManagers))\r\n"]},"metadata":{},"sourceType":"module"}