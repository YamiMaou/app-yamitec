{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Maou\\\\Documents\\\\Projetos\\\\CLIENTES\\\\RNF\\\\client\\\\src\\\\components\\\\Forms\\\\index.js\",\n    _this = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, Fragment, useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { setDialog, setProducts } from \"../../actions/productActions\";\nimport { setCart } from \"../../actions/cartAction\";\nimport { setSnackbar } from \"../../actions/appActions\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\nimport ptBR from \"date-fns/locale/pt-BR\";\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport MaskedInput from 'react-text-mask';\nvar idNumbers = ['cpf', 'cnpj', 'cep'];\nvar inputValues = {};\nvar formValidate = true;\n\nfunction onChangeInputs(e) {\n  var _e$target$id;\n\n  var params,\n      value,\n      id,\n      request,\n      _args = arguments;\n  return _regeneratorRuntime.async(function onChangeInputs$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          params = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n          value = e.target.value;\n          id = (_e$target$id = e.target.id) != null ? _e$target$id : e.target.name;\n\n          if (idNumbers.includes(e.target.id)) {\n            value = value.replace(/[^\\d]+/g, '');\n          }\n\n          if (!(value.length == 0 || value == 'Todos')) {\n            _context.next = 8;\n            break;\n          }\n\n          inputValues[id] = '';\n          _context.next = 16;\n          break;\n\n        case 8:\n          if (id == 'created_at') {\n            value = \"\" + value.toJSON().split('T')[0];\n          }\n\n          if (idNumbers.includes(id)) {\n            value = value.replace(/[^\\d]+/g, '');\n          }\n\n          if (!(params.handle !== undefined)) {\n            _context.next = 14;\n            break;\n          }\n\n          _context.next = 13;\n          return _regeneratorRuntime.awrap(params.handle(value));\n\n        case 13:\n          request = _context.sent;\n\n        case 14:\n          if (params.validate !== undefined) {\n            if (params.validate.max !== undefined) {\n              value.length <= params.validate.max ? null : formValidate = false;\n            }\n\n            if (params.validate.max !== undefined) {\n              value.length <= params.validate.max ? null : formValidate = false;\n            }\n\n            if (params.validate.min !== undefined) {\n              value.length >= params.validate.min ? null : formValidate = false;\n            }\n\n            if (params.validate.required !== undefined) {\n              value.length <= 0 ? null : formValidate = false;\n            }\n          }\n\n          if (params.json === undefined) {\n            inputValues[id] = value;\n          } else {\n            inputValues[params.json][id] = value;\n          }\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction TextMaskCustom(props) {\n  var inputRef = props.inputRef,\n      other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return React.createElement(MaskedInput, _extends({}, other, {\n    ref: function ref(_ref) {\n      inputRef(_ref ? _ref.inputElement : null);\n    },\n    value: props.value,\n    onChange: props.onChange,\n    mask: props.mask,\n    placeholderChar: \"\\u2000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction TextInputCustom(props) {\n  var _props$required, _props$helperText, _props$required2, _props$helperText2;\n\n  var inputRef = props.inputRef,\n      other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  function handleChange(e) {\n    var id = e.target.id;\n    var val = e.target.value;\n    setValue(val);\n\n    if (props.validate !== undefined) {\n      if (props.validate(val) !== false) {\n        setError(false);\n        formValidate = true;\n        props.onChange(e);\n      } else {\n        setError(true);\n      }\n    }\n  }\n\n  if (props.mask === undefined) return React.createElement(TextField, {\n    key: \"input-\" + props.id,\n    size: \"small\",\n    style: props.style,\n    required: (_props$required = props.required) != null ? _props$required : false,\n    error: error,\n    value: value,\n    helperText: error ? (_props$helperText = props.helperText) != null ? _props$helperText : \"conteúdo inválido\" : \"\",\n    id: props.id,\n    label: props.label,\n    onChange: handleChange,\n    onBlur: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  });else return React.createElement(FormControl, {\n    key: \"input-\" + props.id,\n    style: props.style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, React.createElement(InputLabel, {\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, props.label), React.createElement(Input, {\n    required: (_props$required2 = props.required) != null ? _props$required2 : false,\n    size: \"small\",\n    error: error,\n    onChange: handleChange,\n    onBlur: handleChange,\n    name: props.name,\n    id: props.id,\n    \"aria-describedby\": \"component-error-text\",\n    inputProps: {\n      mask: props.mask,\n      error: error,\n      onChange: handleChange,\n      value: value\n    },\n    inputComponent: TextMaskCustom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }), error == true ? React.createElement(FormHelperText, {\n    id: \"component-error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }, (_props$helperText2 = props.helperText) != null ? _props$helperText2 : \"conteúdo inválido\") : '');\n}\n\nvar DateInput = function DateInput(props) {\n  var _props$required3, _props$label, _props$helperText3;\n\n  var _useState5 = useState(new Date('2021-02-13')),\n      _useState6 = _slicedToArray(_useState5, 2),\n      value = _useState6[0],\n      setValue = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      error = _useState8[0],\n      setError = _useState8[1];\n\n  function handleChange(value) {\n    try {\n      if (props.validate !== undefined) {\n        if (props.validate(value)) {\n          setError(false);\n          formValidate = true;\n          inputValues[props.id] = \"\" + value.toJSON().split('T')[0];\n        } else {\n          setError(true);\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n\n    setValue(value);\n  }\n\n  return React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    locale: ptBR,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, React.createElement(Grid, {\n    justify: \"space-around\",\n    style: {\n      flexGrow: 0,\n      marginTop: 18\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, React.createElement(KeyboardDatePicker, {\n    required: (_props$required3 = props.required) != null ? _props$required3 : false,\n    margin: \"normal\",\n    id: props.id,\n    label: (_props$label = props.label) != null ? _props$label : 'Data',\n    error: error,\n    helperText: props.error ? (_props$helperText3 = props.helperText) != null ? _props$helperText3 : \"conteúdo inválido\" : \"\",\n    format: \"dd/MM/yyyy\",\n    value: value,\n    onChange: handleChange,\n    onBlur: handleChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  })));\n};\n\nvar SelectInput = function SelectInput(props) {\n  var _props$helperText4;\n\n  var _useState9 = useState(props.values[0]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      value = _useState10[0],\n      setValue = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      error = _useState12[0],\n      setError = _useState12[1];\n\n  function handleChange(e) {\n    var _e$target = e.target,\n        value = _e$target.value,\n        id = _e$target.id;\n\n    if (props.validate !== undefined) {\n      if (props.validate(value)) {\n        setError(false);\n        props.onChange(e);\n        formValidate = true;\n      } else {\n        setError(true);\n      }\n    }\n\n    setValue(e.target.value);\n  }\n\n  return React.createElement(FormControl, {\n    id: props.column,\n    style: _objectSpread(_objectSpread({}, props.style), {}, {\n      marginTop: '25px'\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }, React.createElement(InputLabel, {\n    id: props.column,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, props.label), React.createElement(Select, {\n    size: \"small\",\n    labelId: props.id,\n    id: props.id,\n    name: props.name,\n    value: value,\n    error: error,\n    helperText: props.error ? (_props$helperText4 = props.helperText) != null ? _props$helperText4 : \"conteúdo inválido\" : \"\",\n    onChange: handleChange,\n    onBlur: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, props.values.map(function (val, ind) {\n    return React.createElement(MenuItem, {\n      key: \"input-\" + ind,\n      value: val,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 32\n      }\n    }, val);\n  })));\n};\n\nvar LForms = function (_Component) {\n  _inherits(LForms, _Component);\n\n  var _super = _createSuper(LForms);\n\n  function LForms() {\n    var _this2;\n\n    _classCallCheck(this, LForms);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.state = {\n      data: [],\n      filter: ['flex']\n    };\n    return _this2;\n  }\n\n  _createClass(LForms, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var classes = {\n        m5: {\n          margin: 5,\n          marginTop: 25\n        },\n        root: {\n          maxWidth: 345,\n          marginBottom: 25\n        },\n        media: {\n          height: 140\n        }\n      };\n      return React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }\n      }, this.props.forms.map(function (form, ind) {\n        var _form$id, _form$flexFlow, _this3$state$filter$i;\n\n        var ifjson = {};\n        return React.createElement(\"div\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 29\n          }\n        }, React.createElement(Card, {\n          className: classes.root,\n          style: {\n            marginBottom: 15\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 33\n          }\n        }, React.createElement(CardContent, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 37\n          }\n        }, React.createElement(Typography, {\n          onClick: function onClick() {\n            var filter = _this3.state.filter;\n            filter[ind] = _this3.state.filter[ind] == 'flex' ? 'none' : 'flex';\n\n            _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n              filter: filter\n            }));\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 41\n          }\n        }, React.createElement(IndeterminateCheckBoxIcon, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 45\n          }\n        }), \" \", form.title), React.createElement(\"div\", {\n          key: \"block-\" + ind,\n          id: \"data-form-\" + ((_form$id = form.id) != null ? _form$id : '1'),\n          style: {\n            alignItems: 'center',\n            flexFlow: (_form$flexFlow = form.flexFlow) != null ? _form$flexFlow : 'row wrap',\n            justifyContent: 'start',\n            display: (_this3$state$filter$i = _this3.state.filter[ind]) != null ? _this3$state$filter$i : 'flex'\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 41\n          }\n        }, form.fields.map(function (input, ind1) {\n          var _input$value, _form$json, _input$value2;\n\n          ifjson[input.column] = (_input$value = input.value) != null ? _input$value : '';\n          inputValues[(_form$json = form.json) != null ? _form$json : input.column] = form.json == undefined ? (_input$value2 = input.value) != null ? _input$value2 : '' : ifjson;\n\n          if (input.type == \"text\") {\n            var _input$grow, _input$flexBasis, _input$mask, _input$helperText;\n\n            return React.createElement(TextInputCustom, {\n              style: _objectSpread(_objectSpread({}, classes.m5), {}, {\n                flexGrow: (_input$grow = input.grow) != null ? _input$grow : 0,\n                flexBasis: (_input$flexBasis = input.flexBasis) != null ? _input$flexBasis : '30%'\n              }),\n              id: input.column,\n              label: input.label,\n              mask: (_input$mask = input.mask) != null ? _input$mask : undefined,\n              validate: input.validateHandler,\n              helperText: (_input$helperText = input.helperText) != null ? _input$helperText : \"\",\n              onChange: function onChange(e) {\n                var _input$handle, _form$json2, _input$validate;\n\n                return onChangeInputs(e, {\n                  handle: (_input$handle = input.handle) != null ? _input$handle : undefined,\n                  json: (_form$json2 = form.json) != null ? _form$json2 : undefined,\n                  validate: (_input$validate = input.validate) != null ? _input$validate : undefined\n                });\n              },\n              onBlur: function onBlur(e) {\n                var _input$handle2, _form$json3, _input$validate2;\n\n                return onChangeInputs(e, {\n                  handle: (_input$handle2 = input.handle) != null ? _input$handle2 : undefined,\n                  json: (_form$json3 = form.json) != null ? _form$json3 : undefined,\n                  validate: (_input$validate2 = input.validate) != null ? _input$validate2 : undefined\n                });\n              },\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 64\n              }\n            });\n          } else if (input.type == \"date\") {\n            var _input$helperText2, _input$grow2;\n\n            return React.createElement(DateInput, {\n              helperText: (_input$helperText2 = input.helperText) != null ? _input$helperText2 : \"\",\n              key: \"input-\" + ind1,\n              id: input.column,\n              style: _objectSpread(_objectSpread({}, classes.m5), {}, {\n                flexGrow: (_input$grow2 = input.grow) != null ? _input$grow2 : 0\n              }),\n              onChange: function onChange(e) {\n                var _input$handle3, _form$json4, _input$validate3;\n\n                return onChangeInputs(e, {\n                  handle: (_input$handle3 = input.handle) != null ? _input$handle3 : undefined,\n                  json: (_form$json4 = form.json) != null ? _form$json4 : undefined,\n                  validate: (_input$validate3 = input.validate) != null ? _input$validate3 : undefined\n                });\n              },\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 64\n              }\n            });\n          } else if (input.type == \"select\") {\n            var _input$helperText3, _input$grow3;\n\n            return React.createElement(SelectInput, {\n              helperText: (_input$helperText3 = input.helperText) != null ? _input$helperText3 : \"\",\n              key: \"input-\" + ind1,\n              id: input.column,\n              label: input.label,\n              name: input.column,\n              values: input.values,\n              style: _objectSpread(_objectSpread({}, classes.m5), {}, {\n                flexGrow: (_input$grow3 = input.grow) != null ? _input$grow3 : 0\n              }),\n              onChange: function onChange(e) {\n                var _input$handle4, _form$json5, _input$validate4;\n\n                return onChangeInputs(e, {\n                  handle: (_input$handle4 = input.handle) != null ? _input$handle4 : undefined,\n                  json: (_form$json5 = form.json) != null ? _form$json5 : undefined,\n                  validate: (_input$validate4 = input.validate) != null ? _input$validate4 : undefined\n                });\n              },\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 65\n              }\n            });\n          } else if (input.type == \"file\") {\n            var _input$grow4;\n\n            return React.createElement(FormControl, {\n              key: \"input-\" + ind1,\n              style: _objectSpread(_objectSpread({}, classes.m5), {}, {\n                flexGrow: (_input$grow4 = input.grow) != null ? _input$grow4 : 0\n              }),\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 61\n              }\n            }, React.createElement(Button, {\n              variant: \"contained\",\n              component: \"label\",\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 65\n              }\n            }, \"Enviar Arquivo \", React.createElement(\"input\", {\n              type: \"file\",\n              hidden: true,\n              onChange: function onChange(e) {\n                var _input$handle5, _form$json6, _input$validate5;\n\n                return onChangeInputs(e, {\n                  handle: (_input$handle5 = input.handle) != null ? _input$handle5 : undefined,\n                  json: (_form$json6 = form.json) != null ? _form$json6 : undefined,\n                  validate: (_input$validate5 = input.validate) != null ? _input$validate5 : undefined\n                });\n              },\n              onBlur: function onBlur(e) {\n                var _input$handle6, _form$json7, _input$validate6;\n\n                return onChangeInputs(e, {\n                  handle: (_input$handle6 = input.handle) != null ? _input$handle6 : undefined,\n                  json: (_form$json7 = form.json) != null ? _form$json7 : undefined,\n                  validate: (_input$validate6 = input.validate) != null ? _input$validate6 : undefined\n                });\n              },\n              name: input.column,\n              id: input.column,\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 84\n              }\n            })));\n          }\n        }))), React.createElement(CardActionArea, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 37\n          }\n        }, React.createElement(CardActions, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 41\n          }\n        }))));\n      }), React.createElement(Button, {\n        size: \"small\",\n        style: {\n          margin: 5\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          if (formValidate == true) {\n            _this3.props.request(inputValues);\n          } else {\n            _this3.props.setSnackbar({\n              open: open,\n              message: \"Campos inconsistentes, verifique o formulário.\"\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 17\n        }\n      }, \" Salvar\"), React.createElement(Button, {\n        size: \"small\",\n        style: {\n          margin: 5\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          _this3.props.history.goBack();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 17\n        }\n      }, \" Cancelar\"));\n    }\n  }]);\n\n  return LForms;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    snackbar: store.appReducer.snackbar\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setProducts: setProducts,\n    setSnackbar: setSnackbar,\n    setDialog: setDialog,\n    setCart: setCart\n  }, dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LForms));","map":{"version":3,"sources":["C:/Users/Maou/Documents/Projetos/CLIENTES/RNF/client/src/components/Forms/index.js"],"names":["React","Component","Fragment","useState","useRef","connect","bindActionCreators","withRouter","setDialog","setProducts","setCart","setSnackbar","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","TextField","Input","InputLabel","MenuItem","FormHelperText","FormControl","Select","IndeterminateCheckBoxIcon","ptBR","Grid","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","MaskedInput","idNumbers","inputValues","formValidate","onChangeInputs","e","params","value","target","id","name","includes","replace","length","toJSON","split","handle","undefined","request","validate","max","min","required","json","TextMaskCustom","props","inputRef","other","ref","inputElement","onChange","mask","TextInputCustom","setValue","error","setError","handleChange","val","style","helperText","label","DateInput","Date","err","console","log","flexGrow","marginTop","SelectInput","values","column","map","ind","LForms","state","data","filter","classes","m5","margin","root","maxWidth","marginBottom","media","height","forms","form","ifjson","setState","title","alignItems","flexFlow","justifyContent","display","fields","input","ind1","type","grow","flexBasis","validateHandler","open","message","history","goBack","mapStateToProps","store","snackbar","appReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment, useState, useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\nimport { withRouter } from 'react-router-dom'\r\n//\r\n//\r\nimport { setDialog, setProducts } from '../../actions/productActions'\r\nimport { setCart } from '../../actions/cartAction'\r\nimport { setSnackbar } from '../../actions/appActions'\r\n//const classes = useStyles();\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n//\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\r\n\r\nimport ptBR from \"date-fns/locale/pt-BR\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nimport MaskedInput from 'react-text-mask';\r\nconst idNumbers = [\r\n    'cpf', 'cnpj', 'cep'\r\n];\r\n\r\nlet inputValues = {};\r\nlet formValidate = true; \r\nasync function onChangeInputs(e, params = {}) {\r\n    let value = e.target.value;\r\n    let id = e.target.id ?? e.target.name;\r\n\r\n    if (idNumbers.includes(e.target.id)) {\r\n        value = value.replace(/[^\\d]+/g, '');\r\n    }\r\n\r\n    if (value.length == 0 || value == 'Todos') {\r\n        inputValues[id] = '';\r\n    } else {\r\n        if (id == 'created_at') {\r\n            value = `${value.toJSON().split('T')[0]}`\r\n        }\r\n\r\n        if (idNumbers.includes(id)) {\r\n            value = value.replace(/[^\\d]+/g, '');\r\n        }\r\n        if (params.handle !== undefined) {\r\n            let request = await params.handle(value)\r\n            //value = request[id] ?? '';\r\n        }\r\n\r\n        if (params.validate !== undefined) {\r\n            if(params.validate.max !== undefined){\r\n                (value.length <= params.validate.max) ? null : formValidate = false;\r\n            } \r\n            if(params.validate.max !== undefined){\r\n                (value.length <= params.validate.max) ? null : formValidate = false;\r\n            }\r\n            if(params.validate.min !== undefined){\r\n                (value.length >= params.validate.min) ? null : formValidate = false;\r\n            }\r\n            if(params.validate.required !== undefined){\r\n                (value.length <= 0) ? null : formValidate = false;\r\n            }\r\n        }\r\n\r\n        if (params.json === undefined) {\r\n            inputValues[id] = value\r\n            //console.log(params.json);\r\n        } else {\r\n            inputValues[params.json][id] = value;\r\n\r\n        }\r\n        //console.log(inputValues)\r\n    }\r\n}\r\n\r\n// MASKED INPUTS \r\n\r\nfunction TextMaskCustom(props) {\r\n    const { inputRef, ...other } = props;\r\n\r\n    return (\r\n        <MaskedInput\r\n            {...other}\r\n            ref={(ref) => {\r\n                inputRef(ref ? ref.inputElement : null);\r\n            }}\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n            mask={props.mask}\r\n            placeholderChar={'\\u2000'}\r\n\r\n        />\r\n    );\r\n}\r\n\r\n//\r\nfunction TextInputCustom(props) {\r\n    const { inputRef, ...other } = props;\r\n\r\n    const [value, setValue] = useState(\"\");\r\n    const [error, setError] = useState(false);\r\n\r\n    function handleChange(e) {\r\n        const {id} = e.target;\r\n        let val = e.target.value;\r\n        setValue(val);\r\n        if(props.validate !== undefined){\r\n            if(props.validate(val) !== false){\r\n                setError(false);\r\n                formValidate=true;\r\n                props.onChange(e)\r\n            }else{\r\n                setError(true)\r\n            }\r\n        }\r\n    }\r\n    if (props.mask === undefined)\r\n        return (\r\n            <TextField key={`input-${props.id}`} size=\"small\" style={props.style}\r\n                required={props.required ?? false}\r\n                error={error}\r\n                value={value}\r\n                helperText={error ? props.helperText ?? \"conteúdo inválido\" : \"\"}\r\n                id={props.id} label={props.label} \r\n                onChange={handleChange}\r\n                onBlur={handleChange}\r\n            />\r\n        )\r\n    else\r\n        return (\r\n            <FormControl key={`input-${props.id}`} style={props.style} >\r\n                <InputLabel htmlFor={props.id}>{props.label}</InputLabel>\r\n                <Input\r\n                    required={props.required ?? false}\r\n                    size=\"small\"\r\n                    //value={value}\r\n                    error={error}\r\n                    onChange={handleChange}\r\n                    onBlur={handleChange}\r\n                    name={props.name}\r\n                    id={props.id}\r\n                    aria-describedby=\"component-error-text\"\r\n                    inputProps={{\r\n                        mask: props.mask,\r\n                        error, \r\n                        onChange: handleChange,\r\n                        value\r\n                    }}\r\n                    inputComponent={TextMaskCustom}\r\n                />\r\n                {error == true ? (\r\n                    <FormHelperText id=\"component-error-text\">{props.helperText ?? \"conteúdo inválido\"}</FormHelperText>\r\n                ) : ('')}\r\n            </FormControl>)\r\n}\r\n//\r\nconst DateInput = (props) => {\r\n    const [value, setValue] = useState(new Date('2021-02-13'));\r\n    const [error, setError] = useState(false);\r\n    function handleChange(value) {\r\n        try {\r\n            if(props.validate !== undefined){\r\n                if(props.validate(value)){\r\n                    setError(false);\r\n                    formValidate=true;\r\n                    inputValues[props.id] = `${value.toJSON().split('T')[0]}`\r\n                }else{\r\n                    setError(true)\r\n                }\r\n            }\r\n            \r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n        //props.onChange(value);\r\n        setValue(value);\r\n    }\r\n    return (<MuiPickersUtilsProvider utils={DateFnsUtils} locale={ptBR}>\r\n        <Grid justify=\"space-around\" style={{ flexGrow: 0, marginTop: 18 }}>\r\n            <KeyboardDatePicker\r\n                required={props.required ?? false}\r\n                margin=\"normal\"\r\n                id={props.id}\r\n                label={props.label ?? 'Data'}\r\n                error={error}\r\n                helperText={props.error ? props.helperText ?? \"conteúdo inválido\" : \"\"}\r\n                format=\"dd/MM/yyyy\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                onBlur={handleChange}\r\n                KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                }}\r\n            />\r\n        </Grid>\r\n    </MuiPickersUtilsProvider>)\r\n}\r\n//\r\n\r\nconst SelectInput = (props) => {\r\n    const [value, setValue] = useState(props.values[0]);\r\n    const [error, setError] = useState(false);\r\n    function handleChange(e) {\r\n        const {value, id} = e.target;\r\n        if(props.validate !== undefined) {\r\n            if(props.validate(value)){\r\n                setError(false);\r\n                props.onChange(e);\r\n                formValidate=true;\r\n            }else{\r\n                setError(true)\r\n            }\r\n        }\r\n        setValue(e.target.value);\r\n    }\r\n    return (\r\n        <FormControl id={props.column} style={{ ...props.style, marginTop: '25px' }}>\r\n            <InputLabel id={props.column}>{props.label}</InputLabel>\r\n            <Select size=\"small\"\r\n                labelId={props.id}\r\n                id={props.id}\r\n                name={props.name}\r\n                value={value}\r\n                error={error}\r\n                helperText={props.error ? props.helperText ?? \"conteúdo inválido\" : \"\"}\r\n                onChange={handleChange}\r\n                onBlur={handleChange}\r\n            >\r\n                {\r\n                    props.values.map((val, ind) => {\r\n                        return <MenuItem key={`input-${ind}`} value={val}>{val}</MenuItem>\r\n                    })\r\n                }\r\n\r\n            </Select>\r\n        </FormControl>)\r\n}\r\nclass LForms extends Component {\r\n    state = {\r\n        data: [],\r\n        filter: ['flex']\r\n    }\r\n    async componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const classes = {\r\n            m5: {\r\n                margin: 5,\r\n                marginTop: 25,\r\n                //flexBasis: '30%'\r\n\r\n            },\r\n            root: {\r\n                maxWidth: 345,\r\n                marginBottom: 25\r\n            },\r\n            media: {\r\n                height: 140,\r\n            },\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    this.props.forms.map((form, ind) => {\r\n                        let ifjson = {};\r\n                        return (\r\n                            <div>\r\n                                <Card className={classes.root} style={{ marginBottom: 15 }}>\r\n                                    <CardContent>\r\n                                        <Typography onClick={() => {\r\n                                            let filter = this.state.filter;\r\n                                            filter[ind] = this.state.filter[ind] == 'flex' ? 'none' : 'flex'\r\n                                            this.setState({ ...this.state, filter })\r\n                                        }}>\r\n                                            <IndeterminateCheckBoxIcon /> {form.title}\r\n                                        </Typography>\r\n\r\n                                        <div key={`block-${ind}`} id={`data-form-${form.id ?? '1'}`} style={{\r\n                                            alignItems: 'center',\r\n                                            flexFlow: form.flexFlow ?? 'row wrap',\r\n                                            justifyContent: 'start',\r\n                                            display: this.state.filter[ind] ?? 'flex',\r\n                                        }}>\r\n                                            {\r\n\r\n                                                form.fields.map((input, ind1) => {\r\n                                                    ifjson[input.column] = input.value ?? '';\r\n                                                    inputValues[form.json ?? input.column] = form.json == undefined ? input.value ?? '' : ifjson;\r\n                                                    if (input.type == \"text\") {\r\n                                                        return <TextInputCustom  style={{ ...classes.m5, flexGrow: input.grow ?? 0, flexBasis: input.flexBasis ?? '30%' }}\r\n                                                        id={input.column} label={input.label}\r\n                                                        mask={input.mask ?? undefined}\r\n                                                        validate={input.validateHandler}\r\n                                                        helperText={input.helperText ?? \"\"}\r\n                                                        onChange={(e) => onChangeInputs(e, { handle: input.handle ?? undefined, json: form.json ?? undefined, validate: input.validate ?? undefined  })}\r\n                                                        onBlur={(e) => onChangeInputs(e, { handle: input.handle ?? undefined, json: form.json ?? undefined, validate: input.validate ?? undefined  })}/>\r\n\r\n                                                    } else if (input.type == \"date\") {\r\n                                                        return <DateInput helperText={input.helperText ?? \"\"} key={`input-${ind1}`} id={input.column} style={{ ...classes.m5, flexGrow: input.grow ?? 0 }} onChange={(e) => onChangeInputs(e, { handle: input.handle ?? undefined, json: form.json ?? undefined, validate: input.validate ?? undefined  })} />\r\n                                                    } else if (input.type == \"select\") {\r\n                                                        return (<SelectInput helperText={input.helperText ?? \"\"} key={`input-${ind1}`} id={input.column} label={input.label} name={input.column} values={input.values} style={{ ...classes.m5, flexGrow: input.grow ?? 0 }} onChange={(e) => onChangeInputs(e, { handle: input.handle ?? undefined, json: form.json ?? undefined, validate: input.validate ?? undefined  })} />)\r\n                                                    } else if (input.type == \"file\") {\r\n                                                        return (\r\n                                                            <FormControl key={`input-${ind1}`} style={{ ...classes.m5, flexGrow: input.grow ?? 0 }} >\r\n                                                                <Button variant=\"contained\" component=\"label\">\r\n                                                                    Enviar Arquivo <input type=\"file\" hidden\r\n                                                                        onChange={(e) => onChangeInputs(e, { handle: input.handle ?? undefined, json: form.json ?? undefined, validate: input.validate ?? undefined })}\r\n                                                                        onBlur={(e) => onChangeInputs(e, { handle: input.handle ?? undefined, json: form.json ?? undefined, validate: input.validate ?? undefined })}\r\n                                                                        name={input.column}\r\n                                                                        id={input.column}\r\n                                                                    />\r\n                                                                </Button>\r\n                                                            </FormControl>\r\n                                                        )\r\n                                                    }\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    </CardContent>\r\n                                    <CardActionArea>\r\n                                        <CardActions>\r\n                                        </CardActions>\r\n                                    </CardActionArea>\r\n                                </Card>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                <Button size=\"small\" style={{ margin: 5 }} variant=\"contained\" color=\"primary\" onClick={() => { \r\n                    if(formValidate == true){\r\n                        this.props.request(inputValues); \r\n                    }else{\r\n                        this.props.setSnackbar({open: open, message: \"Campos inconsistentes, verifique o formulário.\"});\r\n                    }\r\n                }}> Salvar</Button>\r\n                <Button size=\"small\" style={{ margin: 5 }} variant=\"contained\" color=\"primary\" onClick={() => { this.props.history.goBack(); }} > Cancelar</Button>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = store => ({\r\n    snackbar: store.appReducer.snackbar\r\n});\r\nconst mapDispatchToProps = dispatch =>\r\n    bindActionCreators({ setProducts, setSnackbar, setDialog, setCart }, dispatch);\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LForms))\r\n"]},"metadata":{},"sourceType":"module"}