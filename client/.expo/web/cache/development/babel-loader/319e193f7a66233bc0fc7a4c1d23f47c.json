{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Maou\\\\Documents\\\\Projetos\\\\CLIENTES\\\\RNF\\\\Completo\\\\client\\\\src\\\\pages\\\\Contributors\\\\create\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Paper from '@material-ui/core/Paper';\nimport HomeIcon from '@material-ui/icons/Home';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport LForms from \"../../../components/Forms\";\nimport { setSnackbar } from \"../../../actions/appActions\";\nimport { postApiContributors, getAddressByCepla } from \"../../../providers/api\";\nimport { validaEmail, validaCpf, stringToDate } from \"../../../providers/commonMethods\";\nimport { InputCep, InputCpf, InputPhone } from \"../../../providers/masks\";\nimport { Redirect } from 'react-router-dom';\nimport { withSnackbar } from 'notistack';\n\nvar CreateContributors = function (_Component) {\n  _inherits(CreateContributors, _Component);\n\n  var _super = _createSuper(CreateContributors);\n\n  function CreateContributors() {\n    var _this;\n\n    _classCallCheck(this, CreateContributors);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      contributors: [],\n      states: []\n    };\n    return _this;\n  }\n\n  _createClass(CreateContributors, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var closeSnack = function closeSnack(event, reason) {\n        if (reason === 'clickaway') {\n          return;\n        }\n\n        _this2.props.setSnackbar({\n          open: false,\n          message: \"\"\n        });\n      };\n\n      var request = function request(data) {\n        var response, _response$data$error, errors, messages;\n\n        return _regeneratorRuntime.async(function request$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _regeneratorRuntime.awrap(postApiContributors(data));\n\n              case 2:\n                response = _context2.sent;\n\n                if (response.data.success) {\n                  _this2.props.setSnackbar({\n                    open: true,\n                    message: response.data.message\n                  });\n                } else {\n                  console.log(response);\n                  errors = (_response$data$error = response.data.error) != null ? _response$data$error : undefined;\n                  messages = '';\n\n                  if (errors !== undefined && errors.response !== undefined && errors.response.data.errors !== undefined) {\n                    Object.keys(errors.response.data.errors).map(function (err) {\n                      console.log(err);\n                      messages += \"Campo \" + err.toUpperCase() + \" : \" + errors.response.data.errors[err][0] + \" \\n\";\n                    });\n                  } else {\n                    messages = 'Houve um problema em sua requisição!';\n                  }\n\n                  _this2.props.setSnackbar({\n                    open: true,\n                    messages: messages\n                  });\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      };\n\n      var validateFields = function validateFields(fields, values) {\n        var campo = undefined;\n        fields.reverse().map(function (v, k) {\n          v.fields.map(function (v1, k1) {\n            var value = values[v1.column];\n\n            if (v1.validate !== undefined) {\n              if (v1.validate.number !== undefined) {\n                if (/^[-]?\\d+$/.test(value) == false) campo = {\n                  id: v1.column,\n                  message: \"O Campo \" + v1.label + \" \\xE9 somente n\\xFAmeros \"\n                };\n              }\n\n              if (v1.validate.max !== undefined) {\n                if (value.length > v1.validate.max) campo = {\n                  id: v1.column,\n                  message: \"O Campo \" + v1.label + \", tamanho m\\xE1ximo de \" + v1.validate.max + \" caracteres ex\\xEAdido\"\n                };\n              }\n\n              if (v1.validate.min !== undefined) {\n                if (value.length < v1.validate.min) campo = {\n                  id: v1.column,\n                  message: \"O Campo \" + v1.label + \", tamanho minimo de \" + v1.validate.min + \" caracteres.\"\n                };\n              }\n\n              if (v1.validate.required !== undefined) {\n                if (value.length == 0) campo = {\n                  id: v1.column,\n                  message: \"O Campo \" + v1.label + \" \\xE9 obrigat\\xF3rio\"\n                };\n              }\n            }\n\n            if (value == \"Selecione\") {\n              campo = {\n                id: v1.column,\n                message: \"O Campo \" + v1.label + \" \\xE9 inv\\xE1lido \"\n              };\n            }\n\n            if (v1.validateHandler !== undefined) {\n              if (v1.validateHandler(value) == false) campo = {\n                id: v1.column,\n                message: \"O Campo \" + v1.label + \" n\\xE3o possui um conte\\xFAdo \\xE9 v\\xE1lido \"\n              };\n            }\n          });\n        });\n        campo !== undefined ? _this2.props.setSnackbar({\n          open: true,\n          message: campo.message\n        }) : '';\n        return campo === undefined ? true : false;\n      };\n\n      var flexBasis = '22%';\n      var forms = [{\n        title: 'Dados Básicos',\n        fields: [{\n          column: 'active',\n          label: 'Ativo',\n          type: 'checkbox',\n          value: 1,\n          disabled: true,\n          flexBasis: \"100%\"\n        }, {\n          column: 'cpf',\n          label: 'CPF',\n          type: 'text',\n          mask: InputCpf,\n          validate: {\n            min: 11,\n            number: true,\n            required: true\n          },\n          validateHandler: validaCpf,\n          flexBasis: '12%',\n          helperText: \"o valor digitado é inválido\"\n        }, {\n          column: 'name',\n          label: 'Nome',\n          type: 'text',\n          validate: {\n            max: 50,\n            required: true\n          },\n          flexBasis: flexBasis\n        }, {\n          column: 'birthdate',\n          label: 'Data de Nascimento',\n          type: 'date',\n          validate: {\n            required: true\n          },\n          flexBasis: flexBasis,\n          style: {\n            maxWidth: '210px'\n          }\n        }, {\n          column: 'function',\n          label: 'Função',\n          type: 'select',\n          values: [\"Administração\", \"Coordenador de usuários\", \"Coordenador de parceiros\", \"Gerente\", \"Operador de marketing\", \"Vendedor\"],\n          flexBasis: flexBasis,\n          style: {\n            width: '220px'\n          }\n        }, {\n          column: 'file',\n          label: 'Anexar Documento',\n          type: 'file',\n          flexBasis: flexBasis,\n          style: {\n            maxWidth: '180'\n          }\n        }]\n      }, {\n        id: 'addr',\n        title: 'Endereço',\n        fields: [{\n          column: 'zipcode',\n          label: 'CEP',\n          type: 'text',\n          mask: InputCep,\n          validate: {\n            max: 9,\n            required: true\n          },\n          flexBasis: '9%'\n        }, {\n          column: 'street',\n          label: 'Endereço',\n          validate: {\n            max: 100,\n            required: true\n          },\n          type: 'text',\n          flexBasis: flexBasis\n        }, {\n          column: 'additional',\n          label: 'Complemento',\n          type: 'text',\n          flexBasis: flexBasis\n        }, {\n          column: 'uf',\n          label: 'Estado',\n          type: 'select',\n          values: [\"Acre\", \"Alagoas\", \"Amazonas\", \"Amapá\", \"Bahia\", \"Ceará\", \"Brasília\", \"Espírito Santo\", \"Goiás\", \"Maranhão\", \"Minas Gerais\", \"Mato Grosso do Sul\", \"Mato Grosso\", \"Pará\", \"Paraíba\", \"Pernambuco\", \"Piauí\", \"Paraná\", \"Rio de Janeiro\", \"Rio Grande do Norte\", \"Rondônia\", \"Roraima\", \"Rio Grande do Sul\", \"Santa Catarina\", \"Sergipe\", \"São Paulo\", \"Tocantins\"],\n          flexBasis: flexBasis,\n          style: {\n            minWidth: \"192px\"\n          }\n        }, {\n          column: 'city',\n          label: 'Cidade',\n          type: 'text',\n          validate: {\n            max: 100,\n            required: true\n          },\n          flexBasis: flexBasis\n        }]\n      }, {\n        title: 'Contato',\n        fields: [{\n          column: 'phone1',\n          label: 'Contato',\n          type: 'text',\n          mask: InputPhone,\n          validate: {\n            max: 15,\n            required: true\n          },\n          flexBasis: '20%'\n        }, {\n          column: 'phone2',\n          label: 'Contato alternativo',\n          type: 'text',\n          mask: InputPhone,\n          validate: {\n            max: 15\n          },\n          flexBasis: '20%'\n        }, {\n          column: 'email',\n          label: 'E-mail',\n          type: 'email',\n          validate: {\n            max: 100\n          },\n          validateHandler: validaEmail,\n          flexBasis: '20%'\n        }]\n      }, {\n        title: 'Redes Sociais',\n        fields: [{\n          column: 'linkedin',\n          label: 'Usuário do LinkedIn',\n          type: 'text',\n          validate: {\n            max: 100,\n            required: true\n          },\n          flexBasis: '20%'\n        }, {\n          column: 'facebook',\n          label: 'Usuário do Facebook',\n          type: 'text',\n          validate: {\n            max: 100,\n            required: true\n          },\n          flexBasis: '20%'\n        }, {\n          column: 'instagram',\n          label: 'Usuário do Instagram',\n          type: 'text',\n          validate: {\n            max: 100,\n            required: true\n          },\n          flexBasis: '20%'\n        }]\n      }];\n      return React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }\n      }, React.createElement(AppBar, {\n        position: \"static\",\n        style: {\n          padding: 10,\n          marginTop: 10,\n          marginBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 17\n        }\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }\n      }, React.createElement(HomeIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }\n      }), \"  \", React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 39\n        }\n      }, \"Cadastro / Colaboradores\"))), React.createElement(LForms, {\n        forms: forms,\n        request: request,\n        validate: function validate(values) {\n          return validateFields(forms, values);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return CreateContributors;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    session: store.authReducer.data,\n    snackbar: store.appReducer.snackbar\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setSnackbar: setSnackbar\n  }, dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CreateContributors));","map":{"version":3,"sources":["C:/Users/Maou/Documents/Projetos/CLIENTES/RNF/Completo/client/src/pages/Contributors/create/index.js"],"names":["React","Component","Fragment","connect","bindActionCreators","withRouter","AppBar","Paper","HomeIcon","Typography","Snackbar","LForms","setSnackbar","postApiContributors","getAddressByCepla","validaEmail","validaCpf","stringToDate","InputCep","InputCpf","InputPhone","Redirect","withSnackbar","CreateContributors","state","contributors","states","closeSnack","event","reason","props","open","message","request","data","response","success","console","log","errors","error","undefined","messages","Object","keys","map","err","toUpperCase","validateFields","fields","values","campo","reverse","v","k","v1","k1","value","column","validate","number","test","id","label","max","length","min","required","validateHandler","flexBasis","forms","title","type","disabled","mask","helperText","style","maxWidth","width","minWidth","padding","marginTop","marginBottom","mapStateToProps","store","session","authReducer","snackbar","appReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport LForms from '../../../components/Forms';\r\n//\r\nimport { setSnackbar } from '../../../actions/appActions'\r\nimport { postApiContributors, getAddressByCepla } from '../../../providers/api'\r\nimport { validaEmail, validaCpf, stringToDate } from '../../../providers/commonMethods'\r\n\r\nimport { InputCep, InputCpf, InputPhone } from '../../../providers/masks'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { withSnackbar  } from 'notistack';\r\nclass CreateContributors extends Component {\r\n    \r\n    state = {\r\n        contributors: [],\r\n        states: []\r\n    }\r\n    async componentDidMount() {\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        \r\n         // to use snackbar Provider\r\n        const closeSnack = (event, reason) => {\r\n            if (reason === 'clickaway') {\r\n                return;\r\n            }\r\n            this.props.setSnackbar({ open: false, message: \"\" });\r\n        };\r\n        \r\n        const request = async (data) => {\r\n            //data = Object.assign({},state.addresses,data);\r\n            //data = Object.assign({},state.contacts,data);\r\n            //data = Object.assign({},state,data);\r\n            //delete data.addresses;\r\n           // delete data.contacts;\r\n\r\n            let response = await postApiContributors(data);\r\n            //console.log(response);\r\n            if (response.data.success) {\r\n                //this.props.enqueueSnackbar( response.data.message, { variant: 'success' });\r\n                this.props.setSnackbar({ open: true, message: response.data.message });\r\n                //this.props.history.goBack();\r\n            } else {\r\n                console.log(response)\r\n                let errors = response.data.error ?? undefined;\r\n\r\n                //let { errors } = response.data.error.response.data ?? {error: undefined}\r\n                let messages = '';\r\n                if(errors !== undefined && errors.response !== undefined  && errors.response.data.errors !== undefined){\r\n                    Object.keys(errors.response.data.errors).map(err => {\r\n                        console.log(err);\r\n                        messages += `Campo ${err.toUpperCase()} : ${errors.response.data.errors[err][0]} \\n`;\r\n                    })\r\n                } else{\r\n                    messages = 'Houve um problema em sua requisição!'\r\n                }\r\n                //response.data.error.response.data.errors\r\n                //this.props.enqueueSnackbar( message, { variant: 'error' });\r\n                this.props.setSnackbar({ open: true, messages});\r\n            }\r\n\r\n        }\r\n        const validateFields = (fields, values) => {\r\n            //console.log(fields);\r\n            let campo = undefined;\r\n            fields.reverse().map((v,k) => {\r\n                v.fields.map((v1,k1)=>{\r\n                        let value = values[v1.column];\r\n                        if (v1.validate !== undefined) {\r\n                            if (v1.validate.number !== undefined) {\r\n                                if (/^[-]?\\d+$/.test(value) == false)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label} é somente números ` }\r\n                            }\r\n\r\n                            if (v1.validate.max !== undefined) {\r\n                                if (value.length > v1.validate.max)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label}, tamanho máximo de ${v1.validate.max} caracteres exêdido` };\r\n                            }\r\n\r\n                            if (v1.validate.min !== undefined) {\r\n                                if (value.length < v1.validate.min)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label}, tamanho minimo de ${v1.validate.min} caracteres.` };\r\n                            }\r\n\r\n                            if (v1.validate.required !== undefined) {\r\n                                if (value.length == 0)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label} é obrigatório` };\r\n                            }\r\n                        }\r\n                        if(value == \"Selecione\"){\r\n                            campo = {id: v1.column, message: `O Campo ${v1.label} é inválido ` }\r\n                        }\r\n                        if(v1.validateHandler !== undefined){\r\n                            if (v1.validateHandler(value) == false)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label} não possui um conteúdo é válido ` }\r\n                        }\r\n                    })\r\n                })\r\n                //console.log(campo)\r\n                campo !== undefined ? this.props.setSnackbar({ open: true, message: campo.message}) : '';\r\n\r\n                return campo === undefined ? true : false\r\n        }\r\n        const flexBasis = '22%';\r\n        const forms = [\r\n            {\r\n                title: 'Dados Básicos',\r\n                fields: [\r\n                    { column: 'active', label: 'Ativo', type: 'checkbox',  value: 1, disabled: true, flexBasis : \"100%\" },\r\n                    { column: 'cpf', label: 'CPF', type: 'text', mask: InputCpf, validate: {min: 11, number: true, required: true},validateHandler: validaCpf, flexBasis: '12%', helperText: \"o valor digitado é inválido\" },\r\n                    { column: 'name', label: 'Nome', type: 'text', validate: {max: 50, required: true}, flexBasis },\r\n                    { column: 'birthdate', label: 'Data de Nascimento', type: 'date', validate: {required: true},flexBasis, style:{maxWidth: '210px'} },\r\n                    {\r\n                        column: 'function', label: 'Função', type: 'select',\r\n                        values: [\r\n                            \"Administração\",\r\n                            \"Coordenador de usuários\", \r\n                            \"Coordenador de parceiros\", \r\n                            \"Gerente\", \r\n                            \"Operador de marketing\", \r\n                            \"Vendedor\"\r\n                        ],\r\n                        //value: \"Coordenador de usuários\",\r\n                        flexBasis, style:{width: '220px'}\r\n                    },\r\n                    { column: 'file', label: 'Anexar Documento', type: 'file', flexBasis, style:{maxWidth: '180'} },\r\n                    //\r\n                    //{ column: 'created_at', label: 'Data', type: 'date' },\r\n                ]\r\n            },\r\n            {\r\n                id: 'addr',\r\n                title: 'Endereço',\r\n                //flexFlow: 'row no-wrap',\r\n                //json: \"address\",\r\n                fields: [\r\n                    {\r\n                        column: 'zipcode', label: 'CEP', type: 'text', mask: InputCep, validate: {max: 9, required: true}, flexBasis: '9%',\r\n                        //handle: getAddress \r\n                    },\r\n                    { column: 'street', label: 'Endereço', validate: {max: 100, required: true}, type: 'text', flexBasis },\r\n                    { column: 'additional', label: 'Complemento', type: 'text', flexBasis },\r\n                    {\r\n                        column: 'uf', label: 'Estado', type: 'select',\r\n                        values: [\"Acre\", \"Alagoas\", \"Amazonas\", \"Amapá\", \"Bahia\", \"Ceará\", \"Brasília\", \"Espírito Santo\", \"Goiás\", \"Maranhão\", \"Minas Gerais\", \"Mato Grosso do Sul\", \"Mato Grosso\", \"Pará\", \"Paraíba\", \"Pernambuco\", \"Piauí\", \"Paraná\", \"Rio de Janeiro\", \"Rio Grande do Norte\", \"Rondônia\", \"Roraima\", \"Rio Grande do Sul\", \"Santa Catarina\", \"Sergipe\", \"São Paulo\", \"Tocantins\"],\r\n                        flexBasis, style:{minWidth: \"192px\"}\r\n                    },\r\n                    { column: 'city', label: 'Cidade', type: 'text', validate: {max: 100, required: true}, flexBasis },\r\n                ]\r\n            },\r\n            {\r\n                title: 'Contato',\r\n                //json: 'contact',\r\n                fields: [\r\n                    { column: 'phone1', label: 'Contato', type: 'text', mask: InputPhone, validate: {max: 15, required: true}, flexBasis: '20%' },\r\n                    { column: 'phone2', label: 'Contato alternativo', type: 'text', mask: InputPhone, validate: {max: 15}, flexBasis: '20%' },\r\n                    { column: 'email', label: 'E-mail', type: 'email', validate: {max: 100}, validateHandler: validaEmail, flexBasis: '20%' },\r\n                ]\r\n            },\r\n            {\r\n                title: 'Redes Sociais',\r\n                //json: 'contact',\r\n                fields: [\r\n                    { column: 'linkedin', label: 'Usuário do LinkedIn', type: 'text', validate: {max: 100, required: true}, flexBasis: '20%' },\r\n                    { column: 'facebook', label: 'Usuário do Facebook', type: 'text', validate: {max: 100, required: true}, flexBasis: '20%' },\r\n                    { column: 'instagram', label: 'Usuário do Instagram', type: 'text', validate: {max: 100, required: true}, flexBasis: '20%' },\r\n                ]\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <Fragment>\r\n                <AppBar position=\"static\" style={{ padding: 10, marginTop: 10, marginBottom: 10 }}>\r\n                    <Typography variant=\"h6\">\r\n                        <HomeIcon />  <span>Cadastro / Colaboradores</span>\r\n                    </Typography>\r\n                </AppBar>\r\n                <LForms forms={forms}\r\n                    request={request} \r\n                    validate={(values) => { return validateFields(forms,values)}}\r\n                />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = store => ({\r\n    session: store.authReducer.data,\r\n    snackbar: store.appReducer.snackbar\r\n});\r\nconst mapDispatchToProps = dispatch =>\r\n    bindActionCreators({ setSnackbar }, dispatch);\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CreateContributors))\r\n"]},"metadata":{},"sourceType":"module"}