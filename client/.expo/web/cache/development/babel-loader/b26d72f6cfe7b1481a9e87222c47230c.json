{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Maou\\\\Documents\\\\Projetos\\\\CLIENTES\\\\RNF\\\\Completo\\\\client\\\\src\\\\components\\\\List\\\\datagrid.js\",\n    _this = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, Fragment, useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { DataGrid, RowsProp, ColDef } from '@material-ui/data-grid';\nimport { setSnackbar } from \"../../actions/appActions\";\nimport { DEFAULT_LOCALE_TEXT } from \"../../providers/langs/datagrid\";\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport IconButton from '@material-ui/core/IconButton';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ReorderIcon from '@material-ui/icons/Reorder';\nimport ptBR from \"date-fns/locale/pt-BR\";\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport { validaCpf } from \"../../providers/commonMethods\";\nvar idNumbers = ['cpf', 'cnpj'];\n\nfunction TextMaskCustom(props) {\n  var inputRef = props.inputRef,\n      other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return React.createElement(MaskedInput, _extends({}, other, {\n    ref: function ref(_ref) {\n      inputRef(_ref ? _ref.inputElement : null);\n    },\n    value: props.value,\n    mask: props.mask,\n    placeholderChar: \"\\u2000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }));\n}\n\nvar DateInput = function DateInput(props) {\n  var valueDate = new Date(props.value);\n\n  var _useState = useState(props.value),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  function handleChange(e) {\n    setValue(e.target.value);\n    console.log(e.target.value);\n    var value = e.target.value.split('/');\n    value = {\n      target: {\n        id: e.target.id,\n        value: value[2] + \"-\" + value[1] + \"-\" + value[0],\n        type: 'text'\n      }\n    };\n\n    try {\n      if (props.validate !== undefined) {\n        if (props.validate(value)) {\n          setError(false);\n        } else {\n          setError(true);\n        }\n      }\n\n      props.onChange(value);\n    } catch (err) {}\n  }\n\n  return React.createElement(FormControl, {\n    style: _objectSpread(_objectSpread({}, props.style), {}, {\n      marginTop: 20\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, React.createElement(InputLabel, {\n    htmlFor: \"formatted-text-mask-input\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, props.label), React.createElement(Input, {\n    value: value,\n    onChange: handleChange,\n    onFocus: function onFocus(e) {\n      if (e.target.value.length == 0) {\n        e.target.setSelectionRange(0, e.target.value.length);\n      }\n    },\n    name: props.column,\n    id: props.column,\n    inputProps: {\n      mask: [/[0-9]/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/]\n    },\n    inputComponent: TextMaskCustom,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar SelectInput = function SelectInput(props) {\n  var _useState5 = useState(props.values[0]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      value = _useState6[0],\n      setValue = _useState6[1];\n\n  function handleChange(e) {\n    props.onBlur(e);\n    setValue(e.target.value);\n  }\n\n  return React.createElement(FormControl, {\n    id: props.column,\n    style: _objectSpread(_objectSpread({}, props.style), {}, {\n      marginTop: '25px'\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, React.createElement(InputLabel, {\n    id: props.column,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, props.label), React.createElement(Select, {\n    labelId: props.id,\n    id: props.id,\n    name: props.name,\n    value: props.value,\n    onChange: handleChange,\n    onBlur: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, props.values.map(function (val) {\n    return React.createElement(MenuItem, {\n      value: val,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 32\n      }\n    }, val);\n  })));\n};\n\nvar StyledDataGrid = withStyles({\n  root: {\n    '& div.MuiDataGrid-root .MuiDataGrid-viewport': {\n      width: \"600px\",\n      background: \"blue\"\n    }\n  }\n})(DataGrid);\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      \"& div.react-grid-Container\": {\n        color: \"red\"\n      }\n    }\n  };\n});\n\nvar LDataGrid = function (_Component) {\n  _inherits(LDataGrid, _Component);\n\n  var _super = _createSuper(LDataGrid);\n\n  function LDataGrid() {\n    var _this2$props$autoload;\n\n    var _this2;\n\n    _classCallCheck(this, LDataGrid);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.state = {\n      data: [],\n      filters: {},\n      page: 1,\n      filter: 'flex',\n      loading: true,\n      firstLoad: (_this2$props$autoload = _this2.props.autoload) != null ? _this2$props$autoload : true\n    };\n    return _this2;\n  }\n\n  _createClass(LDataGrid, [{\n    key: \"setPage\",\n    value: function setPage() {\n      var params,\n          cleanfilters,\n          query,\n          data,\n          _args = arguments;\n      return _regeneratorRuntime.async(function setPage$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              params = _args.length > 0 && _args[0] !== undefined ? _args[0] : {\n                page: 1\n              };\n              this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n                loading: true\n              }));\n              cleanfilters = {};\n              Object.entries(this.state.filters).map(function (item) {\n                if (item[1].length >= 1) {\n                  if (item[1] !== \"Todos\") {\n                    cleanfilters[item[0]] = item[1];\n                    console.log(item);\n                  }\n                }\n              });\n              query = _extends({\n                queryType: 'like',\n                withId: \"name\",\n                page: params.page\n              }, cleanfilters);\n              console.log(query);\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(this.props.pageRequest(query));\n\n            case 8:\n              data = _context.sent;\n\n              if (data !== undefined) {\n                this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n                  data: data,\n                  loading: false\n                }));\n              }\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props$filterInp;\n\n      var filters;\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              filters = {};\n              (_this$props$filterInp = !this.props.filterInputs) != null ? _this$props$filterInp : this.props.filterInputs.map(function (input) {\n                var _input$value;\n\n                filters[input.column] = (_input$value = input.value) != null ? _input$value : \"\";\n              });\n              this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n                filters: filters\n              }));\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this,\n          _this$state$data$data,\n          _this$state$data$tota;\n\n      var classes = {\n        m5: {\n          margin: 5,\n          marginTop: 25\n        },\n        root: {\n          maxWidth: 345,\n          marginBottom: 25\n        },\n        media: {\n          height: 140\n        }\n      };\n      var filters = this.state.filters;\n\n      var onChangeInputs = function onChangeInputs(e) {\n        var value = e.target.value;\n\n        if (idNumbers.includes(e.target.id)) {\n          value = value.replace(/[^\\d]+/g, '');\n        }\n\n        if (value.length == 0) {\n          var _e$target$id;\n\n          delete filters[(_e$target$id = e.target.id) != null ? _e$target$id : e.target.name];\n        } else {\n          var _e$target$id2;\n\n          if (e.target.id == 'created_at') {}\n\n          if (e.target.id == 'nome') {}\n\n          if (idNumbers.includes(e.target.id)) {\n            value = value.replace(/[^\\d]+/g, '');\n          }\n\n          filters[(_e$target$id2 = e.target.id) != null ? _e$target$id2 : e.target.name] = value;\n\n          _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n            filters: filters\n          }));\n        }\n      };\n\n      var onClearFilter = function onClearFilter() {\n        var filters = {};\n\n        _this3.props.filterInputs.map(function (input) {\n          var _input$value2;\n\n          filters[input.column] = (_input$value2 = input.value) != null ? _input$value2 : \"\";\n        });\n\n        _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n          filters: filters\n        }));\n      };\n\n      var rows = (_this$state$data$data = this.state.data.data) != null ? _this$state$data$data : [];\n      var columns = this.props.columns;\n      return React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }\n      }, this.props.filterInputs == undefined ? '' : React.createElement(Card, {\n        className: classes.root,\n        style: {\n          marginBottom: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 22\n        }\n      }, React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }\n      }, React.createElement(Typography, {\n        onClick: function onClick() {\n          _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n            filter: _this3.state.filter == 'none' ? 'flex' : 'none'\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 29\n        }\n      }, React.createElement(FilterListIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 33\n        }\n      }), \" Filtros\"), React.createElement(\"div\", {\n        id: \"filter-form\",\n        style: {\n          alignItems: 'start',\n          flexFlow: 'row wrap',\n          justifyContent: 'space-between',\n          display: this.state.filter\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 29\n        }\n      }, this.props.filterInputs.map(function (input) {\n        if (input.type == \"text\") {\n          var _this3$state$filters$, _input$grow, _input$flexBasis, _input$grow2, _this3$state$filters$2, _this3$state$filters$3;\n\n          if (input.mask === undefined) return React.createElement(TextField, {\n            value: (_this3$state$filters$ = _this3.state.filters[input.column]) != null ? _this3$state$filters$ : \"\",\n            style: _objectSpread(_objectSpread({}, classes.m5), {}, {\n              flexGrow: (_input$grow = input.grow) != null ? _input$grow : 0,\n              flexBasis: (_input$flexBasis = input.flexBasis) != null ? _input$flexBasis : '30%'\n            }),\n            id: input.column,\n            label: input.label,\n            onChange: onChangeInputs,\n            onBlur: onChangeInputs,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 56\n            }\n          });else return React.createElement(FormControl, {\n            style: _objectSpread(_objectSpread({}, classes.m5), {}, {\n              flexGrow: (_input$grow2 = input.grow) != null ? _input$grow2 : 0\n            }),\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 53\n            }\n          }, React.createElement(InputLabel, {\n            htmlFor: \"formatted-text-mask-input\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 57\n            }\n          }, input.label), React.createElement(Input, {\n            value: (_this3$state$filters$2 = _this3.state.filters[input.column]) != null ? _this3$state$filters$2 : \"\",\n            onChange: onChangeInputs,\n            onFocus: function onFocus(e) {\n              if (e.target.value.length == 0) {\n                e.target.setSelectionRange(0, e.target.value.length);\n              }\n            },\n            name: input.column,\n            id: input.column,\n            value: (_this3$state$filters$3 = _this3.state.filters[input.column]) != null ? _this3$state$filters$3 : \"\",\n            inputProps: {\n              mask: input.mask\n            },\n            inputComponent: TextMaskCustom,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 57\n            }\n          }));\n        } else if (input.type == \"date\") {\n          var _this3$state$filters$4, _input$grow3;\n\n          return React.createElement(DateInput, {\n            id: input.column,\n            value: (_this3$state$filters$4 = _this3.state.filters[input.column]) != null ? _this3$state$filters$4 : \"\",\n            label: input.label,\n            style: _objectSpread(_objectSpread({}, classes.m5), {}, {\n              flexGrow: (_input$grow3 = input.grow) != null ? _input$grow3 : 0\n            }),\n            onBlur: onChangeInputs,\n            onChange: onChangeInputs,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 52\n            }\n          });\n        } else if (input.type == \"select\") {\n          var _this3$state$filters$5, _input$grow4;\n\n          return React.createElement(SelectInput, {\n            id: input.column,\n            label: input.label,\n            name: input.column,\n            value: (_this3$state$filters$5 = _this3.state.filters[input.column]) != null ? _this3$state$filters$5 : \"\",\n            values: input.values,\n            style: _objectSpread(_objectSpread({}, classes.m5), {}, {\n              flexGrow: (_input$grow4 = input.grow) != null ? _input$grow4 : 1\n            }),\n            onBlur: onChangeInputs,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 53\n            }\n          });\n        }\n      }), React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 33\n        }\n      }, React.createElement(Button, {\n        size: \"small\",\n        style: {\n          margin: 5\n        },\n        startIcon: React.createElement(SearchIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 91\n          }\n        }),\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          _this3.setPage(_this3.state.filters);\n\n          _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n            firstLoad: false\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 37\n        }\n      }, \" Pesquisar\"), React.createElement(Button, {\n        size: \"small\",\n        style: {\n          margin: 5\n        },\n        startIcon: React.createElement(ReorderIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 91\n          }\n        }),\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          onClearFilter();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 37\n        }\n      }, \" Limpar\"))))), React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 17\n        }\n      }, React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 21\n        }\n      }, !this.state.firstLoad && React.createElement(\"div\", {\n        style: {\n          height: 700,\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 29\n        }\n      }, React.createElement(DataGrid, {\n        sx: {\n          '& .MuiDataGrid-root': {\n            '& .MuiDataGrid-viewport': {\n              maxWidth: '600px'\n            }\n          }\n        },\n        rows: rows,\n        columns: columns,\n        spacing: 0,\n        stickyHeader: true,\n        sortModel: this.props.sortModel,\n        disableClickEventBubbling: true,\n        disableColumnMenu: true,\n        loading: this.state.loading,\n        localeText: DEFAULT_LOCALE_TEXT,\n        paginationMode: \"server\",\n        rowCount: (_this$state$data$tota = this.state.data.total) != null ? _this$state$data$tota : 0,\n        pageSize: 10,\n        rowsPerPageOptions: [10],\n        pagination: true,\n        onPageChange: function onPageChange(params) {\n          var filters = _extends({}, _this3.state.filters, {\n            page: params.page,\n            pageSize: params.pageSize\n          });\n\n          _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n            filters: filters\n          }));\n\n          _this3.setPage(filters);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 33\n        }\n      }))), React.createElement(CardActionArea, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 21\n        }\n      }), React.createElement(CardActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return LDataGrid;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setSnackbar: setSnackbar\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LDataGrid);","map":{"version":3,"sources":["C:/Users/Maou/Documents/Projetos/CLIENTES/RNF/Completo/client/src/components/List/datagrid.js"],"names":["React","Component","Fragment","useState","useRef","connect","bindActionCreators","DataGrid","RowsProp","ColDef","setSnackbar","DEFAULT_LOCALE_TEXT","makeStyles","withStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","TextField","Input","InputLabel","MenuItem","FormHelperText","FormControl","Select","IconButton","FilterListIcon","SearchIcon","ReorderIcon","ptBR","Grid","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","PropTypes","MaskedInput","validaCpf","idNumbers","TextMaskCustom","props","inputRef","other","ref","inputElement","value","mask","DateInput","valueDate","Date","setValue","error","setError","handleChange","e","target","console","log","split","id","type","validate","undefined","onChange","err","style","marginTop","label","length","setSelectionRange","column","SelectInput","values","onBlur","name","map","val","StyledDataGrid","root","width","background","useStyles","theme","color","LDataGrid","state","data","filters","page","filter","loading","firstLoad","autoload","params","setState","cleanfilters","Object","entries","item","query","queryType","withId","pageRequest","filterInputs","input","classes","m5","margin","maxWidth","marginBottom","media","height","onChangeInputs","includes","replace","onClearFilter","rows","columns","alignItems","flexFlow","justifyContent","display","flexGrow","grow","flexBasis","setPage","sortModel","total","pageSize","mapStateToProps","store","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment, useState, useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\n//\r\nimport { DataGrid, RowsProp, ColDef } from '@material-ui/data-grid';\r\n//\r\nimport { setSnackbar } from '../../actions/appActions'\r\nimport { DEFAULT_LOCALE_TEXT } from '../../providers/langs/datagrid'\r\n//const classes = useStyles();\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n//\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ReorderIcon from '@material-ui/icons/Reorder';\r\n\r\nimport ptBR from \"date-fns/locale/pt-BR\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport MaskedInput from 'react-text-mask';\r\n\r\n// VALIDATORS\r\n\r\nimport { validaCpf } from '../../providers/commonMethods'\r\n//\r\n\r\n//const [valus, setValues] = useState(new Date('2021-02-13'));\r\nconst idNumbers = [\r\n    'cpf', 'cnpj'\r\n];\r\n// MASKED INPUTS \r\n\r\nfunction TextMaskCustom(props) {\r\n    const { inputRef, ...other } = props;\r\n\r\n    return (\r\n        <MaskedInput\r\n            {...other}\r\n            ref={(ref) => {\r\n                inputRef(ref ? ref.inputElement : null);\r\n            }}\r\n            value={props.value}\r\n            mask={props.mask}\r\n            placeholderChar={'\\u2000'}\r\n\r\n        />\r\n    );\r\n}\r\n\r\n\r\n//\r\nconst DateInput = (props) => {\r\n    let valueDate = new Date(props.value)\r\n    const [value, setValue] = useState(props.value);\r\n    const [error, setError] = useState(false);\r\n    function handleChange(e) {\r\n        setValue(e.target.value);\r\n        console.log(e.target.value)\r\n        let value = e.target.value.split('/');\r\n        value =  {target: {id: e.target.id, value: `${value[2]}-${value[1]}-${value[0]}`, type: 'text'}};\r\n        try {\r\n            //let e = { target: { id: props.id, value: `${selectvalue.toJSON().split('T')[0]}` } }\r\n            if (props.validate !== undefined) {\r\n                if (props.validate(value)) {\r\n                    setError(false);\r\n                } else {\r\n                    setError(true)\r\n                }\r\n            }\r\n            props.onChange(value)\r\n\r\n        } catch (err) {\r\n            //console.log(err);\r\n        }\r\n        //props.onChange(value);\r\n\r\n    }\r\n    return (\r\n        <FormControl style={{ ...props.style, marginTop: 20 }} >\r\n            <InputLabel htmlFor=\"formatted-text-mask-input\">{props.label}</InputLabel>\r\n            <Input\r\n                value={value}\r\n                onChange={handleChange}\r\n                onFocus={(e) => {\r\n                    if (e.target.value.length == 0) {\r\n                        //alert(e.target.value);\r\n                        e.target.setSelectionRange(0, e.target.value.length)\r\n                    }\r\n                }}\r\n                name={props.column}\r\n                id={props.column}\r\n                inputProps={{\r\n                    mask: [/[0-9]/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/,/\\d/]\r\n                }}\r\n                inputComponent={TextMaskCustom}\r\n            />\r\n        </FormControl>\r\n        /*<form noValidate style={{ ...props.style, marginTop: 20 }} >\r\n            <TextField\r\n                style={{width: '100%'}} \r\n                id={props.id}\r\n                label={props.label ?? 'Data'}\r\n                type=\"date\"\r\n                defaultValue={value}\r\n                onChange={handleChange}\r\n                onBlur={handleChange}\r\n                error={error}\r\n                helperText={error == true ? props.helperText ?? \"Data inválida\" : \"\"}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n        </form>*/\r\n    );\r\n}\r\n//\r\n\r\nconst SelectInput = (props) => {\r\n    const [value, setValue] = useState(props.values[0]);\r\n    function handleChange(e) {\r\n        props.onBlur(e)\r\n        setValue(e.target.value);\r\n    }\r\n    return (\r\n        <FormControl id={props.column} style={{ ...props.style, marginTop: '25px' }}>\r\n            <InputLabel id={props.column}>{props.label}</InputLabel>\r\n            <Select\r\n                labelId={props.id}\r\n                id={props.id}\r\n                name={props.name}\r\n                value={props.value}\r\n                onChange={handleChange}\r\n                onBlur={handleChange}\r\n            >\r\n                {\r\n                    props.values.map(val => {\r\n                        return <MenuItem value={val}>{val}</MenuItem>\r\n                    })\r\n                }\r\n\r\n            </Select>\r\n        </FormControl>)\r\n}\r\nconst StyledDataGrid = withStyles({\r\n    root: {\r\n        '& div.MuiDataGrid-root .MuiDataGrid-viewport': {\r\n            width: \"600px\",\r\n            background: \"blue\"\r\n        },\r\n    }\r\n})(DataGrid);\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        \"& div.react-grid-Container\": {\r\n            color: \"red\",\r\n            // color: theme.palette.text.color\r\n        }\r\n    }\r\n}));\r\nclass LDataGrid extends Component {\r\n    state = {\r\n        data: [],\r\n        filters: {},\r\n        page: 1,\r\n        filter: 'flex',\r\n        loading: true,\r\n        firstLoad: this.props.autoload ?? true\r\n    }\r\n    async setPage(params = { page: 1 }) {\r\n        this.setState({ ...this.state, loading: true })\r\n        let cleanfilters = {};\r\n        Object.entries(this.state.filters).map((item) => {\r\n            if (item[1].length >= 1) {\r\n                if (item[1] !== \"Todos\") {\r\n                    cleanfilters[item[0]] = item[1];\r\n                    console.log(item);\r\n                }\r\n            }\r\n        });\r\n\r\n        let query = Object.assign({ queryType: 'like', withId: \"name\", page: params.page }, cleanfilters);\r\n        console.log(query);\r\n        const data = await this.props.pageRequest(query);\r\n        if (data !== undefined) {\r\n            this.setState({ ...this.state, data, loading: false })\r\n        }\r\n\r\n    }\r\n    async componentDidMount() {\r\n        //this.setPage();\r\n        let filters = {};\r\n        !this.props.filterInputs ?? this.props.filterInputs.map(input => {\r\n            filters[input.column] = input.value ?? \"\";\r\n        });\r\n\r\n        this.setState({ ...this.state, filters });\r\n\r\n    }\r\n\r\n    render() {\r\n        const classes = {\r\n            m5: {\r\n                margin: 5,\r\n                marginTop: 25,\r\n                //flexBasis: '30%'\r\n\r\n            },\r\n            root: {\r\n                maxWidth: 345,\r\n                marginBottom: 25\r\n            },\r\n            media: {\r\n                height: 140,\r\n            },\r\n        }\r\n        let filters = this.state.filters;\r\n        const onChangeInputs = (e) => {\r\n            let value = e.target.value;\r\n            if (idNumbers.includes(e.target.id)) {\r\n                value = value.replace(/[^\\d]+/g, '');\r\n            }\r\n            if (value.length == 0) {\r\n                delete filters[e.target.id ?? e.target.name];\r\n            } else {\r\n                if (e.target.id == 'created_at') {\r\n                    //value = `${value.toJSON().split('T')[0]}`\r\n                }\r\n                if (e.target.id == 'nome') {\r\n                    //filters[\"withId\"] = \"name\"\r\n                }\r\n                if (idNumbers.includes(e.target.id)) {\r\n                    value = value.replace(/[^\\d]+/g, '');\r\n                }\r\n                filters[e.target.id ?? e.target.name] = value\r\n                this.setState({ ...this.state, filters });\r\n            }\r\n        }\r\n\r\n        const onClearFilter = () => {\r\n            let filters = {};\r\n            this.props.filterInputs.map(input => {\r\n                filters[input.column] = input.value ?? \"\";\r\n            });\r\n\r\n            this.setState({ ...this.state, filters });\r\n        }\r\n        const rows: RowsProp = this.state.data.data ?? [];\r\n\r\n        const columns: ColDef[] = this.props.columns;\r\n        return (\r\n            <div>\r\n                {this.props.filterInputs == undefined ? ('') :\r\n                    (<Card className={classes.root} style={{ marginBottom: 15 }}>\r\n                        <CardContent>\r\n                            <Typography onClick={() => {\r\n                                this.setState({ ...this.state, filter: this.state.filter == 'none' ? 'flex' : 'none' })\r\n                            }}>\r\n                                <FilterListIcon /> Filtros\r\n                    </Typography>\r\n\r\n                            <div id=\"filter-form\" style={{\r\n                                alignItems: 'start',\r\n                                flexFlow: 'row wrap',\r\n                                justifyContent: 'space-between',\r\n                                display: this.state.filter,\r\n                            }}>\r\n                                {\r\n                                    this.props.filterInputs.map(input => {\r\n                                        if (input.type == \"text\") {\r\n                                            if (input.mask === undefined)\r\n                                                return <TextField value={this.state.filters[input.column] ?? \"\"} style={{ ...classes.m5, flexGrow: input.grow ?? 0, flexBasis: input.flexBasis ?? '30%' }} id={input.column} label={input.label} onChange={onChangeInputs} onBlur={onChangeInputs} />\r\n                                            else\r\n                                                return (\r\n                                                    <FormControl style={{ ...classes.m5, flexGrow: input.grow ?? 0 }} >\r\n                                                        <InputLabel htmlFor=\"formatted-text-mask-input\">{input.label}</InputLabel>\r\n                                                        <Input\r\n                                                            value={this.state.filters[input.column] ?? \"\"}\r\n                                                            onChange={onChangeInputs}\r\n                                                            onFocus={(e) => {\r\n                                                                if (e.target.value.length == 0) {\r\n                                                                    //alert(e.target.value);\r\n                                                                    e.target.setSelectionRange(0, e.target.value.length)\r\n                                                                }\r\n                                                            }}\r\n                                                            name={input.column}\r\n                                                            id={input.column}\r\n                                                            value={this.state.filters[input.column] ?? \"\"}\r\n                                                            inputProps={{\r\n                                                                mask: input.mask\r\n                                                            }}\r\n                                                            inputComponent={TextMaskCustom}\r\n                                                        />\r\n                                                    </FormControl>)\r\n\r\n                                        } else if (input.type == \"date\") {\r\n                                            return <DateInput id={input.column} value={this.state.filters[input.column] ?? \"\"} label={input.label} style={{ ...classes.m5, flexGrow: input.grow ?? 0 }} onBlur={onChangeInputs} onChange={onChangeInputs} />\r\n                                        } else if (input.type == \"select\") {\r\n                                            return (<SelectInput id={input.column} label={input.label} name={input.column} value={this.state.filters[input.column] ?? \"\"} values={input.values} style={{ ...classes.m5, flexGrow: input.grow ?? 1 }} onBlur={onChangeInputs} />)\r\n                                        }\r\n                                    })\r\n                                }\r\n                                <div>\r\n                                    <Button size=\"small\" style={{ margin: 5 }} startIcon={<SearchIcon />} variant=\"contained\" color=\"primary\" onClick={() => { this.setPage(this.state.filters); this.setState({ ...this.state, firstLoad: false }) }}> Pesquisar</Button>\r\n                                    <Button size=\"small\" style={{ margin: 5 }} startIcon={<ReorderIcon />} variant=\"contained\" color=\"primary\" onClick={() => { onClearFilter() }} > Limpar</Button>\r\n                                </div>\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>)}\r\n\r\n                <Card>\r\n                    <CardContent>\r\n                        {!this.state.firstLoad &&\r\n                            <div style={{ height: 700, width: '100%' }}>\r\n                                <DataGrid\r\n                                    sx={{\r\n                                        '& .MuiDataGrid-root': {\r\n                                            '& .MuiDataGrid-viewport': {\r\n                                                maxWidth: '600px',\r\n                                            },\r\n                                        }\r\n                                    }}\r\n                                    rows={rows} columns={columns}\r\n                                    spacing={0}\r\n                                    stickyHeader\r\n                                    sortModel={this.props.sortModel}\r\n                                    disableClickEventBubbling\r\n                                    disableColumnMenu={true}\r\n                                    loading={this.state.loading}\r\n                                    localeText={DEFAULT_LOCALE_TEXT}\r\n                                    paginationMode=\"server\"\r\n                                    rowCount={this.state.data.total ?? 0}\r\n                                    pageSize={10} rowsPerPageOptions={[10]} pagination\r\n                                    /*onPageSizeChange={(params) => {\r\n                                        this.setPage({ page: params.page, pageSize: params.pageSize });\r\n                                    }}*/\r\n                                    onPageChange={(params) => {\r\n                                        let filters = Object.assign({}, this.state.filters, { page: params.page, pageSize: params.pageSize });\r\n                                        this.setState({ ...this.state, filters });\r\n                                        this.setPage(filters);\r\n                                    }}\r\n                                />\r\n                            </div>}\r\n                    </CardContent>\r\n                    <CardActionArea>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n\r\n                    </CardActions>\r\n                </Card>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = store => ({\r\n\r\n});\r\nconst mapDispatchToProps = dispatch =>\r\n    bindActionCreators({ setSnackbar }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LDataGrid)\r\n"]},"metadata":{},"sourceType":"module"}