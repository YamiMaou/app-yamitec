{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, Fragment, useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { setDialog, setProducts } from \"../../actions/productActions\";\nimport { setCart } from \"../../actions/cartAction\";\nimport { setSnackbar } from \"../../actions/appActions\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\nimport ptBR from \"date-fns/locale/pt-BR\";\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport MaskedInput from 'react-text-mask';\nvar idNumbers = ['cpf', 'cnpj', 'cep'];\n\nfunction TextMaskCustom(props) {\n  var inputRef = props.inputRef,\n      other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return React.createElement(MaskedInput, _extends({}, other, {\n    ref: function ref(_ref) {\n      inputRef(_ref ? _ref.inputElement : null);\n    },\n    value: props.value,\n    onChange: props.onChange,\n    onBlur: props.onChange,\n    mask: props.mask,\n    placeholderChar: \"\\u2000\"\n  }));\n}\n\nfunction TextInputCustom(props) {\n  var _props$required, _props$type, _props$helperText, _props$required2, _props$helperText2;\n\n  var inputRef = props.inputRef,\n      other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  function handleChange(e) {\n    var id = e.target.id;\n    var val = e.target.value;\n    setValue(val);\n\n    if (props.validate !== undefined) {\n      if (props.validate(val) !== false) {\n        setError(false);\n        props.onChange(e);\n      } else {\n        setError(true);\n      }\n    } else {\n      props.onChange(e);\n    }\n  }\n\n  if (props.mask === undefined) return React.createElement(TextField, {\n    key: \"input-\" + props.id,\n    size: \"small\",\n    style: props.style,\n    required: (_props$required = props.required) != null ? _props$required : false,\n    error: error,\n    type: (_props$type = props.type) != null ? _props$type : \"text\",\n    value: value,\n    helperText: error == true ? (_props$helperText = props.helperText) != null ? _props$helperText : \"conteúdo inválido\" : \"\",\n    id: props.id,\n    label: props.label,\n    onChange: handleChange,\n    onBlur: handleChange\n  });else return React.createElement(FormControl, {\n    key: \"input-\" + props.id,\n    style: props.style\n  }, React.createElement(InputLabel, {\n    htmlFor: props.id\n  }, props.label), React.createElement(Input, {\n    required: (_props$required2 = props.required) != null ? _props$required2 : false,\n    size: \"small\",\n    key: \"input-\" + props.id,\n    error: error,\n    onChange: handleChange,\n    onBlur: handleChange,\n    name: props.name,\n    id: props.id,\n    \"aria-describedby\": \"component-error-text\",\n    inputProps: {\n      mask: props.mask,\n      error: error\n    },\n    inputComponent: TextMaskCustom\n  }), error == true ? React.createElement(FormHelperText, {\n    id: \"component-error-text\"\n  }, (_props$helperText2 = props.helperText) != null ? _props$helperText2 : \"conteúdo inválido\") : '');\n}\n\nvar DateInput = function DateInput(props) {\n  var _props$required3, _props$label, _props$helperText3;\n\n  var _useState5 = useState(new Date('2021-02-13')),\n      _useState6 = _slicedToArray(_useState5, 2),\n      value = _useState6[0],\n      setValue = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      error = _useState8[0],\n      setError = _useState8[1];\n\n  function handleChange(value) {\n    try {\n      if (props.validate !== undefined) {\n        if (props.validate(value)) {\n          setError(false);\n          inputValues[props.id] = \"\" + value.toJSON().split('T')[0];\n        } else {\n          setError(true);\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n\n    setValue(value);\n  }\n\n  return React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    locale: ptBR\n  }, React.createElement(Grid, {\n    justify: \"space-around\",\n    style: {\n      flexGrow: 0,\n      marginTop: 18\n    }\n  }, React.createElement(KeyboardDatePicker, {\n    required: (_props$required3 = props.required) != null ? _props$required3 : false,\n    margin: \"normal\",\n    id: props.id,\n    label: (_props$label = props.label) != null ? _props$label : 'Data',\n    error: error,\n    helperText: props.error ? (_props$helperText3 = props.helperText) != null ? _props$helperText3 : \"conteúdo inválido\" : \"\",\n    format: \"dd/MM/yyyy\",\n    value: value,\n    onChange: handleChange,\n    onBlur: handleChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    }\n  })));\n};\n\nvar SelectInput = function SelectInput(props) {\n  var _useState9 = useState(props.values[0]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      value = _useState10[0],\n      setValue = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      error = _useState12[0],\n      setError = _useState12[1];\n\n  function handleChange(e) {\n    var _e$target = e.target,\n        value = _e$target.value,\n        id = _e$target.id;\n\n    if (props.validate !== undefined) {\n      if (props.validate(value)) {\n        setError(false);\n        props.onChange(e);\n      } else {\n        setError(true);\n      }\n    }\n\n    setValue(e.target.value);\n  }\n\n  return React.createElement(FormControl, {\n    id: props.column,\n    style: _objectSpread(_objectSpread({}, props.style), {}, {\n      marginTop: '25px'\n    })\n  }, React.createElement(InputLabel, {\n    id: props.column\n  }, props.label), React.createElement(Select, {\n    size: \"small\",\n    labelId: props.id,\n    id: props.id,\n    name: props.name,\n    value: value,\n    error: error,\n    onChange: handleChange,\n    onBlur: handleChange\n  }, props.values.map(function (val, ind) {\n    return React.createElement(MenuItem, {\n      key: \"input-\" + ind,\n      value: val\n    }, val);\n  })));\n};\n\nvar LForms = function (_Component) {\n  _inherits(LForms, _Component);\n\n  var _super = _createSuper(LForms);\n\n  function LForms() {\n    var _this;\n\n    _classCallCheck(this, LForms);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: [],\n      inputVal: {},\n      filter: ['flex']\n    };\n    return _this;\n  }\n\n  _createClass(LForms, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var inputValues, formValidate;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              inputValues = {};\n              formValidate = {};\n              this.props.forms.map(function (form, ind) {\n                var ifjson = {};\n                form.fields.map(function (input, ind1) {\n                  var _input$value, _form$json, _input$value2, _input$value3;\n\n                  ifjson[input.column] = (_input$value = input.value) != null ? _input$value : '';\n                  inputValues[(_form$json = form.json) != null ? _form$json : input.column] = form.json == undefined ? (_input$value2 = input.value) != null ? _input$value2 : '' : ifjson;\n                  formValidate[input.column] = (_input$value3 = input.value) != null ? _input$value3 : '';\n                });\n              });\n              this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n                inputVal: inputValues,\n                formValidate: formValidate\n              }));\n              console.log(this.state);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var mainChange = function mainChange(e, params) {\n        var _e$target$id;\n\n        var inputValues = _this2.state.inputVal;\n        var formValidate = _this2.state.formValidate;\n        var value = e.target.value;\n        var id = (_e$target$id = e.target.id) != null ? _e$target$id : e.target.name;\n\n        if (idNumbers.includes(e.target.id)) {\n          value = value.replace(/[^\\d]+/g, '');\n        }\n\n        if (value.length == 0 || value == '' || value == 'Todos') {\n          if (params.json === undefined) {\n            inputValues[id] = '';\n          } else {\n            inputValues[params.json][id] = '';\n          }\n        } else {\n          if (id == 'created_at') {\n            value = \"\" + value.toJSON().split('T')[0];\n          }\n\n          if (idNumbers.includes(id)) {\n            value = value.replace(/[^\\d]+/g, '');\n          }\n\n          if (params.handle !== undefined) {}\n\n          if (params.json === undefined) {\n            inputValues[id] = value;\n          } else {\n            inputValues[params.json][id] = value;\n          }\n        }\n\n        formValidate[id] = value;\n\n        _this2.setState(_objectSpread(_objectSpread({}, _this2.state), {}, {\n          inputVal: inputValues,\n          formValidate: formValidate\n        }));\n\n        console.log(_this2.state.inputVal);\n      };\n\n      var classes = {\n        m5: {\n          margin: 5,\n          marginTop: 25\n        },\n        root: {\n          maxWidth: 345,\n          marginBottom: 25\n        },\n        media: {\n          height: 140\n        }\n      };\n      return React.createElement(\"div\", null, this.props.forms.map(function (form, ind) {\n        var _form$id, _form$flexFlow, _this2$state$filter$i;\n\n        return React.createElement(\"div\", null, React.createElement(Card, {\n          className: classes.root,\n          style: {\n            marginBottom: 15\n          }\n        }, React.createElement(CardContent, null, React.createElement(Typography, {\n          onClick: function onClick() {\n            var filter = _this2.state.filter;\n            filter[ind] = _this2.state.filter[ind] == 'flex' ? 'none' : 'flex';\n\n            _this2.setState(_objectSpread(_objectSpread({}, _this2.state), {}, {\n              filter: filter\n            }));\n          }\n        }, React.createElement(IndeterminateCheckBoxIcon, null), \" \", form.title), React.createElement(\"div\", {\n          key: \"block-\" + ind,\n          id: \"data-form-\" + ((_form$id = form.id) != null ? _form$id : '1'),\n          style: {\n            alignItems: 'center',\n            flexFlow: (_form$flexFlow = form.flexFlow) != null ? _form$flexFlow : 'row wrap',\n            justifyContent: 'start',\n            display: (_this2$state$filter$i = _this2.state.filter[ind]) != null ? _this2$state$filter$i : 'flex'\n          }\n        }, form.fields.map(function (input, ind1) {\n          if (input.type == \"date\") {\n            var _input$helperText, _input$grow;\n\n            return React.createElement(DateInput, {\n              helperText: (_input$helperText = input.helperText) != null ? _input$helperText : \"\",\n              key: \"input-\" + ind1,\n              id: input.column,\n              style: _objectSpread(_objectSpread({}, classes.m5), {}, {\n                flexGrow: (_input$grow = input.grow) != null ? _input$grow : 0\n              }),\n              onChange: function onChange(e) {\n                var _input$handle, _form$json2, _input$validate;\n\n                return mainChange(e, {\n                  handle: (_input$handle = input.handle) != null ? _input$handle : undefined,\n                  json: (_form$json2 = form.json) != null ? _form$json2 : undefined,\n                  validate: (_input$validate = input.validate) != null ? _input$validate : undefined\n                });\n              }\n            });\n          } else if (input.type == \"select\") {\n            var _input$helperText2, _input$grow2;\n\n            return React.createElement(SelectInput, {\n              helperText: (_input$helperText2 = input.helperText) != null ? _input$helperText2 : \"\",\n              key: \"input-\" + ind1,\n              id: input.column,\n              label: input.label,\n              name: input.column,\n              values: input.values,\n              style: _objectSpread(_objectSpread({}, classes.m5), {}, {\n                flexGrow: (_input$grow2 = input.grow) != null ? _input$grow2 : 0\n              }),\n              onChange: function onChange(e) {\n                var _input$handle2, _form$json3, _input$validate2;\n\n                return mainChange(e, {\n                  handle: (_input$handle2 = input.handle) != null ? _input$handle2 : undefined,\n                  json: (_form$json3 = form.json) != null ? _form$json3 : undefined,\n                  validate: (_input$validate2 = input.validate) != null ? _input$validate2 : undefined\n                });\n              }\n            });\n          } else if (input.type == \"file\") {\n            var _input$grow3;\n\n            return React.createElement(FormControl, {\n              key: \"input-\" + ind1,\n              style: _objectSpread(_objectSpread({}, classes.m5), {}, {\n                flexGrow: (_input$grow3 = input.grow) != null ? _input$grow3 : 0\n              })\n            }, React.createElement(Button, {\n              variant: \"contained\",\n              component: \"label\"\n            }, \"Enviar Arquivo \", React.createElement(\"input\", {\n              type: \"file\",\n              hidden: true,\n              onChange: function onChange(e) {\n                var _input$handle3, _form$json4, _input$validate3;\n\n                return mainChange(e, {\n                  handle: (_input$handle3 = input.handle) != null ? _input$handle3 : undefined,\n                  json: (_form$json4 = form.json) != null ? _form$json4 : undefined,\n                  validate: (_input$validate3 = input.validate) != null ? _input$validate3 : undefined\n                });\n              },\n              onBlur: function onBlur(e) {\n                var _input$handle4, _form$json5, _input$validate4;\n\n                return mainChange(e, {\n                  handle: (_input$handle4 = input.handle) != null ? _input$handle4 : undefined,\n                  json: (_form$json5 = form.json) != null ? _form$json5 : undefined,\n                  validate: (_input$validate4 = input.validate) != null ? _input$validate4 : undefined\n                });\n              },\n              name: input.column,\n              id: input.column\n            })));\n          } else {\n            var _input$grow4, _input$flexBasis, _input$mask, _input$helperText3;\n\n            return React.createElement(TextInputCustom, {\n              key: \"input-\" + ind1,\n              id: input.column,\n              type: input.type,\n              style: _objectSpread(_objectSpread({}, classes.m5), {}, {\n                flexGrow: (_input$grow4 = input.grow) != null ? _input$grow4 : 0,\n                flexBasis: (_input$flexBasis = input.flexBasis) != null ? _input$flexBasis : '30%'\n              }),\n              id: input.column,\n              label: input.label,\n              mask: (_input$mask = input.mask) != null ? _input$mask : undefined,\n              validate: input.validateHandler,\n              helperText: (_input$helperText3 = input.helperText) != null ? _input$helperText3 : \"\",\n              onChange: function onChange(e) {\n                var _input$handle5, _form$json6, _input$validate5;\n\n                return mainChange(e, {\n                  handle: (_input$handle5 = input.handle) != null ? _input$handle5 : undefined,\n                  json: (_form$json6 = form.json) != null ? _form$json6 : undefined,\n                  validate: (_input$validate5 = input.validate) != null ? _input$validate5 : undefined\n                });\n              },\n              onBlur: function onBlur(e) {\n                var _input$handle6, _form$json7, _input$validate6;\n\n                return mainChange(e, {\n                  handle: (_input$handle6 = input.handle) != null ? _input$handle6 : undefined,\n                  json: (_form$json7 = form.json) != null ? _form$json7 : undefined,\n                  validate: (_input$validate6 = input.validate) != null ? _input$validate6 : undefined\n                });\n              }\n            });\n          }\n        }))), React.createElement(CardActionArea, null, React.createElement(CardActions, null))));\n      }), React.createElement(Button, {\n        size: \"small\",\n        style: {\n          margin: 5\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          if (_this2.props.validate === undefined) {\n            _this2.props.request(_this2.state.inputVal);\n          } else {\n            if (_this2.props.validate(_this2.state.formValidate)) {\n              _this2.props.request(_this2.state.inputVal);\n            }\n          }\n        }\n      }, \" Salvar\"), React.createElement(Button, {\n        size: \"small\",\n        style: {\n          margin: 5\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          _this2.props.history.goBack();\n        }\n      }, \" Cancelar\"));\n    }\n  }]);\n\n  return LForms;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    snackbar: store.appReducer.snackbar\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setProducts: setProducts,\n    setSnackbar: setSnackbar,\n    setDialog: setDialog,\n    setCart: setCart\n  }, dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LForms));","map":{"version":3,"sources":["C:/Users/Maou/Documents/Projetos/CLIENTES/RNF/client/src/components/Forms/index.js"],"names":["React","Component","Fragment","useState","useRef","connect","bindActionCreators","withRouter","setDialog","setProducts","setCart","setSnackbar","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","Snackbar","TextField","Input","InputLabel","MenuItem","FormHelperText","FormControl","Select","IndeterminateCheckBoxIcon","ptBR","Grid","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","MaskedInput","idNumbers","TextMaskCustom","props","inputRef","other","ref","inputElement","value","onChange","mask","TextInputCustom","setValue","error","setError","handleChange","e","id","target","val","validate","undefined","style","required","type","helperText","label","name","DateInput","Date","inputValues","toJSON","split","err","console","log","flexGrow","marginTop","SelectInput","values","column","map","ind","LForms","state","data","inputVal","filter","formValidate","forms","form","ifjson","fields","input","ind1","json","setState","mainChange","params","includes","replace","length","handle","classes","m5","margin","root","maxWidth","marginBottom","media","height","title","alignItems","flexFlow","justifyContent","display","grow","flexBasis","validateHandler","request","history","goBack","mapStateToProps","store","snackbar","appReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment, useState, useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\nimport { withRouter } from 'react-router-dom'\r\n//\r\n//\r\nimport { setDialog, setProducts } from '../../actions/productActions'\r\nimport { setCart } from '../../actions/cartAction'\r\nimport { setSnackbar } from '../../actions/appActions'\r\n//const classes = useStyles();\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n//\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\r\n\r\nimport ptBR from \"date-fns/locale/pt-BR\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nimport MaskedInput from 'react-text-mask';\r\nconst idNumbers = [\r\n    'cpf', 'cnpj', 'cep'\r\n];\r\n\r\n// MASKED INPUTS \r\n\r\nfunction TextMaskCustom(props) {\r\n    const { inputRef, ...other } = props;\r\n\r\n    return (\r\n        <MaskedInput\r\n            {...other}\r\n            ref={(ref) => {\r\n                inputRef(ref ? ref.inputElement : null);\r\n            }}\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n            onBlur={props.onChange}\r\n            mask={props.mask}\r\n            placeholderChar={'\\u2000'}\r\n\r\n        />\r\n    );\r\n}\r\n\r\n//\r\nfunction TextInputCustom(props) {\r\n    const { inputRef, ...other } = props;\r\n\r\n    const [value, setValue] = useState(\"\");\r\n    const [error, setError] = useState(false);\r\n\r\n    function handleChange(e) {\r\n        const { id } = e.target;\r\n        let val = e.target.value;\r\n        setValue(val);\r\n        if (props.validate !== undefined) {\r\n            if (props.validate(val) !== false) {\r\n                setError(false);\r\n                props.onChange(e)\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }else{\r\n            props.onChange(e)\r\n        }\r\n        \r\n    }\r\n\r\n    if (props.mask === undefined)\r\n        return (\r\n            <TextField key={`input-${props.id}`} size=\"small\" style={props.style}\r\n                required={props.required ?? false}\r\n                error={error}\r\n                type={props.type ?? \"text\"}\r\n                value={value}\r\n                helperText={error == true ? props.helperText ?? \"conteúdo inválido\" : \"\"}\r\n                id={props.id} label={props.label}\r\n                onChange={handleChange}\r\n                onBlur={handleChange}\r\n            />\r\n        )\r\n    else\r\n        return (\r\n            <FormControl key={`input-${props.id}`} style={props.style} >\r\n                <InputLabel htmlFor={props.id}>{props.label}</InputLabel>\r\n                <Input\r\n                    required={props.required ?? false}\r\n                    size=\"small\"\r\n                    key={`input-${props.id}`}\r\n                    error={error}\r\n                    onChange={handleChange}\r\n                    onBlur={handleChange}\r\n                    name={props.name}\r\n                    id={props.id}\r\n                    aria-describedby=\"component-error-text\"\r\n                    inputProps={{\r\n                        mask: props.mask,\r\n                        error,\r\n                    }}\r\n                    inputComponent={TextMaskCustom}\r\n                />\r\n                {error == true ? (\r\n                    <FormHelperText id=\"component-error-text\">{props.helperText ?? \"conteúdo inválido\"}</FormHelperText>\r\n                ) : ('')}\r\n            </FormControl>)\r\n}\r\n//\r\nconst DateInput = (props) => {\r\n    const [value, setValue] = useState(new Date('2021-02-13'));\r\n    const [error, setError] = useState(false);\r\n    function handleChange(value) {\r\n        try {\r\n            if (props.validate !== undefined) {\r\n                if (props.validate(value)) {\r\n                    setError(false);\r\n                    inputValues[props.id] = `${value.toJSON().split('T')[0]}`\r\n                } else {\r\n                    setError(true)\r\n                }\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n        //props.onChange(value);\r\n        setValue(value);\r\n    }\r\n    return (<MuiPickersUtilsProvider utils={DateFnsUtils} locale={ptBR}>\r\n        <Grid justify=\"space-around\" style={{ flexGrow: 0, marginTop: 18 }}>\r\n            <KeyboardDatePicker\r\n                required={props.required ?? false}\r\n                margin=\"normal\"\r\n                id={props.id}\r\n                label={props.label ?? 'Data'}\r\n                error={error}\r\n                helperText={props.error ? props.helperText ?? \"conteúdo inválido\" : \"\"}\r\n                format=\"dd/MM/yyyy\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                onBlur={handleChange}\r\n                KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                }}\r\n            />\r\n        </Grid>\r\n    </MuiPickersUtilsProvider>)\r\n}\r\n//\r\n\r\nconst SelectInput = (props) => {\r\n    const [value, setValue] = useState(props.values[0]);\r\n    const [error, setError] = useState(false);\r\n    function handleChange(e) {\r\n        const { value, id } = e.target;\r\n        if (props.validate !== undefined) {\r\n            if (props.validate(value)) {\r\n                setError(false);\r\n                props.onChange(e);\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }\r\n        setValue(e.target.value);\r\n    }\r\n    return (\r\n        <FormControl id={props.column} style={{ ...props.style, marginTop: '25px' }}>\r\n            <InputLabel id={props.column}>{props.label}</InputLabel>\r\n            <Select size=\"small\"\r\n                labelId={props.id}\r\n                id={props.id}\r\n                name={props.name}\r\n                value={value}\r\n                error={error}\r\n                //helperText={props.error ? props.helperText ?? \"conteúdo inválido\" : \"\"}\r\n                onChange={handleChange}\r\n                onBlur={handleChange}\r\n            >\r\n                {\r\n                    props.values.map((val, ind) => {\r\n                        return <MenuItem key={`input-${ind}`} value={val}>{val}</MenuItem>\r\n                    })\r\n                }\r\n\r\n            </Select>\r\n        </FormControl>)\r\n}\r\nclass LForms extends Component {\r\n    state = {\r\n        data: [],\r\n        inputVal: {},\r\n        filter: ['flex']\r\n    }\r\n    async componentDidMount() {\r\n        let inputValues = {};\r\n        let formValidate = {};\r\n        this.props.forms.map((form, ind) => {\r\n            let ifjson = {};\r\n            form.fields.map((input, ind1) => {\r\n                ifjson[input.column] = input.value ?? '';\r\n                inputValues[form.json ?? input.column] = form.json == undefined ? input.value ?? '' : ifjson;\r\n                formValidate[input.column] = input.value ?? '';\r\n            });\r\n        });\r\n        this.setState({ ...this.state, inputVal: inputValues, formValidate  });\r\n\r\n        console.log(this.state)\r\n    }\r\n\r\n\r\n    render() {\r\n        const mainChange = (e, params) => {\r\n            let inputValues = this.state.inputVal;\r\n            let formValidate = this.state.formValidate;\r\n            let value = e.target.value;\r\n            let id = e.target.id ?? e.target.name;\r\n\r\n            if (idNumbers.includes(e.target.id)) {\r\n                value = value.replace(/[^\\d]+/g, '');\r\n            }\r\n\r\n            if (value.length == 0 || value == '' || value == 'Todos') {\r\n                if (params.json === undefined) {\r\n                    inputValues[id] = ''\r\n                } else {\r\n                    inputValues[params.json][id] = '';\r\n                }\r\n            } else {\r\n                if (id == 'created_at') {\r\n                    value = `${value.toJSON().split('T')[0]}`\r\n                }\r\n\r\n                if (idNumbers.includes(id)) {\r\n                    value = value.replace(/[^\\d]+/g, '');\r\n                }\r\n                if (params.handle !== undefined) {\r\n                    //let request = await params.handle(value)\r\n                    //value = request[id] ?? '';\r\n                }\r\n\r\n\r\n                if (params.json === undefined) {\r\n                    inputValues[id] = value\r\n                    //console.log(params.json);\r\n                } else {\r\n                    inputValues[params.json][id] = value;\r\n                }\r\n            }\r\n            formValidate[id] = value;\r\n            this.setState({ ...this.state, inputVal: inputValues, formValidate  });\r\n            console.log(this.state.inputVal);\r\n        }\r\n\r\n        const classes = {\r\n            m5: {\r\n                margin: 5,\r\n                marginTop: 25,\r\n                //flexBasis: '30%'\r\n\r\n            },\r\n            root: {\r\n                maxWidth: 345,\r\n                marginBottom: 25\r\n            },\r\n            media: {\r\n                height: 140,\r\n            },\r\n        }\r\n        return (\r\n            <div>\r\n                {\r\n                    this.props.forms.map((form, ind) => {\r\n                        return (\r\n                            <div>\r\n                                <Card className={classes.root} style={{ marginBottom: 15 }}>\r\n                                    <CardContent>\r\n                                        <Typography onClick={() => {\r\n                                            let filter = this.state.filter;\r\n                                            filter[ind] = this.state.filter[ind] == 'flex' ? 'none' : 'flex'\r\n                                            this.setState({ ...this.state, filter })\r\n                                        }}>\r\n                                            <IndeterminateCheckBoxIcon /> {form.title}\r\n                                        </Typography>\r\n\r\n                                        <div key={`block-${ind}`} id={`data-form-${form.id ?? '1'}`} style={{\r\n                                            alignItems: 'center',\r\n                                            flexFlow: form.flexFlow ?? 'row wrap',\r\n                                            justifyContent: 'start',\r\n                                            display: this.state.filter[ind] ?? 'flex',\r\n                                        }}>\r\n                                            {\r\n\r\n                                                form.fields.map((input, ind1) => {\r\n                                                    //}\r\n                                                    if (input.type == \"date\") {\r\n                                                        return <DateInput helperText={input.helperText ?? \"\"} key={`input-${ind1}`} id={input.column} style={{ ...classes.m5, flexGrow: input.grow ?? 0 }} onChange={(e) => mainChange(e, { handle: input.handle ?? undefined, json: form.json ?? undefined, validate: input.validate ?? undefined })} />\r\n                                                    } else if (input.type == \"select\") {\r\n                                                        return (<SelectInput helperText={input.helperText ?? \"\"} key={`input-${ind1}`} id={input.column} label={input.label} name={input.column} values={input.values} style={{ ...classes.m5, flexGrow: input.grow ?? 0 }} onChange={(e) => mainChange(e, { handle: input.handle ?? undefined, json: form.json ?? undefined, validate: input.validate ?? undefined })} />)\r\n                                                    } else if (input.type == \"file\") {\r\n                                                        return (\r\n                                                            <FormControl key={`input-${ind1}`} style={{ ...classes.m5, flexGrow: input.grow ?? 0 }} >\r\n                                                                <Button variant=\"contained\" component=\"label\">\r\n                                                                    Enviar Arquivo <input type=\"file\" hidden\r\n                                                                        onChange={(e) => mainChange(e, { handle: input.handle ?? undefined, json: form.json ?? undefined, validate: input.validate ?? undefined })}\r\n                                                                        onBlur={(e) => mainChange(e, { handle: input.handle ?? undefined, json: form.json ?? undefined, validate: input.validate ?? undefined })}\r\n                                                                        name={input.column}\r\n                                                                        id={input.column}\r\n                                                                    />\r\n                                                                </Button>\r\n                                                            </FormControl>\r\n                                                        )\r\n                                                    }else{\r\n                                                        return <TextInputCustom key={`input-${ind1}`} \r\n                                                            id={input.column} \r\n                                                            type={input.type}\r\n                                                            style={{ ...classes.m5, flexGrow: input.grow ?? 0, flexBasis: input.flexBasis ?? '30%' }}\r\n                                                            id={input.column} label={input.label}\r\n                                                            mask={input.mask ?? undefined}\r\n                                                            validate={input.validateHandler}\r\n                                                            helperText={input.helperText ?? \"\"}\r\n                                                            onChange={(e) => mainChange(e, { handle: input.handle ?? undefined, json: form.json ?? undefined, validate: input.validate ?? undefined })}\r\n                                                            onBlur={(e) => mainChange(e, { handle: input.handle ?? undefined, json: form.json ?? undefined, validate: input.validate ?? undefined })} />\r\n                                                    }\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    </CardContent>\r\n                                    <CardActionArea>\r\n                                        <CardActions>\r\n                                        </CardActions>\r\n                                    </CardActionArea>\r\n                                </Card>\r\n                            </div>\r\n                        )\r\n                    })\r\n                    \r\n                }\r\n                <Button size=\"small\" style={{ margin: 5 }} variant=\"contained\" color=\"primary\" onClick={() => {\r\n                    if (this.props.validate === undefined) {\r\n                        this.props.request(this.state.inputVal);\r\n                    } else {\r\n                        if (this.props.validate(this.state.formValidate)) {\r\n                            this.props.request(this.state.inputVal);\r\n                            //console.log(this.state)\r\n                        }\r\n                    }\r\n                }}> Salvar</Button>\r\n                <Button size=\"small\" style={{ margin: 5 }} variant=\"contained\" color=\"primary\" onClick={() => { this.props.history.goBack(); }} > Cancelar</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = store => ({\r\n    snackbar: store.appReducer.snackbar\r\n});\r\nconst mapDispatchToProps = dispatch =>\r\n    bindActionCreators({ setProducts, setSnackbar, setDialog, setCart }, dispatch);\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LForms))\r\n"]},"metadata":{},"sourceType":"module"}