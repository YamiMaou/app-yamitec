{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Maou\\\\Documents\\\\Projetos\\\\CLIENTES\\\\RNF\\\\client\\\\src\\\\components\\\\Forms\\\\index.js\",\n    _this = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, Fragment, useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { DataGrid, RowsProp, ColDef } from '@material-ui/data-grid';\nimport { setDialog, setProducts } from \"../../actions/productActions\";\nimport { setCart } from \"../../actions/cartAction\";\nimport { setSnackbar } from \"../../actions/appActions\";\nimport { DEFAULT_LOCALE_TEXT } from \"../../providers/langs/datagrid\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport AppBar from '@material-ui/core/AppBar';\nimport HomeIcon from '@material-ui/icons/Home';\nimport IconButton from '@material-ui/core/IconButton';\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ReorderIcon from '@material-ui/icons/Reorder';\nimport ptBR from \"date-fns/locale/pt-BR\";\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport { validaCpf } from \"../../providers/commonMethods\";\nvar idNumbers = ['cpf', 'cnpj', 'cep'];\nvar inputValues = {};\n\nfunction onChangeInputs(e) {\n  var params,\n      value,\n      _e$target$id,\n      request,\n      _e$target$id2,\n      json,\n      _e$target$id3,\n      _args = arguments;\n\n  return _regeneratorRuntime.async(function onChangeInputs$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          params = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n          console.log(params);\n          value = e.target.value;\n\n          if (idNumbers.includes(e.target.id)) {\n            value = value.replace(/[^\\d]+/g, '');\n          }\n\n          if (!(value.length == 0 || e.target.value == 'Todos')) {\n            _context.next = 8;\n            break;\n          }\n\n          inputValues[(_e$target$id = e.target.id) != null ? _e$target$id : e.target.name] = '';\n          _context.next = 17;\n          break;\n\n        case 8:\n          if (e.target.id == 'created_at') {\n            value = \"\" + value.toJSON().split('T')[0];\n          }\n\n          if (e.target.id == 'cpf') {}\n\n          if (idNumbers.includes(e.target.id)) {\n            value = value.replace(/[^\\d]+/g, '');\n          }\n\n          if (!(params.handle !== undefined)) {\n            _context.next = 15;\n            break;\n          }\n\n          _context.next = 14;\n          return _regeneratorRuntime.awrap(params.handle(value));\n\n        case 14:\n          request = _context.sent;\n\n        case 15:\n          if (params.json !== undefined) {\n            json = {};\n            json[(_e$target$id2 = e.target.id) != null ? _e$target$id2 : e.target.name] = value;\n            inputValues[params.json] = json;\n          } else {\n            inputValues[(_e$target$id3 = e.target.id) != null ? _e$target$id3 : e.target.name] = value;\n          }\n\n          console.log(inputValues);\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction onClearFilter() {\n  inputValues = {};\n  document.getElementById('filter-form').querySelectorAll('input').forEach(function (item, index) {\n    console.log({\n      index: index,\n      item: item\n    });\n    item.value = '';\n  });\n  document.getElementById('filter-form').querySelectorAll('select').forEach(function (item, index) {\n    console.log({\n      index: index,\n      item: item,\n      selectedIndex: item.selectedIndex\n    });\n    item.value = \"Todos\";\n  });\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      '& > *': {\n        margin: theme.spacing(1)\n      }\n    }\n  };\n});\n\nfunction TextMaskCustom(props) {\n  var inputRef = props.inputRef,\n      other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return React.createElement(MaskedInput, _extends({}, other, {\n    ref: function ref(_ref) {\n      inputRef(_ref ? _ref.inputElement : null);\n    },\n    mask: props.mask,\n    placeholderChar: \"\\u2000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }));\n}\n\nvar DateInput = function DateInput(props) {\n  var _props$label;\n\n  var _useState = useState(new Date('2021-02-13')),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  function handleChange(value) {\n    try {\n      inputValues[props.id] = \"\" + value.toJSON().split('T')[0];\n    } catch (err) {\n      console.log(err);\n    }\n\n    setValue(value);\n  }\n\n  return React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    locale: ptBR,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, React.createElement(Grid, {\n    justify: \"space-around\",\n    style: {\n      flexGrow: 0,\n      marginTop: 18\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, React.createElement(KeyboardDatePicker, {\n    margin: \"normal\",\n    id: props.id,\n    label: (_props$label = props.label) != null ? _props$label : 'Data',\n    format: \"dd/MM/yyyy\",\n    value: value,\n    onChange: handleChange,\n    onBlur: handleChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  })));\n};\n\nvar SelectInput = function SelectInput(props) {\n  var _useState3 = useState(props.values[0]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      value = _useState4[0],\n      setValue = _useState4[1];\n\n  function handleChange(e) {\n    onChangeInputs(e);\n    setValue(e.target.value);\n  }\n\n  return React.createElement(FormControl, {\n    id: props.column,\n    style: _objectSpread(_objectSpread({}, props.style), {}, {\n      marginTop: '25px'\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, React.createElement(InputLabel, {\n    id: props.column,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, props.label), React.createElement(Select, {\n    size: \"small\",\n    labelId: props.id,\n    id: props.id,\n    name: props.name,\n    value: value,\n    onChange: handleChange,\n    onBlur: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, props.values.map(function (val) {\n    return React.createElement(MenuItem, {\n      value: val,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 32\n      }\n    }, val);\n  })));\n};\n\nvar LForms = function (_Component) {\n  _inherits(LForms, _Component);\n\n  var _super = _createSuper(LForms);\n\n  function LForms() {\n    var _this2;\n\n    _classCallCheck(this, LForms);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.state = {\n      data: [],\n      filter: ['flex']\n    };\n    return _this2;\n  }\n\n  _createClass(LForms, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var classes = {\n        m5: {\n          margin: 5,\n          marginTop: 25\n        },\n        root: {\n          maxWidth: 345,\n          marginBottom: 25\n        },\n        media: {\n          height: 140\n        }\n      };\n      return React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }\n      }, this.props.forms.map(function (form, ind) {\n        var _form$flexFlow, _this3$state$filter$i;\n\n        var ifjson = {};\n        return React.createElement(\"div\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }\n        }, React.createElement(Card, {\n          className: classes.root,\n          style: {\n            marginBottom: 15\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }\n        }, React.createElement(CardContent, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 33\n          }\n        }, React.createElement(Typography, {\n          onClick: function onClick() {\n            var filter = _this3.state.filter;\n            filter[ind] = _this3.state.filter[ind] == 'flex' ? 'none' : 'flex';\n\n            _this3.setState(_objectSpread(_objectSpread({}, _this3.state), {}, {\n              filter: filter\n            }));\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 37\n          }\n        }, React.createElement(IndeterminateCheckBoxIcon, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 41\n          }\n        }), \" \", form.title), React.createElement(\"div\", {\n          id: \"filter-form\",\n          style: {\n            alignItems: 'center',\n            flexFlow: (_form$flexFlow = form.flexFlow) != null ? _form$flexFlow : 'row wrap',\n            justifyContent: 'start',\n            display: (_this3$state$filter$i = _this3.state.filter[ind]) != null ? _this3$state$filter$i : 'flex'\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 37\n          }\n        }, form.fields.map(function (input) {\n          var _input$value, _form$json, _input$value2;\n\n          ifjson[input.column] = (_input$value = input.value) != null ? _input$value : '';\n          inputValues[(_form$json = form.json) != null ? _form$json : input.column] = form.json == undefined ? (_input$value2 = input.value) != null ? _input$value2 : '' : ifjson[input.column];\n\n          if (input.type == \"text\") {\n            var _input$grow, _input$flexBasis, _input$grow2;\n\n            if (input.mask === undefined) return React.createElement(TextField, {\n              size: \"small\",\n              style: _objectSpread(_objectSpread({}, classes.m5), {}, {\n                flexGrow: (_input$grow = input.grow) != null ? _input$grow : 0,\n                flexBasis: (_input$flexBasis = input.flexBasis) != null ? _input$flexBasis : '30%'\n              }),\n              id: input.column,\n              label: input.label,\n              onChange: function onChange(e) {\n                var _input$handle, _input$json;\n\n                return onChangeInputs(e, {\n                  handle: (_input$handle = input.handle) != null ? _input$handle : undefined,\n                  json: (_input$json = input.json) != null ? _input$json : undefined\n                });\n              },\n              onBlur: function onBlur(e) {\n                var _input$handle2, _input$json2;\n\n                return onChangeInputs(e, {\n                  handle: (_input$handle2 = input.handle) != null ? _input$handle2 : undefined,\n                  json: (_input$json2 = input.json) != null ? _input$json2 : undefined\n                });\n              },\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 64\n              }\n            });else return React.createElement(FormControl, {\n              style: _objectSpread(_objectSpread({}, classes.m5), {}, {\n                flexGrow: (_input$grow2 = input.grow) != null ? _input$grow2 : 0\n              }),\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 61\n              }\n            }, React.createElement(InputLabel, {\n              htmlFor: \"formatted-text-mask-input\",\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 65\n              }\n            }, input.label), React.createElement(Input, {\n              size: \"small\",\n              value: inputValues[input.column],\n              onChange: function onChange(e) {\n                var _input$handle3, _input$json3;\n\n                return onChangeInputs(e, {\n                  handle: (_input$handle3 = input.handle) != null ? _input$handle3 : undefined,\n                  json: (_input$json3 = input.json) != null ? _input$json3 : undefined\n                });\n              },\n              onFocus: function onFocus(e) {\n                if (e.target.value.length == 0) {\n                  e.target.setSelectionRange(0, e.target.value.length);\n                }\n              },\n              name: input.column,\n              id: input.column,\n              inputProps: {\n                mask: input.mask\n              },\n              inputComponent: TextMaskCustom,\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 65\n              }\n            }));\n          } else if (input.type == \"date\") {\n            var _input$grow3;\n\n            return React.createElement(DateInput, {\n              id: input.column,\n              style: _objectSpread(_objectSpread({}, classes.m5), {}, {\n                flexGrow: (_input$grow3 = input.grow) != null ? _input$grow3 : 0\n              }),\n              onBlur: function onBlur(e) {\n                var _input$handle4, _input$json4;\n\n                return onChangeInputs(e, {\n                  handle: (_input$handle4 = input.handle) != null ? _input$handle4 : undefined,\n                  json: (_input$json4 = input.json) != null ? _input$json4 : undefined\n                });\n              },\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 60\n              }\n            });\n          } else if (input.type == \"select\") {\n            var _input$grow4;\n\n            return React.createElement(SelectInput, {\n              id: input.column,\n              label: input.label,\n              name: input.column,\n              values: input.values,\n              style: _objectSpread(_objectSpread({}, classes.m5), {}, {\n                flexGrow: (_input$grow4 = input.grow) != null ? _input$grow4 : 0\n              }),\n              onBlur: function onBlur(e) {\n                var _input$handle5, _input$json5;\n\n                return onChangeInputs(e, {\n                  handle: (_input$handle5 = input.handle) != null ? _input$handle5 : undefined,\n                  json: (_input$json5 = input.json) != null ? _input$json5 : undefined\n                });\n              },\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 61\n              }\n            });\n          }\n        }))), React.createElement(CardActionArea, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 33\n          }\n        }, React.createElement(CardActions, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 37\n          }\n        }))));\n      }), React.createElement(Button, {\n        size: \"small\",\n        style: {\n          margin: 5\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 18\n        }\n      }, \" Salvar\"), React.createElement(Button, {\n        size: \"small\",\n        style: {\n          margin: 5\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: onClearFilter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 18\n        }\n      }, \" cancelar\"));\n    }\n  }]);\n\n  return LForms;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setProducts: setProducts,\n    setSnackbar: setSnackbar,\n    setDialog: setDialog,\n    setCart: setCart\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LForms);","map":{"version":3,"sources":["C:/Users/Maou/Documents/Projetos/CLIENTES/RNF/client/src/components/Forms/index.js"],"names":["React","Component","Fragment","useState","useRef","connect","bindActionCreators","DataGrid","RowsProp","ColDef","setDialog","setProducts","setCart","setSnackbar","DEFAULT_LOCALE_TEXT","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","TextField","Input","InputLabel","MenuItem","FormHelperText","FormControl","Select","AppBar","HomeIcon","IconButton","IndeterminateCheckBoxIcon","SearchIcon","ReorderIcon","ptBR","Grid","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","PropTypes","MaskedInput","validaCpf","idNumbers","inputValues","onChangeInputs","e","params","console","log","value","target","includes","id","replace","length","name","toJSON","split","handle","undefined","request","json","onClearFilter","document","getElementById","querySelectorAll","forEach","item","index","selectedIndex","useStyles","theme","root","margin","spacing","TextMaskCustom","props","inputRef","other","ref","inputElement","mask","DateInput","Date","setValue","handleChange","err","flexGrow","marginTop","label","SelectInput","values","column","style","map","val","LForms","state","data","filter","classes","m5","maxWidth","marginBottom","media","height","forms","form","ind","ifjson","setState","title","alignItems","flexFlow","justifyContent","display","fields","input","type","grow","flexBasis","setSelectionRange","mapStateToProps","store","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment, useState, useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\n//\r\nimport { DataGrid, RowsProp, ColDef } from '@material-ui/data-grid';\r\n//\r\nimport { setDialog, setProducts } from '../../actions/productActions'\r\nimport { setCart } from '../../actions/cartAction'\r\nimport { setSnackbar } from '../../actions/appActions'\r\nimport { DEFAULT_LOCALE_TEXT } from '../../providers/langs/datagrid'\r\n//const classes = useStyles();\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n//\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\n\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ReorderIcon from '@material-ui/icons/Reorder';\r\n\r\nimport ptBR from \"date-fns/locale/pt-BR\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport MaskedInput from 'react-text-mask';\r\n\r\n// VALIDATORS\r\n\r\nimport { validaCpf } from '../../providers/commonMethods'\r\n//\r\n\r\n//const [valus, setValues] = useState(new Date('2021-02-13'));\r\nconst idNumbers = [\r\n    'cpf', 'cnpj', 'cep'\r\n];\r\n\r\nlet inputValues = {};\r\nasync function onChangeInputs(e, params = {}) {\r\n    console.log(params)\r\n    let value = e.target.value;\r\n    if (idNumbers.includes(e.target.id)) {\r\n        value = value.replace(/[^\\d]+/g, '');\r\n    }\r\n\r\n    if (value.length == 0 || e.target.value == 'Todos') {\r\n        inputValues[e.target.id ?? e.target.name] = '';\r\n    } else {\r\n        if (e.target.id == 'created_at') {\r\n            value = `${value.toJSON().split('T')[0]}`\r\n        }\r\n        if (e.target.id == 'cpf') {\r\n            //console.log(validaCpf(value))\r\n        }\r\n        if (idNumbers.includes(e.target.id)) {\r\n            value = value.replace(/[^\\d]+/g, '');\r\n        }\r\n        if(params.handle !== undefined){\r\n            let request =  await params.handle(value)\r\n            //value = request[e.target.id ?? e.target.name] ?? '';\r\n        }\r\n        if(params.json !== undefined){\r\n            let json = {};\r\n            json[e.target.id ?? e.target.name] = value;\r\n            inputValues[params.json] = json;\r\n        }else{\r\n            inputValues[e.target.id ?? e.target.name] = value\r\n        }\r\n        \r\n        console.log(inputValues)\r\n    }\r\n}\r\n\r\nfunction onClearFilter() {\r\n    inputValues = {};\r\n    document.getElementById('filter-form').querySelectorAll('input').forEach((item, index) => {\r\n        console.log({ index, item })\r\n        item.value = '';\r\n    });\r\n\r\n    document.getElementById('filter-form').querySelectorAll('select').forEach((item, index) => {\r\n        console.log({ index, item, selectedIndex: item.selectedIndex })\r\n        item.value = \"Todos\";\r\n    });\r\n}\r\n// MASKED INPUTS \r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\n\r\nfunction TextMaskCustom(props) {\r\n    const { inputRef, ...other } = props;\r\n\r\n    return (\r\n        <MaskedInput\r\n            {...other}\r\n            ref={(ref) => {\r\n                inputRef(ref ? ref.inputElement : null);\r\n            }}\r\n            mask={props.mask}\r\n            placeholderChar={'\\u2000'}\r\n\r\n        />\r\n    );\r\n}\r\n\r\n\r\n//\r\nconst DateInput = (props) => {\r\n    const [value, setValue] = useState(new Date('2021-02-13'));\r\n    function handleChange(value) {\r\n        try {\r\n            inputValues[props.id] = `${value.toJSON().split('T')[0]}`\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n        setValue(value);\r\n    }\r\n    return (<MuiPickersUtilsProvider utils={DateFnsUtils} locale={ptBR}>\r\n        <Grid justify=\"space-around\" style={{ flexGrow: 0, marginTop: 18 }}>\r\n            <KeyboardDatePicker\r\n                margin=\"normal\"\r\n                id={props.id}\r\n                label={props.label ?? 'Data'}\r\n                format=\"dd/MM/yyyy\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                onBlur={handleChange}\r\n                KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                }}\r\n            />\r\n        </Grid>\r\n    </MuiPickersUtilsProvider>)\r\n}\r\n//\r\n\r\nconst SelectInput = (props) => {\r\n    const [value, setValue] = useState(props.values[0]);\r\n    function handleChange(e) {\r\n        onChangeInputs(e)\r\n        setValue(e.target.value);\r\n    }\r\n    return (\r\n        <FormControl id={props.column} style={{ ...props.style, marginTop: '25px' }}>\r\n            <InputLabel id={props.column}>{props.label}</InputLabel>\r\n            <Select size=\"small\"\r\n                labelId={props.id}\r\n                id={props.id}\r\n                name={props.name}\r\n                value={value}\r\n                onChange={handleChange}\r\n                onBlur={handleChange}\r\n            >\r\n                {\r\n                    props.values.map(val => {\r\n                        return <MenuItem value={val}>{val}</MenuItem>\r\n                    })\r\n                }\r\n\r\n            </Select>\r\n        </FormControl>)\r\n}\r\nclass LForms extends Component {\r\n    state = {\r\n        data: [],\r\n        filter: ['flex']\r\n    }\r\n    async componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const classes = {\r\n            m5: {\r\n                margin: 5,\r\n                marginTop: 25,\r\n                //flexBasis: '30%'\r\n\r\n            },\r\n            root: {\r\n                maxWidth: 345,\r\n                marginBottom: 25\r\n            },\r\n            media: {\r\n                height: 140,\r\n            },\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    this.props.forms.map((form, ind) => {\r\n                        let ifjson = {};\r\n                        return (\r\n                        <div>\r\n                            <Card className={classes.root} style={{ marginBottom: 15 }}>\r\n                                <CardContent>\r\n                                    <Typography onClick={() => {\r\n                                        let filter = this.state.filter;\r\n                                        filter[ind] = this.state.filter[ind] == 'flex' ? 'none' : 'flex'\r\n                                        this.setState({ ...this.state, filter })\r\n                                    }}>\r\n                                        <IndeterminateCheckBoxIcon /> {form.title}\r\n                                    </Typography>\r\n\r\n                                    <div id=\"filter-form\" style={{\r\n                                        alignItems: 'center',\r\n                                        flexFlow: form.flexFlow ?? 'row wrap',\r\n                                        justifyContent: 'start',\r\n                                        display: this.state.filter[ind] ?? 'flex',\r\n                                    }}>\r\n                                        {\r\n                                            \r\n                                            form.fields.map(input => {\r\n                                                ifjson[input.column] = input.value ?? '';\r\n                                                inputValues[form.json ?? input.column] = form.json == undefined ?  input.value ?? '' : ifjson[input.column] ;\r\n                                                if (input.type == \"text\") {\r\n                                                    if (input.mask === undefined)\r\n                                                        return <TextField size=\"small\" style={{ ...classes.m5, flexGrow: input.grow ?? 0, flexBasis: input.flexBasis ?? '30%' }} id={input.column} label={input.label} \r\n                                                        onChange={(e) => onChangeInputs(e, {handle: input.handle ?? undefined, json: input.json ?? undefined })}\r\n                                                         onBlur={(e) => onChangeInputs(e, {handle: input.handle ?? undefined, json: input.json ?? undefined })} />\r\n                                                    else\r\n                                                        return (\r\n                                                            <FormControl style={{ ...classes.m5, flexGrow: input.grow ?? 0 }} >\r\n                                                                <InputLabel htmlFor=\"formatted-text-mask-input\">{input.label}</InputLabel>\r\n                                                                <Input\r\n                                                                    size=\"small\"\r\n                                                                    value={inputValues[input.column]}\r\n                                                                    onChange={(e) => onChangeInputs(e, {handle: input.handle ?? undefined, json: input.json ?? undefined })}\r\n                                                                    onFocus={(e) => {\r\n                                                                        if (e.target.value.length == 0) {\r\n                                                                            //alert(e.target.value);\r\n                                                                            e.target.setSelectionRange(0, e.target.value.length)\r\n                                                                        }\r\n                                                                    }}\r\n                                                                    name={input.column}\r\n                                                                    id={input.column}\r\n                                                                    inputProps={{\r\n                                                                        mask: input.mask\r\n                                                                    }}\r\n                                                                    inputComponent={TextMaskCustom}\r\n                                                                />\r\n                                                            </FormControl>)\r\n\r\n                                                } else if (input.type == \"date\") {\r\n                                                    return <DateInput id={input.column} style={{ ...classes.m5, flexGrow: input.grow ?? 0 }} onBlur={(e) => onChangeInputs(e, {handle: input.handle ?? undefined, json: input.json ?? undefined })} />\r\n                                                } else if (input.type == \"select\") {\r\n                                                    return (<SelectInput id={input.column} label={input.label} name={input.column} values={input.values} style={{ ...classes.m5, flexGrow: input.grow ?? 0 }} onBlur={(e) => onChangeInputs(e, {handle: input.handle ?? undefined, json: input.json ?? undefined })} />)\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                </CardContent>\r\n                                <CardActionArea>\r\n                                    <CardActions>\r\n                                       </CardActions>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </div>\r\n                   ) })\r\n                }\r\n                 <Button size=\"small\" style={{ margin: 5 }} variant=\"contained\" color=\"primary\" onClick={() => { }}> Salvar</Button>\r\n                 <Button size=\"small\" style={{ margin: 5 }} variant=\"contained\" color=\"primary\" onClick={onClearFilter} > cancelar</Button>\r\n                                    \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = store => ({\r\n\r\n});\r\nconst mapDispatchToProps = dispatch =>\r\n    bindActionCreators({ setProducts, setSnackbar, setDialog, setCart }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LForms)\r\n"]},"metadata":{},"sourceType":"module"}