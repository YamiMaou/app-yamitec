{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Maou\\\\Documents\\\\Projetos\\\\CLIENTES\\\\RNF\\\\Completo\\\\client\\\\src\\\\pages\\\\Providers\\\\create\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Paper from '@material-ui/core/Paper';\nimport HomeIcon from '@material-ui/icons/Home';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport LForms from \"../../../components/Forms\";\nimport { setSnackbar } from \"../../../actions/appActions\";\nimport { postApiProviders, getApiProviders, getApiProviderTypes } from \"../../../providers/api\";\nimport { validaEmail, validaCnpj, isFutureData } from \"../../../providers/commonMethods\";\nimport { InputCep, InputCnpj, InputPhone } from \"../../../providers/masks\";\nimport { Redirect } from 'react-router-dom';\nimport { withSnackbar } from 'notistack';\n\nvar CreateProviders = function (_Component) {\n  _inherits(CreateProviders, _Component);\n\n  var _super = _createSuper(CreateProviders);\n\n  function CreateProviders() {\n    var _this;\n\n    _classCallCheck(this, CreateProviders);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: [],\n      providertypes: [],\n      states: []\n    };\n    return _this;\n  }\n\n  _createClass(CreateProviders, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var data, providertypes;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getApiProviders({\n                type: \"Matriz\",\n                active: 1\n              }));\n\n            case 2:\n              data = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(getApiProviderTypes());\n\n            case 5:\n              providertypes = _context.sent;\n              this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n                data: data.data,\n                providertypes: providertypes.data\n              }));\n              localStorage.setItem(\"sessionTime\", 900);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var closeSnack = function closeSnack(event, reason) {\n        if (reason === 'clickaway') {\n          return;\n        }\n\n        _this2.props.setSnackbar({\n          open: false,\n          message: \"\"\n        });\n      };\n\n      var request = function request(data) {\n        var response, _response$data, errors, messages;\n\n        return _regeneratorRuntime.async(function request$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this2.props.setSnackbar({\n                  open: true,\n                  message: \"Validando Dados, Aguarde ...\"\n                });\n\n                _this2.setState(_objectSpread(_objectSpread({}, _this2.state), {}, {\n                  loading: true\n                }));\n\n                _context2.next = 4;\n                return _regeneratorRuntime.awrap(postApiProviders(data));\n\n              case 4:\n                response = _context2.sent;\n\n                if (response.data.success) {\n                  _this2.props.setSnackbar({\n                    open: true,\n                    message: response.data.message\n                  });\n\n                  _this2.setState(_objectSpread(_objectSpread({}, _this2.state), {}, {\n                    loading: false\n                  }));\n                } else {\n                  console.log(response);\n                  errors = (_response$data = response.data) != null ? _response$data : undefined;\n                  messages = '';\n\n                  if (errors !== undefined && errors.error !== undefined && errors.error.response && errors.error.response.data !== undefined && errors.error.response.data.errors !== undefined) {\n                    Object.keys(errors.error.response.data.errors).map(function (err) {\n                      console.log(err);\n                      var field = err == \"file\" ? \"Anexo\" : err;\n                      messages += \"O \" + field.toUpperCase() + \" \" + errors.error.response.data.errors[err][0] + \" \\n\";\n                    });\n                  } else {\n                    messages = 'Houve um problema em sua requisição!';\n                  }\n\n                  _this2.setState(_objectSpread(_objectSpread({}, _this2.state), {}, {\n                    loading: false\n                  }));\n\n                  _this2.props.setSnackbar({\n                    open: true,\n                    message: messages\n                  });\n                }\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      };\n\n      var validateFields = function validateFields(fields, values) {\n        var campo = undefined;\n        fields.reverse().map(function (v, k) {\n          v.fields.reverse().map(function (v1, k1) {\n            var value = values[v1.column];\n\n            if (v1.validate !== undefined) {\n              if (v1.validate.number !== undefined) {\n                if (/^[-]?\\d+$/.test(value) == false) campo = {\n                  id: v1.column,\n                  message: \"O Campo \" + v1.label + \" \\xE9 somente n\\xFAmeros \"\n                };\n              }\n\n              if (v1.validate.decimal !== undefined) {\n                if (/^\\s*-?(\\d+(\\.\\d{1,2})?|\\.\\d{1,2})\\s*$/.test(value) == false) campo = {\n                  id: v1.column,\n                  message: \"O Campo \" + v1.label + \" \\xE9 somente n\\xFAmeros e ponto \"\n                };\n              }\n\n              if (v1.validate.max !== undefined) {\n                if (value.length > v1.validate.max) campo = {\n                  id: v1.column,\n                  message: \"O Campo \" + v1.label + \", tamanho m\\xE1ximo de \" + v1.validate.max + \" caracteres ex\\xEAdido\"\n                };\n              }\n\n              if (v1.validate.min !== undefined) {\n                if (value.length < v1.validate.min) campo = {\n                  id: v1.column,\n                  message: \"O Campo \" + v1.label + \", tamanho minimo de \" + v1.validate.min + \" caracteres.\"\n                };\n              }\n\n              if (v1.validate.required !== undefined) {\n                if (value == \"Selecione\") {\n                  campo = {\n                    id: v1.column,\n                    message: \"O Campo \" + v1.label + \" \\xE9 inv\\xE1lido \"\n                  };\n                }\n\n                if (value.length == 0) campo = {\n                  id: v1.column,\n                  message: \"O Campo \" + v1.label + \" \\xE9 obrigat\\xF3rio\"\n                };\n              }\n            }\n\n            if (v1.validateHandler !== undefined) {\n              if (v1.validateHandler(value) == false) campo = {\n                id: v1.column,\n                message: \"O Campo \" + v1.label + \"  \\xE9 inv\\xE1lido \"\n              };\n            }\n          });\n        });\n        campo !== undefined ? _this2.props.setSnackbar({\n          open: true,\n          message: campo.message\n        }) : '';\n        return campo === undefined ? true : false;\n      };\n\n      var flexBasis = '22%';\n      var forms = [{\n        title: 'Dados Básicos',\n        fields: [{\n          column: 'active',\n          label: 'Ativo',\n          type: 'checkbox',\n          value: 1,\n          disabled: true,\n          flexBasis: \"100%\"\n        }, {\n          column: 'teste',\n          label: 'Ativo',\n          type: 'custom',\n          component: React.createElement(HomeIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 82\n            }\n          })\n        }, {\n          column: 'providertype_id',\n          label: 'Tipo Fornecedor',\n          type: 'select',\n          json: true,\n          valueLabel: \"name\",\n          values: this.state.providertypes,\n          validate: {\n            required: true\n          },\n          flexBasis: flexBasis\n        }, {\n          column: 'type',\n          label: 'Empresa',\n          type: 'select',\n          json: true,\n          valueLabel: \"value\",\n          values: [{\n            id: 1,\n            value: \"Matriz\"\n          }, {\n            id: 0,\n            value: \"Filial\"\n          }],\n          validate: {\n            required: true\n          },\n          flexBasis: flexBasis\n        }, {\n          column: 'matriz_id',\n          label: 'Matriz',\n          type: 'select',\n          json: true,\n          values: this.state.data,\n          flexBasis: flexBasis,\n          style: {\n            width: '220px'\n          }\n        }, {\n          column: 'cnpj',\n          label: 'CNPJ',\n          type: 'text',\n          mask: InputCnpj,\n          validate: {\n            min: 11,\n            number: true,\n            required: true\n          },\n          validateHandler: validaCnpj,\n          flexBasis: '33%',\n          helperText: \"o valor digitado é inválido\"\n        }, {\n          column: 'company_name',\n          label: 'Razão Social',\n          type: 'text',\n          validate: {\n            max: 50,\n            required: true\n          },\n          flexBasis: flexBasis\n        }, {\n          column: 'fantasy_name',\n          label: 'Nome Fantasia',\n          type: 'text',\n          validate: {\n            max: 50,\n            required: true\n          },\n          flexBasis: '33%'\n        }, {\n          column: 'anexo',\n          label: 'Documento',\n          type: 'file',\n          flexBasis: flexBasis\n        }, {\n          column: 'logo',\n          label: 'Logo marca',\n          type: 'file',\n          validate: {\n            required: true\n          },\n          flexBasis: flexBasis\n        }]\n      }, {\n        id: 'addr',\n        title: 'Endereço',\n        fields: [{\n          column: 'addr_clone',\n          label: 'Clonar Matriz',\n          type: 'checkbox',\n          flexBasis: \"100%\"\n        }, {\n          column: 'zipcode',\n          label: 'CEP',\n          type: 'text',\n          mask: InputCep,\n          validate: {\n            max: 9,\n            required: true\n          },\n          flexBasis: '9%'\n        }, {\n          column: 'street',\n          label: 'Endereço',\n          validate: {\n            max: 100,\n            required: true\n          },\n          type: 'text',\n          flexBasis: flexBasis\n        }, {\n          column: 'additional',\n          label: 'Complemento',\n          type: 'text',\n          flexBasis: flexBasis\n        }, {\n          column: 'uf',\n          label: 'Estado',\n          type: 'select',\n          validate: {\n            required: true\n          },\n          values: [\"Acre\", \"Alagoas\", \"Amazonas\", \"Amapá\", \"Bahia\", \"Ceará\", \"Brasília\", \"Espírito Santo\", \"Goiás\", \"Maranhão\", \"Minas Gerais\", \"Mato Grosso do Sul\", \"Mato Grosso\", \"Pará\", \"Paraíba\", \"Pernambuco\", \"Piauí\", \"Paraná\", \"Rio de Janeiro\", \"Rio Grande do Norte\", \"Rondônia\", \"Roraima\", \"Rio Grande do Sul\", \"Santa Catarina\", \"Sergipe\", \"São Paulo\", \"Tocantins\"],\n          flexBasis: flexBasis,\n          style: {\n            minWidth: \"192px\"\n          }\n        }, {\n          column: 'city',\n          label: 'Cidade',\n          type: 'text',\n          validate: {\n            max: 100,\n            required: true\n          },\n          flexBasis: flexBasis\n        }]\n      }, {\n        title: 'Contato',\n        fields: [{\n          column: 'contact_clone',\n          label: 'Clonar Matriz',\n          type: 'checkbox',\n          flexBasis: \"100%\"\n        }, {\n          column: 'phone1',\n          label: 'Contato',\n          type: 'text',\n          mask: InputPhone,\n          validate: {\n            max: 15,\n            required: true\n          },\n          flexBasis: '20%'\n        }, {\n          column: 'phone2',\n          label: 'Contato alternativo',\n          type: 'text',\n          mask: InputPhone,\n          validate: {\n            max: 15\n          },\n          flexBasis: '20%'\n        }, {\n          column: 'email',\n          label: 'E-mail',\n          type: 'email',\n          validate: {\n            max: 100\n          },\n          validateHandler: validaEmail,\n          flexBasis: '20%'\n        }, {\n          column: 'site',\n          label: 'Site',\n          type: 'text',\n          validate: {\n            max: 100\n          },\n          flexBasis: '20%'\n        }]\n      }, {\n        title: 'Redes Sociais',\n        fields: [{\n          column: 'linkedin',\n          label: 'Usuário do LinkedIn',\n          type: 'text',\n          validate: {\n            max: 100,\n            required: true\n          },\n          flexBasis: '20%'\n        }, {\n          column: 'facebook',\n          label: 'Usuário do Facebook',\n          type: 'text',\n          validate: {\n            max: 100,\n            required: true\n          },\n          flexBasis: '20%'\n        }, {\n          column: 'instagram',\n          label: 'Usuário do Instagram',\n          type: 'text',\n          validate: {\n            max: 100,\n            required: true\n          },\n          flexBasis: '20%'\n        }]\n      }, {\n        title: 'Contrato Atual',\n        fields: [{\n          column: 'contract_clone',\n          label: 'Clonar Matriz',\n          type: 'checkbox',\n          flexBasis: \"100%\"\n        }, {\n          column: 'accession_date',\n          label: 'Data de Adesão - Início',\n          type: 'date',\n          validate: {\n            required: true\n          },\n          flexBasis: '20%'\n        }, {\n          column: 'end_date',\n          label: 'Data de Adesão - Fim',\n          type: 'date',\n          validate: {\n            required: true\n          },\n          flexBasis: '20%'\n        }, {\n          column: 'rate',\n          label: 'Taxa de Adesão',\n          type: 'number',\n          validate: {\n            decimal: true,\n            required: true\n          },\n          flexBasis: '20%'\n        }]\n      }];\n      return React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }\n      }, React.createElement(AppBar, {\n        position: \"static\",\n        style: {\n          padding: 10,\n          marginTop: 10,\n          marginBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }\n      }, React.createElement(HomeIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 25\n        }\n      }), \"  \", React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 39\n        }\n      }, \"Cadastro / Fornecedores\"))), React.createElement(LForms, {\n        forms: forms,\n        request: request,\n        validate: function validate(values) {\n          return validateFields(forms, values);\n        },\n        loading: this.state.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return CreateProviders;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    session: store.authReducer.data,\n    snackbar: store.appReducer.snackbar\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setSnackbar: setSnackbar\n  }, dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CreateProviders));","map":{"version":3,"sources":["C:/Users/Maou/Documents/Projetos/CLIENTES/RNF/Completo/client/src/pages/Providers/create/index.js"],"names":["React","Component","Fragment","connect","bindActionCreators","withRouter","AppBar","Paper","HomeIcon","Typography","Snackbar","LForms","setSnackbar","postApiProviders","getApiProviders","getApiProviderTypes","validaEmail","validaCnpj","isFutureData","InputCep","InputCnpj","InputPhone","Redirect","withSnackbar","CreateProviders","state","data","providertypes","states","type","active","setState","localStorage","setItem","closeSnack","event","reason","props","open","message","request","loading","response","success","console","log","errors","undefined","messages","error","Object","keys","map","err","field","toUpperCase","validateFields","fields","values","campo","reverse","v","k","v1","k1","value","column","validate","number","test","id","label","decimal","max","length","min","required","validateHandler","flexBasis","forms","title","disabled","component","json","valueLabel","style","width","mask","helperText","minWidth","padding","marginTop","marginBottom","mapStateToProps","store","session","authReducer","snackbar","appReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport LForms from '../../../components/Forms';\r\n//\r\nimport { setSnackbar } from '../../../actions/appActions'\r\nimport { postApiProviders, getApiProviders, getApiProviderTypes } from '../../../providers/api'\r\nimport { validaEmail, validaCnpj, isFutureData } from '../../../providers/commonMethods'\r\n\r\nimport { InputCep, InputCnpj, InputPhone } from '../../../providers/masks'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { withSnackbar  } from 'notistack';\r\nclass CreateProviders extends Component {\r\n    \r\n    state = {\r\n        data: [],\r\n        providertypes: [],\r\n        states: []\r\n    }\r\n    async componentDidMount() {\r\n        const data = await getApiProviders({type: \"Matriz\", active: 1});\r\n        const providertypes = await getApiProviderTypes();\r\n        this.setState({...this.state, data: data.data, providertypes: providertypes.data});\r\n        localStorage.setItem(\"sessionTime\", 900);\r\n\r\n    }\r\n\r\n    render() {\r\n        //console.log(this.state.data)\r\n         // to use snackbar Provider\r\n        const closeSnack = (event, reason) => {\r\n            if (reason === 'clickaway') {\r\n                return;\r\n            }\r\n            this.props.setSnackbar({ open: false, message: \"\" });\r\n        };\r\n        \r\n        const request = async (data) => {\r\n            this.props.setSnackbar({ open: true, message: \"Validando Dados, Aguarde ...\", });\r\n            this.setState({ ...this.state, loading: true });\r\n\r\n            let response = await postApiProviders(data);\r\n            //console.log(response);\r\n            if (response.data.success) {\r\n                //this.props.enqueueSnackbar( response.data.message, { variant: 'success' });\r\n                this.props.setSnackbar({ open: true, message: response.data.message });\r\n                this.setState({ ...this.state, loading: false });\r\n                //this.props.history.goBack();\r\n            } else {\r\n                console.log(response)\r\n                let errors = response.data ?? undefined;\r\n\r\n                //let { errors } = response.data.error.response.data ?? {error: undefined}\r\n                let messages = '';\r\n                if(errors !== undefined && errors.error !== undefined && errors.error.response && errors.error.response.data !== undefined && errors.error.response.data.errors !== undefined){\r\n                    Object.keys(errors.error.response.data.errors).map(err => {\r\n                        console.log(err);\r\n                        let field = err == \"file\" ? \"Anexo\" : err\r\n                        messages += `O ${field.toUpperCase()} ${errors.error.response.data.errors[err][0]} \\n`;\r\n                    })\r\n                } else{\r\n                    messages = 'Houve um problema em sua requisição!'\r\n                }\r\n                //response.data.error.response.data.errors\r\n                //this.props.enqueueSnackbar( message, { variant: 'error' });\r\n                this.setState({ ...this.state, loading: false });\r\n                this.props.setSnackbar({ open: true, message: messages});\r\n            }\r\n\r\n        }\r\n        const validateFields = (fields, values) => {\r\n            //console.log(fields);\r\n            let campo = undefined;\r\n            fields.reverse().map((v,k) => {\r\n                v.fields.reverse().map((v1,k1)=>{\r\n                        let value = values[v1.column];\r\n                        if (v1.validate !== undefined) {\r\n                            if (v1.validate.number !== undefined) {\r\n                                if (/^[-]?\\d+$/.test(value) == false)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label} é somente números ` }\r\n                            }\r\n                            \r\n                            if(v1.validate.decimal !== undefined){\r\n                                if (/^\\s*-?(\\d+(\\.\\d{1,2})?|\\.\\d{1,2})\\s*$/.test(value) == false)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label} é somente números e ponto ` }\r\n                            }\r\n\r\n                            if (v1.validate.max !== undefined) {\r\n                                if (value.length > v1.validate.max)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label}, tamanho máximo de ${v1.validate.max} caracteres exêdido` };\r\n                            }\r\n\r\n                            if (v1.validate.min !== undefined) {\r\n                                if (value.length < v1.validate.min)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label}, tamanho minimo de ${v1.validate.min} caracteres.` };\r\n                            }\r\n\r\n                            if (v1.validate.required !== undefined) {\r\n                                if(value == \"Selecione\"){\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label} é inválido ` }\r\n                                }\r\n                                if (value.length == 0)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label} é obrigatório` };\r\n                            }\r\n                        }\r\n                        \r\n                        if(v1.validateHandler !== undefined){\r\n                            if (v1.validateHandler(value) == false)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label}  é inválido ` }\r\n                        }\r\n                    })\r\n                })\r\n                //console.log(campo)\r\n                campo !== undefined ? this.props.setSnackbar({ open: true, message: campo.message}) : '';\r\n\r\n                return campo === undefined ? true : false\r\n        }\r\n        const flexBasis = '22%';\r\n        const forms = [\r\n            {\r\n                title: 'Dados Básicos',\r\n                fields: [\r\n                    { column: 'active', label: 'Ativo', type: 'checkbox',  value: 1, disabled: true, flexBasis : \"100%\" },\r\n                    {column: 'teste', label: 'Ativo', type: 'custom',component: (<HomeIcon />)},\r\n                    {\r\n                        column: 'providertype_id', label: 'Tipo Fornecedor', type: 'select',\r\n                        json: true, \r\n                        valueLabel: \"name\",\r\n                        values: this.state.providertypes,//[{id: 1, value: \"Farmácia\"},{id: 2, value: \"Loja\"}],\r\n                        validate: {required: true },\r\n                        //value: \"Coordenador de usuários\",\r\n                        flexBasis\r\n                    },\r\n                    {\r\n                        column: 'type', label: 'Empresa', type: 'select',\r\n                        json: true, \r\n                        valueLabel: \"value\",\r\n                        values: [{id: 1, value: \"Matriz\"},{id: 0, value: \"Filial\"}],\r\n                        validate: {required: true },\r\n                        //value: \"Coordenador de usuários\",\r\n                        flexBasis\r\n                    },\r\n                    {\r\n                        column: 'matriz_id', label: 'Matriz', type: 'select',\r\n                        json: true,\r\n                        values: this.state.data,\r\n                        //validate: {required: true },\r\n                        //value: \"Coordenador de usuários\",\r\n                        flexBasis, style:{width: '220px'}\r\n                    },\r\n                    { column: 'cnpj', label: 'CNPJ', type: 'text', mask: InputCnpj, validate: {min: 11, number: true, required: true},validateHandler: validaCnpj, flexBasis: '33%', helperText: \"o valor digitado é inválido\" },\r\n                    { column: 'company_name', label: 'Razão Social', type: 'text', validate: {max: 50, required: true}, flexBasis },\r\n                    { column: 'fantasy_name', label: 'Nome Fantasia', type: 'text', validate: {max: 50, required: true}, flexBasis:'33%' },\r\n                    { column: 'anexo', label: 'Documento', type: 'file', flexBasis },\r\n                    { column: 'logo', label: 'Logo marca', type: 'file', validate: {required: true}, flexBasis },\r\n                    //\r\n                    //{ column: 'created_at', label: 'Data', type: 'date' },\r\n                ]\r\n            },\r\n            {\r\n                id: 'addr',\r\n                title: 'Endereço',\r\n                //flexFlow: 'row no-wrap',\r\n                //json: \"address\",\r\n                fields: [\r\n                    { column: 'addr_clone', label: 'Clonar Matriz', type: 'checkbox', flexBasis : \"100%\" },\r\n                    \r\n                    {\r\n                        column: 'zipcode', label: 'CEP', type: 'text', mask: InputCep, validate: {max: 9, required: true}, flexBasis: '9%',\r\n                        //handle: getAddress \r\n                    },\r\n                    { column: 'street', label: 'Endereço', validate: {max: 100, required: true}, type: 'text', flexBasis },\r\n                    { column: 'additional', label: 'Complemento', type: 'text', flexBasis },\r\n                    {\r\n                        column: 'uf', label: 'Estado', type: 'select',\r\n                        validate: {required: true },\r\n                        values: [\"Acre\", \"Alagoas\", \"Amazonas\", \"Amapá\", \"Bahia\", \"Ceará\", \"Brasília\", \"Espírito Santo\", \"Goiás\", \"Maranhão\", \"Minas Gerais\", \"Mato Grosso do Sul\", \"Mato Grosso\", \"Pará\", \"Paraíba\", \"Pernambuco\", \"Piauí\", \"Paraná\", \"Rio de Janeiro\", \"Rio Grande do Norte\", \"Rondônia\", \"Roraima\", \"Rio Grande do Sul\", \"Santa Catarina\", \"Sergipe\", \"São Paulo\", \"Tocantins\"],\r\n                        flexBasis, style:{minWidth: \"192px\"}\r\n                    },\r\n                    { column: 'city', label: 'Cidade', type: 'text', validate: {max: 100, required: true}, flexBasis },\r\n                ]\r\n            },\r\n            {\r\n                title: 'Contato',\r\n                //json: 'contact',\r\n                fields: [\r\n                    { column: 'contact_clone', label: 'Clonar Matriz', type: 'checkbox', flexBasis : \"100%\" },\r\n                    { column: 'phone1', label: 'Contato', type: 'text', mask: InputPhone, validate: {max: 15, required: true}, flexBasis: '20%' },\r\n                    { column: 'phone2', label: 'Contato alternativo', type: 'text', mask: InputPhone, validate: {max: 15}, flexBasis: '20%' },\r\n                    { column: 'email', label: 'E-mail', type: 'email', validate: {max: 100}, validateHandler: validaEmail, flexBasis: '20%' },\r\n                    { column: 'site', label: 'Site', type: 'text', validate: {max: 100}, flexBasis: '20%' },\r\n                ]\r\n            },\r\n            {\r\n                title: 'Redes Sociais',\r\n                //json: 'contact',\r\n                fields: [\r\n                    { column: 'linkedin', label: 'Usuário do LinkedIn', type: 'text', validate: {max: 100, required: true}, flexBasis: '20%' },\r\n                    { column: 'facebook', label: 'Usuário do Facebook', type: 'text', validate: {max: 100, required: true}, flexBasis: '20%' },\r\n                    { column: 'instagram', label: 'Usuário do Instagram', type: 'text', validate: {max: 100, required: true}, flexBasis: '20%' },\r\n                ]\r\n            },\r\n            {\r\n                title: 'Contrato Atual',\r\n                //json: 'contact',\r\n                fields: [\r\n                    { column: 'contract_clone', label: 'Clonar Matriz', type: 'checkbox', flexBasis : \"100%\" },\r\n                    { column: 'accession_date', label: 'Data de Adesão - Início', type: 'date', validate: {required: true}, flexBasis: '20%' },\r\n                    { column: 'end_date', label: 'Data de Adesão - Fim', type: 'date', validate: {required: true}, flexBasis: '20%' },\r\n                    { column: 'rate', label: 'Taxa de Adesão', type: 'number', validate: {decimal: true, required: true}, flexBasis: '20%' },\r\n                ]\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <Fragment>\r\n                <AppBar position=\"static\" style={{ padding: 10, marginTop: 10, marginBottom: 10 }}>\r\n                    <Typography variant=\"h6\">\r\n                        <HomeIcon />  <span>Cadastro / Fornecedores</span>\r\n                    </Typography>\r\n                </AppBar>\r\n                <LForms forms={forms}\r\n                    request={request} \r\n                    validate={(values) => { return validateFields(forms,values)}}\r\n                    loading={this.state.loading}\r\n                />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = store => ({\r\n    session: store.authReducer.data,\r\n    snackbar: store.appReducer.snackbar\r\n});\r\nconst mapDispatchToProps = dispatch =>\r\n    bindActionCreators({ setSnackbar }, dispatch);\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CreateProviders))\r\n"]},"metadata":{},"sourceType":"module"}