{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\Maou\\\\Documents\\\\Projetos\\\\CLIENTES\\\\RNF\\\\Completo\\\\client\\\\src\\\\components\\\\Layout\\\\Dialogs\\\\FullScreenCartDialog.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport CardDialogLoading from \"../../Loading/CardDialogLoading\";\nimport { StyledAppBar } from \"../Header/style\";\nimport Dialog from '@material-ui/core/Dialog';\nimport { setSnackbar } from \"../../../actions/appActions\";\nimport { setDialog, setCart } from \"../../../actions/cartAction\";\nimport { checkImageUrl } from \"../../../providers/commonMethods\";\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Slide from '@material-ui/core/Slide';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ImageIcon from '@material-ui/icons/Image';\nimport WorkIcon from '@material-ui/icons/Work';\nimport { FormatAlignLeftSharp } from '@material-ui/icons';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      marginTop: 84\n    },\n    appBar: {\n      position: 'relative'\n    },\n    title: {\n      marginLeft: theme.spacing(2),\n      flex: 1\n    },\n    media: {\n      height: 140\n    }\n  };\n});\nvar Transition = React.forwardRef(function Transition(props, ref) {\n  return React.createElement(Slide, _extends({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }\n  }));\n});\n\nfunction FullScreenCartDialog(props) {\n  var _this = this;\n\n  var classes = useStyles();\n  var hostUrl = \"https://services.yamitec.com\";\n\n  var handleClose = function handleClose() {\n    props.setDialog(false);\n  };\n\n  var cart = props.cart,\n      cDialog = props.cDialog;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      remove = _useState2[0],\n      setRemove = _useState2[1];\n\n  var closeSnack = function closeSnack(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    props.setSnackbar({\n      open: false,\n      message: \"\"\n    });\n  };\n\n  var doEffect = function doEffect() {\n    if (cart.length === 0 && JSON.parse(localStorage.getItem(\"cart\")) !== null) {\n      var cartItems = JSON.parse(localStorage.getItem(\"cart\"));\n      props.setCart(cartItems);\n    }\n  };\n\n  var _onLongPress = function onLongPress(item) {\n    var cartItems = JSON.parse(localStorage.getItem(\"cart\"));\n    if (remove) cartItems.map(function (ci, index) {\n      if (ci.Id === item.Id) {\n        cartItems.splice(index, 1);\n        props.setCart(cartItems);\n        localStorage.setItem(\"cart\", JSON.stringify(cartItems));\n        if (cartItems.length === 0) localStorage.removeItem(\"cart\");\n        props.setSnackbar({\n          open: true,\n          message: \"Item \\\"\" + item.Nome + \"\\\" removido.\"\n        });\n        setTimeout(setRemove(true), 2000);\n      }\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, React.createElement(Dialog, {\n    fullScreen: true,\n    open: cDialog,\n    onClose: function onClose() {\n      return handleClose();\n    },\n    TransitionComponent: Transition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, React.createElement(StyledAppBar, {\n    position: \"fixed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    onClick: function onClick() {\n      return handleClose();\n    },\n    \"aria-label\": \"close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  })), React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"Meu Carrinho\"))), cart.length === 0 ? React.createElement(Text, {\n    style: {\n      marginTop: 150\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 34\n    }\n  }, \"Vazio\") : React.createElement(List, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, cart.map(function (item, index) {\n    return React.createElement(TouchableOpacity, {\n      style: styles.button,\n      onLongPress: function onLongPress() {\n        _onLongPress(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, React.createElement(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, React.createElement(ListItemAvatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, React.createElement(Avatar, {\n      src: checkImageUrl(item.thumb) ? item.thumb : checkImageUrl(hostUrl + \"/\" + item.thumb) ? hostUrl + \"/\" + item.thumb : hostUrl + \"/public/assets/images/favicon.png\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    })), React.createElement(ListItemText, {\n      primary: item.Nome,\n      secondary: item.price,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    })));\n  })), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    open: props.snackbar.open,\n    onClose: closeSnack,\n    autoHideDuration: 3000,\n    message: props.snackbar.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    paddingHorizontal: 10\n  },\n  button: {\n    alignItems: \"center\",\n    padding: 10\n  },\n  countContainer: {\n    alignItems: \"center\",\n    padding: 10\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    snackbar: store.appReducer.snackbar,\n    cDialog: store.cartsReducer.cartDialog,\n    cart: store.cartsReducer.cart\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setSnackbar: setSnackbar,\n    setDialog: setDialog,\n    setCart: setCart\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FullScreenCartDialog);","map":{"version":3,"sources":["C:/Users/Maou/Documents/Projetos/CLIENTES/RNF/Completo/client/src/components/Layout/Dialogs/FullScreenCartDialog.js"],"names":["React","useState","useEffect","connect","bindActionCreators","CardDialogLoading","StyledAppBar","Dialog","setSnackbar","setDialog","setCart","checkImageUrl","Toolbar","Slide","Snackbar","makeStyles","Button","Card","CardActionArea","CardActions","CardContent","CardMedia","Typography","IconButton","CloseIcon","List","ListItem","ListItemText","ListItemAvatar","Avatar","ImageIcon","WorkIcon","FormatAlignLeftSharp","useStyles","theme","root","marginTop","appBar","position","title","marginLeft","spacing","flex","media","height","Transition","forwardRef","props","ref","FullScreenCartDialog","classes","hostUrl","handleClose","cart","cDialog","remove","setRemove","closeSnack","event","reason","open","message","doEffect","length","JSON","parse","localStorage","getItem","cartItems","onLongPress","item","map","ci","index","Id","splice","setItem","stringify","removeItem","Nome","setTimeout","styles","button","thumb","price","vertical","horizontal","snackbar","StyleSheet","create","container","justifyContent","paddingHorizontal","alignItems","padding","countContainer","mapStateToProps","store","appReducer","cartsReducer","cartDialog","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\nimport CardDialogLoading from '../../Loading/CardDialogLoading'\r\nimport { StyledAppBar } from '../Header/style'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { setSnackbar } from '../../../actions/appActions'\r\nimport { setDialog, setCart } from '../../../actions/cartAction'\r\n\r\nimport { checkImageUrl } from '../../../providers/commonMethods'\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport { FormatAlignLeftSharp } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: 84,\r\n  },\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction FullScreenCartDialog(props) {\r\n  const classes = useStyles();\r\n  let hostUrl = \"https://services.yamitec.com\";\r\n  const handleClose = () => {\r\n    props.setDialog(false);\r\n  };\r\n\r\n  const { cart, cDialog } = props;\r\n\r\n  const [remove, setRemove] = useState(true);\r\n\r\n  const closeSnack = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    props.setSnackbar({ open: false, message: \"\" });\r\n  };\r\n\r\n  const doEffect = () => {\r\n    if (cart.length === 0 && JSON.parse(localStorage.getItem(\"cart\")) !== null) {\r\n      let cartItems = JSON.parse(localStorage.getItem(\"cart\"));\r\n      //cartItems.push(item);\r\n      //localStorage.setItem(\"cart\", JSON.stringify(cartItems));\r\n      props.setCart(cartItems)\r\n    }\r\n  }\r\n  //localStorage.removeItem(\"cart\")\r\n  const onLongPress = (item) => {\r\n\r\n    let cartItems = JSON.parse(localStorage.getItem(\"cart\"));\r\n    if(remove)\r\n      cartItems.map((ci, index) => {\r\n        if (ci.Id === item.Id) {\r\n          cartItems.splice(index, 1);\r\n          props.setCart(cartItems);\r\n          localStorage.setItem(\"cart\", JSON.stringify(cartItems));\r\n          if(cartItems.length === 0)\r\n            localStorage.removeItem(\"cart\");\r\n          props.setSnackbar({ open: true, message: `Item \"${item.Nome}\" removido.` })\r\n          setTimeout(setRemove(true), 2000)\r\n        }\r\n    });\r\n\r\n\r\n  }\r\n  return (\r\n    <div>\r\n      <Dialog fullScreen open={cDialog} onClose={() => handleClose()} TransitionComponent={Transition}>\r\n        <StyledAppBar position=\"fixed\">\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={() => handleClose()} aria-label=\"close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Meu Carrinho\r\n            </Typography>\r\n          </Toolbar>\r\n        </StyledAppBar>\r\n        { (cart).length === 0 ? (<Text style={{marginTop: 150}}>Vazio</Text>) : (\r\n        <List className={classes.root}>\r\n          {(cart).map((item, index) => (\r\n            <TouchableOpacity style={styles.button} onLongPress={() => { onLongPress(item) }} >\r\n              <ListItem>\r\n                <ListItemAvatar>\r\n                  <Avatar src={checkImageUrl(item.thumb) ? item.thumb : checkImageUrl(hostUrl + \"/\" + item.thumb) ? hostUrl + \"/\" + item.thumb : hostUrl + \"/public/assets/images/favicon.png\"} />\r\n                </ListItemAvatar>\r\n                <ListItemText primary={item.Nome} secondary={item.price} />\r\n              </ListItem>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </List>)}\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n          open={props.snackbar.open}\r\n          onClose={closeSnack}\r\n          autoHideDuration={3000}\r\n          message={props.snackbar.message}\r\n        />\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    paddingHorizontal: 10\r\n  },\r\n  button: {\r\n    alignItems: \"center\",\r\n    //backgroundColor: \"#DDDDDD\",\r\n    padding: 10\r\n  },\r\n  countContainer: {\r\n    alignItems: \"center\",\r\n    padding: 10\r\n  }\r\n});\r\nconst mapStateToProps = store => ({\r\n  snackbar: store.appReducer.snackbar,\r\n  cDialog: store.cartsReducer.cartDialog,\r\n  cart: store.cartsReducer.cart\r\n});\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({ setSnackbar, setDialog, setCart }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FullScreenCartDialog)\r\n"]},"metadata":{},"sourceType":"module"}